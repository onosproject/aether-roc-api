# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-1.0

components:
  parameters:
    target:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: target (device in onos-config)
      example: internal
      in: path
      name: target
      required: true
  requestBodies:
    RequestBodyRbacV100targetRbac:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RbacV100targetRbac'
    RequestBodyRbacV100targetRbacGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RbacV100targetRbacGroup'
    RequestBodyRbacV100targetRbacGroupgroupidRole:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RbacV100targetRbacGroupgroupidRole'
    RequestBodyRbacV100targetRbacRole:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RbacV100targetRbacRole'
    RequestBodyRbacV100targetRbacRoleroleidPermission:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RbacV100targetRbacRoleroleidPermission'
  schemas:
    RbacV100targetRbac:
      properties:
        ListRbacV100targetRbacGroup:
          items:
            $ref: '#/components/schemas/RbacV100targetRbacGroup'
          title: ItemRbacV100targetRbacGroup
          type: array
          description: Group
        ListRbacV100targetRbacRole:
          items:
            $ref: '#/components/schemas/RbacV100targetRbacRole'
          title: ItemRbacV100targetRbacRole
          description: Role
          type: array
      title: RbacV100targetRbac
      type: object
    RbacV100targetRbacGroup:
      properties:
        ListRbacV100targetRbacGroupgroupidRole:
          items:
            $ref: '#/components/schemas/RbacV100targetRbacGroupgroupidRole'
          title: ListRbacV100targetRbacGroupgroupidRole
          type: array
          description: Role
        description:
          title: description
          type: string
          description: Rbac_Rbac_Group
        groupid:
          title: groupid
          type: string
          description: Rbac_Rbac_Group
      type: object
    RbacV100targetRbacGroupgroupidRole:
      properties:
        description:
          title: description
          type: string
          description: Rbac_Rbac_Group_Role
        roleid:
          title: roleid
          type: string
          description: Rbac_Rbac_Group_Role
      type: object
    RbacV100targetRbacRole:
      properties:
        RbacV100targetRbacRoleroleidPermission:
          $ref: '#/components/schemas/RbacV100targetRbacRoleroleidPermission'
        description:
          title: description
          type: string
          description: Rbac_Rbac_Role
        roleid:
          title: roleid
          type: string
          description: Rbac_Rbac_Role
      type: object
    RbacV100targetRbacRoleroleidPermission:
      properties:
        leaf-list-noun:
          items:
            title: noun
            type: string
          title: leaf-list-noun
          type: array
          description: Rbac_Rbac_Role_Permission
        operation:
          title: operation
          type: string
          enum:
            - UNSET
            - ALL
            - CREATE
            - READ
          description: Rbac_Rbac_Role_Permission
        type:
          title: type
          type: string
          enum:
            - UNSET
            - CONFIG
            - GRPC
          description: Rbac_Rbac_Role_Permission
      title: RbacV100targetRbacRoleroleidPermission
      type: object
      description: Rbac_Rbac_Role
info:
  title: Rbac onos-config model plugin
  version: 1.0.0
  description:
  termsOfService: https://opennetworking.org/wp-content/uploads/2019/02/ONF-Licensing-and-IPR-FAQ-2020-06.pdf
  contact:
    name: Open Networking Foundation
    email: info@opennetworking.org
    url: https://opennetworking.org
  license:
    name: LicenseRef-ONF-Member-1.0
    url: https://opennetworking.org/wp-content/uploads/2020/06/ONF-Member-Only-Software-License-v1.0.pdf
servers:
  - url: http://aether-roc-api
openapi: 3.0.0
paths:
  /rbac/v1.0.0/{target}/rbac:
    delete:
      operationId: deleteRbacV100targetRbac
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbacV100targetRbac
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacV100targetRbac'
          description: GET OK 200
      summary: GET /rbac/v1.0.0/{target}/rbac Generated from YANG model
      tags:
      - RbacV100target
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postRbacV100targetRbac
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyRbacV100targetRbac'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
  /rbac/v1.0.0/{target}/rbac/group/{groupid}:
    delete:
      operationId: deleteRbacV100targetRbacGroup
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbacV100targetRbacGroup
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacV100targetRbacGroup'
          description: GET OK 200
      summary: GET /rbac/v1.0.0/{target}/rbac/group Generated from YANG model
      tags:
      - RbacV100targetRbacGroupgroupid
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {groupid}
      in: path
      name: groupid
      required: true
    post:
      operationId: postRbacV100targetRbacGroup
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyRbacV100targetRbacGroup'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
  /rbac/v1.0.0/{target}/rbac/group/{groupid}/role/{roleid}:
    delete:
      operationId: deleteRbacV100targetRbacGroupgroupidRole
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbacV100targetRbacGroupgroupidRole
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacV100targetRbacGroupgroupidRole'
          description: GET OK 200
      summary: GET /rbac/v1.0.0/{target}/rbac/group/{groupid}/role Generated from YANG model
      tags:
      - RbacV100targetRbacGroupgroupidRoleroleid
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {groupid}
      in: path
      name: groupid
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {roleid}
      in: path
      name: roleid
      required: true
    post:
      operationId: postRbacV100targetRbacGroupgroupidRole
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyRbacV100targetRbacGroupgroupidRole'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
  /rbac/v1.0.0/{target}/rbac/role/{roleid}:
    delete:
      operationId: deleteRbacV100targetRbacRole
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbacV100targetRbacRole
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacV100targetRbacRole'
          description: GET OK 200
      summary: GET /rbac/v1.0.0/{target}/rbac/role Generated from YANG model
      tags:
      - RbacV100targetRbacRoleroleid
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {roleid}
      in: path
      name: roleid
      required: true
    post:
      operationId: postRbacV100targetRbacRole
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyRbacV100targetRbacRole'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
  /rbac/v1.0.0/{target}/rbac/role/{roleid}/permission:
    delete:
      operationId: deleteRbacV100targetRbacRoleroleidPermission
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbacV100targetRbacRoleroleidPermission
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacV100targetRbacRoleroleidPermission'
          description: GET OK 200
      summary: GET /rbac/v1.0.0/{target}/rbac/role/{roleid}/permission Generated from YANG model
      tags:
      - RbacV100targetRbacRoleroleid
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {roleid}
      in: path
      name: roleid
      required: true
    post:
      operationId: postRbacV100targetRbacRoleroleidPermission
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyRbacV100targetRbacRoleroleidPermission'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
