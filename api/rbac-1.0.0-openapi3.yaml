# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-1.0

components:
  parameters:
    target:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
          example: rbac
      description: target (device in onos-config)
      in: path
      name: target
      required: true
  requestBodies:
    RequestBody_Rbac:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rbac'
    RequestBody_Rbac_Group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rbac_Group'
    RequestBody_Rbac_Group_Role:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rbac_Group_Role'
    RequestBody_Rbac_Role:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rbac_Role'
    RequestBody_Rbac_Role_Permission:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rbac_Role_Permission'
  schemas:
    AdditionalPropertyTarget:
      properties:
        target:
          type: string
      type: object
      description: Used for updates
    Rbac:
      properties:
        Group:
          items:
            $ref: '#/components/schemas/Rbac_Group'
          title: ItemRbac_Group
          type: array
        Role:
          items:
            $ref: '#/components/schemas/Rbac_Role'
          title: ItemRbac_Role
          type: array
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      title: Rbac
      type: object
    Rbac_Group:
      properties:
        Role:
          items:
            $ref: '#/components/schemas/Rbac_Group_Role'
          title: Role
          type: array
        description:
          maxLength: 100
          minLength: 1
          title: description
          type: string
        groupid:
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: groupid
          type: string
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      type: object
    Rbac_Group_Role:
      properties:
        description:
          maxLength: 100
          minLength: 1
          title: description
          type: string
        roleid:
          title: roleid
          type: string
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      type: object
    Rbac_Role:
      properties:
        Permission:
          $ref: '#/components/schemas/Rbac_Role_Permission'
        description:
          maxLength: 100
          minLength: 1
          title: description
          type: string
        roleid:
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: roleid
          type: string
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      type: object
    Rbac_Role_Permission:
      properties:
        leaf-list-noun:
          items:
            maxLength: 200
            minLength: 1
            pattern: /[a-zA-Z0-9\-/_.*?]*
            title: noun
            type: string
          title: leaf-list-noun
          type: array
        operation:
          enum:
          - ALL
          - CREATE
          - READ
          title: operation
          type: string
        type:
          enum:
          - CONFIG
          - GRPC
          title: type
          type: string
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      title: Rbac_Role_Permission
      type: object
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  license:
    name: LicenseRef-ONF-Member-1.0
    url: https://opennetworking.org/wp-content/uploads/2020/06/ONF-Member-Only-Software-License-v1.0.pdf
  termsOfService: https://opennetworking.org/wp-content/uploads/2019/02/ONF-Licensing-and-IPR-FAQ-2020-06.pdf
  title: Rbac onos-config model plugin
  version: 1.0.0
openapi: 3.0.0
paths:
  /rbac/v1.0.0/{target}/rbac:
    delete:
      operationId: deleteRbac
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbac
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac'
          description: GET OK 200
      summary: GET /rbac Generated from YANG model
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postRbac
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Rbac'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
  /rbac/v1.0.0/{target}/rbac/group/{groupid}:
    delete:
      operationId: deleteRbac_Group
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbac_Group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_Group'
          description: GET OK 200
      summary: GET /rbac/group Generated from YANG model
      tags:
      - Rbac_Group
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {groupid}
      in: path
      name: groupid
      required: true
    post:
      operationId: postRbac_Group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Rbac_Group'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
  /rbac/v1.0.0/{target}/rbac/group/{groupid}/role/{roleid}:
    delete:
      operationId: deleteRbac_Group_Role
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbac_Group_Role
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_Group_Role'
          description: GET OK 200
      summary: GET /rbac/group/{groupid}/role Generated from YANG model
      tags:
      - Rbac_Group_Role
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {groupid}
      in: path
      name: groupid
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {roleid}
      in: path
      name: roleid
      required: true
    post:
      operationId: postRbac_Group_Role
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Rbac_Group_Role'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
  /rbac/v1.0.0/{target}/rbac/role/{roleid}:
    delete:
      operationId: deleteRbac_Role
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbac_Role
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_Role'
          description: GET OK 200
      summary: GET /rbac/role Generated from YANG model
      tags:
      - Rbac_Role
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {roleid}
      in: path
      name: roleid
      required: true
    post:
      operationId: postRbac_Role
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Rbac_Role'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
  /rbac/v1.0.0/{target}/rbac/role/{roleid}/permission:
    delete:
      operationId: deleteRbac_Role_Permission
      responses:
        default:
          description: ""
      summary: DELETE Generated from YANG model
    get:
      operationId: getRbac_Role_Permission
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_Role_Permission'
          description: GET OK 200
      summary: GET /rbac/role/{roleid}/permission Generated from YANG model
      tags:
      - Rbac_Role
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {roleid}
      in: path
      name: roleid
      required: true
    post:
      operationId: postRbac_Role_Permission
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Rbac_Role_Permission'
      responses:
        "201":
          description: created
      summary: POST Generated from YANG model
servers:
  - description: Kubernetes Pod access point
    url: http://aether-roc-api
  - description: Production access point
    url: https://roc.aetherproject.org/aether-roc-api
  - description: Local access point
    url: http://localhost:8181
  - description: Local access point through nginx
    url: http://localhost:8183/aether-roc-api
