# SPDX-FileCopyrightText: 2022-present Intel Corporation
# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0
components:
  parameters:
    enterprise-id:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: enterprise-id (target in onos-config)
      in: path
      name: enterprise-id
      required: true
  requestBodies:
    RequestBody_Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    RequestBody_Application_Endpoint:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application_Endpoint'
    RequestBody_Application_Endpoint_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application_Endpoint_Mbr'
    RequestBody_Site:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site'
    RequestBody_Site_Connectivity-service:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Connectivity-service'
    RequestBody_Site_Connectivity-service_Core-4g:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Connectivity-service_Core-4g'
    RequestBody_Site_Connectivity-service_Core-5g:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Connectivity-service_Core-5g'
    RequestBody_Site_Device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Device'
    RequestBody_Site_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Device-group'
    RequestBody_Site_Device-group_Device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Device-group_Device'
    RequestBody_Site_Device-group_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Device-group_Mbr'
    RequestBody_Site_Device_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Device_State'
    RequestBody_Site_Imsi-definition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Imsi-definition'
    RequestBody_Site_Ip-domain:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Ip-domain'
    RequestBody_Site_Monitoring:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Monitoring'
    RequestBody_Site_Monitoring_Edge-device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Monitoring_Edge-device'
    RequestBody_Site_Sim-card:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Sim-card'
    RequestBody_Site_Slice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Slice'
    RequestBody_Site_Slice_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Slice_Device-group'
    RequestBody_Site_Slice_Filter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Slice_Filter'
    RequestBody_Site_Slice_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Slice_Mbr'
    RequestBody_Site_Slice_Priority-traffic-rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Slice_Priority-traffic-rule'
    RequestBody_Site_Small-cell:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Small-cell'
    RequestBody_Site_Upf:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Upf'
    RequestBody_Template:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template'
    RequestBody_Template_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template_Mbr'
    RequestBody_Traffic-class:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Traffic-class'
  schemas:
    AdditionalPropertiesUnchTarget:
      description: both the additional property 'unchanged' and the 'enterprise-id'
      properties:
        enterprise-id:
          description: an override of the enterprise-id (target)
          title: enterprise-id
          type: string
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertiesUnchTarget
      type: object
    AdditionalPropertyEnterprise-Id:
      description: Optionally specify a enterprise-id other than the default (only
        on PATCH method)
      properties:
        enterprise-id:
          description: an override of the enterprise-id (target)
          title: enterprise-id
          type: string
      title: AdditionalPropertyEnterprise-Id
      type: object
    AdditionalPropertyUnchanged:
      description: To optionally omit 'required' properties, add them to 'unchanged'
        list
      properties:
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertyUnchanged
      type: object
    Application:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: List of applications (single)
      properties:
        address:
          description: Address of this application. An IP address with subnet (IPv4
            or IPv6)
          title: address
          type: string
        application-id:
          description: ID for this application.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: application-id
          type: string
          x-go-type: ListKey
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint:
          $ref: '#/components/schemas/Application_Endpoint_List'
      required:
      - address
      - application-id
      title: Application
      type: object
      x-list-multiple: true
    Application_Endpoint:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: list for endpoint (single)
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint-id:
          description: Id of this endpoint
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: endpoint-id
          type: string
          x-go-type: ListKey
        mbr:
          $ref: '#/components/schemas/Application_Endpoint_Mbr'
        port-end:
          description: Last port in range
          maximum: 65535
          minimum: 0
          title: port-end
          type: integer
        port-start:
          description: First port in range
          maximum: 65535
          minimum: 0
          title: port-start
          type: integer
        protocol:
          default: TCP
          description: Protocol of this endpoint
          maxLength: 3
          minLength: 3
          pattern: TCP|UDP
          title: protocol
          type: string
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-class/tc:traffic-class-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/traffic-class/values
      required:
      - endpoint-id
      - port-start
      title: Application_Endpoint
      type: object
      x-list-multiple: true
      x-must:
      - ErrorMessage:
          Name: port-start must be less than or equal to port-end
        Name: number(./app:port-start) <= number(./app:port-end)
    Application_Endpoint_List:
      description: list for endpoint (list)
      items:
        $ref: '#/components/schemas/Application_Endpoint'
      type: array
      uniqueItems: true
      x-keys:
      - endpoint-id
      x-list-multiple: true
    Application_Endpoint_Mbr:
      description: Maximum bitrate
      properties:
        downlink:
          description: Per-Device per application MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-Device per-Application MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      title: Application_Endpoint_Mbr
      type: object
    Application_List:
      description: List of applications (list)
      items:
        $ref: '#/components/schemas/Application'
      type: array
      uniqueItems: true
      x-keys:
      - application-id
      x-list-multiple: true
    LeafRefOption:
      description: single label/value of the leafref option
      properties:
        label:
          description: label of the leafref option
          title: label
          type: string
        value:
          description: value of the leafref option
          title: value
          type: string
      type: object
    LeafRefOptions:
      description: List of label/value of leafref options
      items:
        $ref: '#/components/schemas/LeafRefOption'
      title: LeafRefOptions
      type: array
    Site:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyEnterprise-Id'
      description: List of site (single)
      properties:
        connectivity-service:
          $ref: '#/components/schemas/Site_Connectivity-service'
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device:
          $ref: '#/components/schemas/Site_Device_List'
        device-group:
          $ref: '#/components/schemas/Site_Device-group_List'
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        imsi-definition:
          $ref: '#/components/schemas/Site_Imsi-definition'
        ip-domain:
          $ref: '#/components/schemas/Site_Ip-domain_List'
        monitoring:
          $ref: '#/components/schemas/Site_Monitoring'
        sim-card:
          $ref: '#/components/schemas/Site_Sim-card_List'
        site-id:
          description: ID for this site.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: site-id
          type: string
          x-go-type: ListKey
        slice:
          $ref: '#/components/schemas/Site_Slice_List'
        small-cell:
          $ref: '#/components/schemas/Site_Small-cell_List'
        upf:
          $ref: '#/components/schemas/Site_Upf_List'
      required:
      - site-id
      title: Site
      type: object
      x-list-multiple: true
      x-must:
      - ErrorMessage:
          Name: a device group cannot be used in more than one slice in a site
        Name: count(site:slice[set-contains(following-sibling::site:slice/site:device-group/@site:device-group,
          site:device-group/@site:device-group)]/@site:slice-id) = 0
    Site_Connectivity-service:
      description: Connectivity to the mobile core
      properties:
        core-4g:
          $ref: '#/components/schemas/Site_Connectivity-service_Core-4g'
        core-5g:
          $ref: '#/components/schemas/Site_Connectivity-service_Core-5g'
      title: Site_Connectivity-service
      type: object
    Site_Connectivity-service_Core-4g:
      description: The 4g core endpoint
      properties:
        acc-prometheus-url:
          description: URL of ACC prometheus
          title: acc-prometheus-url
          type: string
        endpoint:
          description: Endpoint URL
          title: endpoint
          type: string
      title: Site_Connectivity-service_Core-4g
      type: object
    Site_Connectivity-service_Core-5g:
      description: The 5g core endpoint
      properties:
        acc-prometheus-url:
          description: URL of ACC prometheus
          title: acc-prometheus-url
          type: string
        endpoint:
          description: Endpoint URL
          title: endpoint
          type: string
      title: Site_Connectivity-service_Core-5g
      type: object
    Site_Device:
      description: List of devices (single)
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device-id:
          description: ID for this device.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: device-id
          type: string
          x-go-type: ListKey
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        imei:
          description: IMEI for this device
          maxLength: 16
          minLength: 14
          pattern: '[0-9]{14,16}'
          title: imei
          type: string
        sim-card:
          description: Link to simcard
          title: sim-card
          type: string
          x-leafref: ../../sim-card/sim-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/device/{device-id}/sim-card/values
        state:
          $ref: '#/components/schemas/Site_Device_State'
      required:
      - device-id
      title: Site_Device
      type: object
      x-list-multiple: true
      x-must: []
    Site_Device-group:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of device groups (single)
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device:
          $ref: '#/components/schemas/Site_Device-group_Device_List'
        device-group-id:
          description: ID for this device group.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: device-group-id
          type: string
          x-go-type: ListKey
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        ip-domain:
          description: |-
            Link to ip-domain settings that determine the pool of IP addresses,
            as well as the domain resolver settings to use
          title: ip-domain
          type: string
          x-leafref: ../../ip-domain/ip-domain-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/ip-domain/values
        mbr:
          $ref: '#/components/schemas/Site_Device-group_Mbr'
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-class/tc:traffic-class-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/traffic-class/values
      required:
      - device-group-id
      - traffic-class
      title: Site_Device-group
      type: object
      x-list-multiple: true
    Site_Device-group_Device:
      description: list of devices in this device-group (single)
      properties:
        device-id:
          description: Link to device
          title: device-id
          type: string
          x-go-type: ListKey
          x-leafref: ../../../device/device-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id}/device-id/values
        enable:
          default: true
          description: Enable this device
          title: enable
          type: boolean
      required:
      - device-id
      title: Site_Device-group_Device
      type: object
      x-list-multiple: true
    Site_Device-group_Device_List:
      description: list of devices in this device-group (list)
      items:
        $ref: '#/components/schemas/Site_Device-group_Device'
      type: array
      uniqueItems: true
      x-keys:
      - device-id
      x-list-multiple: true
    Site_Device-group_List:
      description: List of device groups (list)
      items:
        $ref: '#/components/schemas/Site_Device-group'
      type: array
      uniqueItems: true
      x-keys:
      - device-group-id
      x-list-multiple: true
    Site_Device-group_Mbr:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: Maximum bitrate
      properties:
        downlink:
          description: Per-device MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-device MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      required:
      - downlink
      - uplink
      title: Site_Device-group_Mbr
      type: object
    Site_Device_List:
      description: List of devices (list)
      items:
        $ref: '#/components/schemas/Site_Device'
      type: array
      uniqueItems: true
      x-keys:
      - device-id
      x-list-multiple: true
    Site_Device_State:
      description: read only attributes of device
      properties:
        connected:
          description: the connected status (Yes|No|Idle)
          pattern: Yes|No|Idle
          readOnly: true
          title: connected
          type: string
        ip-address:
          description: the ip address assigned to the device
          readOnly: true
          title: ip-address
          type: string
        last-connected:
          description: The time in UTC that the device was last connected
          pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
          readOnly: true
          title: last-connected
          type: string
      title: Site_Device_State
      type: object
    Site_Imsi-definition:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: container for imsi-defination
      properties:
        enterprise:
          description: enterprise-specific identifier
          format: int32
          maximum: 999
          minimum: 0
          title: enterprise
          type: integer
        format:
          description: IMSI format specifier, describes how fields are packed into
            an IMSI. Must be exactly 15 characters long. For example, CCCNNNEEESSSSSS.
          maxLength: 15
          minLength: 15
          title: format
          type: string
        mcc:
          description: mobile country code
          pattern: '[0-9]{3}'
          title: mcc
          type: string
        mnc:
          description: mobile network code
          pattern: '[0-9]{2,3}'
          title: mnc
          type: string
      required:
      - enterprise
      - format
      - mcc
      - mnc
      title: Site_Imsi-definition
      type: object
    Site_Ip-domain:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of ip domains (single)
      properties:
        admin-status:
          default: ENABLE
          description: administrative status
          maxLength: 16
          pattern: ENABLE|MAINTENANCE|DISABLE
          title: admin-status
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        dnn:
          description: DNN/APN
          maxLength: 32
          minLength: 1
          title: dnn
          type: string
        dns-primary:
          description: primary dns server name
          title: dns-primary
          type: string
        dns-secondary:
          description: secondary dns server name
          title: dns-secondary
          type: string
        ip-domain-id:
          description: ID for this ip domain.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: ip-domain-id
          type: string
          x-go-type: ListKey
        mtu:
          default: 1492
          description: maximum transmission unit
          maximum: 65535
          minimum: 0
          title: mtu
          type: integer
        subnet:
          description: subnet to allocate ip addresses from
          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))
          title: subnet
          type: string
      required:
      - dnn
      - ip-domain-id
      - subnet
      title: Site_Ip-domain
      type: object
      x-list-multiple: true
    Site_Ip-domain_List:
      description: List of ip domains (list)
      items:
        $ref: '#/components/schemas/Site_Ip-domain'
      type: array
      uniqueItems: true
      x-keys:
      - ip-domain-id
      x-list-multiple: true
    Site_List:
      description: List of site (list)
      items:
        $ref: '#/components/schemas/Site'
      type: array
      uniqueItems: true
      x-keys:
      - site-id
      x-list-multiple: true
    Site_Monitoring:
      description: container for monitoring
      properties:
        edge-cluster-prometheus-url:
          description: URL of edge cluster prometheus
          title: edge-cluster-prometheus-url
          type: string
        edge-device:
          $ref: '#/components/schemas/Site_Monitoring_Edge-device_List'
        edge-monitoring-prometheus-url:
          description: URL of monitoring prometheus
          title: edge-monitoring-prometheus-url
          type: string
      title: Site_Monitoring
      type: object
    Site_Monitoring_Edge-device:
      description: List of edge monitoring devices (single)
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        edge-device-id:
          description: Id of edge monitoring device
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: edge-device-id
          type: string
          x-go-type: ListKey
      required:
      - edge-device-id
      title: Site_Monitoring_Edge-device
      type: object
      x-list-multiple: true
    Site_Monitoring_Edge-device_List:
      description: List of edge monitoring devices (list)
      items:
        $ref: '#/components/schemas/Site_Monitoring_Edge-device'
      type: array
      uniqueItems: true
      x-keys:
      - edge-device-id
      x-list-multiple: true
    Site_Sim-card:
      description: List of sim cards (single)
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enable:
          default: true
          description: Enable this Sim-Card. Sim-Cards that are disabled will not
            be usable in any device in any slice.
          title: enable
          type: boolean
        iccid:
          description: ICCID for this sim card
          maxLength: 22
          minLength: 19
          pattern: '[0-9]{18,21}[0-9A-F]'
          title: iccid
          type: string
        imsi:
          description: IMSI for this sim card
          maxLength: 15
          minLength: 14
          pattern: '[0-9]{14,15}'
          title: imsi
          type: string
        sim-id:
          description: ID for this sim card.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: sim-id
          type: string
          x-go-type: ListKey
      required:
      - sim-id
      title: Site_Sim-card
      type: object
      x-list-multiple: true
      x-must: []
    Site_Sim-card_List:
      description: List of sim cards (list)
      items:
        $ref: '#/components/schemas/Site_Sim-card'
      type: array
      uniqueItems: true
      x-keys:
      - sim-id
      x-list-multiple: true
    Site_Slice:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of Slices (single)
      properties:
        connectivity-service:
          description: The type of connectivity service 4g/5g to use with the slice
          enum:
          - 4g
          - 5g
          title: connectivity-service
          type: string
        default-behavior:
          description: Default behavior if no filter rules match
          maxLength: 20
          pattern: DENY-ALL|ALLOW-ALL|ALLOW-PUBLIC
          title: default-behavior
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device-group:
          $ref: '#/components/schemas/Site_Slice_Device-group_List'
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        filter:
          $ref: '#/components/schemas/Site_Slice_Filter_List'
        mbr:
          $ref: '#/components/schemas/Site_Slice_Mbr'
        priority-traffic-rule:
          $ref: '#/components/schemas/Site_Slice_Priority-traffic-rule_List'
        sd:
          description: Slice differentiator. Immutable.
          maxLength: 8
          pattern: '[0-9A-F\.]{0,8}'
          title: sd
          type: string
        slice-id:
          description: ID for this slice.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: slice-id
          type: string
          x-go-type: ListKey
        sst:
          description: Slice/Service type. Immutable.
          maxLength: 3
          pattern: '[0-9A-F\.]{0,3}'
          title: sst
          type: string
        upf:
          description: Link to user plane that implements this vcf
          title: upf
          type: string
          x-leafref: ../../upf/upf-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/upf/values
      required:
      - default-behavior
      - sd
      - slice-id
      - sst
      title: Site_Slice
      type: object
      x-list-multiple: true
    Site_Slice_Device-group:
      description: |-
        A list of device groups. Groups will only participate in
        the Slice if the enable field is set to True (single)
      properties:
        device-group:
          description: Link to device group
          title: device-group
          type: string
          x-go-type: ListKey
          x-leafref: ../../../device-group/device-group-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group}/device-group/values
        enable:
          default: true
          description: Enable this device group
          title: enable
          type: boolean
      required:
      - device-group
      title: Site_Slice_Device-group
      type: object
      x-list-multiple: true
    Site_Slice_Device-group_List:
      description: |-
        A list of device groups. Groups will only participate in
        the Slice if the enable field is set to True (list)
      items:
        $ref: '#/components/schemas/Site_Slice_Device-group'
      type: array
      uniqueItems: true
      x-keys:
      - device-group
      x-list-multiple: true
    Site_Slice_Filter:
      description: |-
        A list of applications to allow and/or deny. Rules are executed in
        priority order. The first rule to match will determine the fate
        of the packet. (single)
      properties:
        allow:
          default: true
          description: Allow or deny this application
          title: allow
          type: boolean
        application:
          description: Link to application
          title: application
          type: string
          x-go-type: ListKey
          x-leafref: /app:application/app:application-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application}/application/values
        priority:
          description: Priority of this application
          maximum: 200
          minimum: 0
          title: priority
          type: integer
      required:
      - application
      title: Site_Slice_Filter
      type: object
      x-list-multiple: true
    Site_Slice_Filter_List:
      description: |-
        A list of applications to allow and/or deny. Rules are executed in
        priority order. The first rule to match will determine the fate
        of the packet. (list)
      items:
        $ref: '#/components/schemas/Site_Slice_Filter'
      type: array
      uniqueItems: true
      x-keys:
      - application
      x-list-multiple: true
    Site_Slice_List:
      description: List of Slices (list)
      items:
        $ref: '#/components/schemas/Site_Slice'
      type: array
      uniqueItems: true
      x-keys:
      - slice-id
      x-list-multiple: true
    Site_Slice_Mbr:
      description: Per slice Maximum Bit Rate
      properties:
        downlink:
          description: Per-Slice MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        downlink-burst-size:
          default: 625000
          description: Per-Slice Downlink burst size
          format: int32
          minimum: 0
          title: downlink-burst-size
          type: integer
        uplink:
          description: Per-Slice MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
        uplink-burst-size:
          default: 625000
          description: Per-Slice Uplink burst size
          format: int32
          minimum: 0
          title: uplink-burst-size
          type: integer
      title: Site_Slice_Mbr
      type: object
    Site_Slice_Priority-traffic-rule:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of priority traffic rules (single)
      properties:
        application:
          description: Link to application
          title: application
          type: string
          x-leafref: /app:application/app:application-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/application/values
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device:
          description: Link to device
          title: device
          type: string
          x-leafref: ../../../device/device-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/device/values
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint:
          description: Link to endpoint in application
          title: endpoint
          type: string
          x-leafref: /app:application/app:endpoint/app:endpoint-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/endpoint/values
        gbr:
          $ref: '#/components/schemas/Site_Slice_Priority-traffic-rule_Gbr'
        mbr:
          $ref: '#/components/schemas/Site_Slice_Priority-traffic-rule_Mbr'
        priority-traffic-rule-id:
          description: ID for this priority traffic class.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: priority-traffic-rule-id
          type: string
          x-go-type: ListKey
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-class/tc:traffic-class-id
          x-leafref-resolver: /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/traffic-class/values
      required:
      - application
      - device
      - endpoint
      - priority-traffic-rule-id
      title: Site_Slice_Priority-traffic-rule
      type: object
      x-list-multiple: true
      x-must: []
    Site_Slice_Priority-traffic-rule_Gbr:
      description: For choice bitrate:gbr-case
      properties:
        downlink:
          description: Per-Device per application downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-Device per-Application uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      title: Site_Slice_Priority-traffic-rule_Gbr
      type: object
    Site_Slice_Priority-traffic-rule_List:
      description: List of priority traffic rules (list)
      items:
        $ref: '#/components/schemas/Site_Slice_Priority-traffic-rule'
      type: array
      uniqueItems: true
      x-keys:
      - priority-traffic-rule-id
      x-list-multiple: true
    Site_Slice_Priority-traffic-rule_Mbr:
      description: For choice bitrate:mbr-case
      properties:
        downlink:
          description: Per-Device per application downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-Device per-Application uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      title: Site_Slice_Priority-traffic-rule_Mbr
      type: object
    Site_Small-cell:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of small cell addresses (single)
      properties:
        address:
          description: Address of small cell
          title: address
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enable:
          default: true
          description: Enable this small cell
          title: enable
          type: boolean
        small-cell-id:
          description: Id of small cell
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: small-cell-id
          type: string
          x-go-type: ListKey
        tac:
          description: Type Allocation Code
          maxLength: 8
          pattern: '[0-9A-F\.]{0,8}'
          title: tac
          type: string
      required:
      - small-cell-id
      - tac
      title: Site_Small-cell
      type: object
      x-list-multiple: true
    Site_Small-cell_List:
      description: List of small cell addresses (list)
      items:
        $ref: '#/components/schemas/Site_Small-cell'
      type: array
      uniqueItems: true
      x-keys:
      - small-cell-id
      x-list-multiple: true
    Site_Upf:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: A list of named upfs. (single)
      properties:
        address:
          description: Address of UPF
          title: address
          type: string
        config-endpoint:
          description: url for configuring the UPF
          title: config-endpoint
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        port:
          description: Port for UPF
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        upf-id:
          description: ID for this upf.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: upf-id
          type: string
          x-go-type: ListKey
      required:
      - address
      - port
      - upf-id
      title: Site_Upf
      type: object
      x-list-multiple: true
    Site_Upf_List:
      description: A list of named upfs. (list)
      items:
        $ref: '#/components/schemas/Site_Upf'
      type: array
      uniqueItems: true
      x-keys:
      - upf-id
      x-list-multiple: true
    Template:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: List of slice templates (single)
      properties:
        default-behavior:
          description: Default behavior if no filter rules match
          maxLength: 20
          pattern: DENY-ALL|ALLOW-ALL|ALLOW-PUBLIC
          title: default-behavior
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        mbr:
          $ref: '#/components/schemas/Template_Mbr'
        sd:
          description: Slice differentiator
          maxLength: 8
          pattern: '[0-9A-F\.]{0,8}'
          title: sd
          type: string
        sst:
          description: Slice/Service type
          maxLength: 3
          pattern: '[0-9A-F\.]{0,3}'
          title: sst
          type: string
        template-id:
          description: ID for this slice template.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: template-id
          type: string
          x-go-type: ListKey
      required:
      - default-behavior
      - template-id
      title: Template
      type: object
      x-list-multiple: true
    Template_List:
      description: List of slice templates (list)
      items:
        $ref: '#/components/schemas/Template'
      type: array
      uniqueItems: true
      x-keys:
      - template-id
      x-list-multiple: true
    Template_Mbr:
      description: Per-Slice QOS Settings Maximum Bit Rate
      properties:
        downlink:
          description: Per-Slice MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        downlink-burst-size:
          default: 625000
          description: Per-Slice Downlink burst size
          format: int32
          minimum: 0
          title: downlink-burst-size
          type: integer
        uplink:
          description: Per-Slice MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
        uplink-burst-size:
          default: 625000
          description: Per-Slice Uplink burst size
          format: int32
          minimum: 0
          title: uplink-burst-size
          type: integer
      title: Template_Mbr
      type: object
    Traffic-class:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyEnterprise-Id'
      description: List of traffic class (single)
      properties:
        arp:
          description: Allocation and Retention Priority. 1 is the highest. 15 is
            the lowest.
          maximum: 15
          minimum: 1
          title: arp
          type: integer
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        pdb:
          description: PDB
          maximum: 1000
          minimum: 0
          title: pdb
          type: integer
        pelr:
          description: PELR exponent
          maximum: 10
          minimum: 0
          title: pelr
          type: integer
        qci:
          description: QOS Class Identifier
          maximum: 32
          minimum: 1
          title: qci
          type: integer
        traffic-class-id:
          description: ID for this traffic class.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: traffic-class-id
          type: string
          x-go-type: ListKey
      required:
      - traffic-class-id
      title: Traffic-class
      type: object
      x-list-multiple: true
    Traffic-class_List:
      description: List of traffic class (list)
      items:
        $ref: '#/components/schemas/Traffic-class'
      type: array
      uniqueItems: true
      x-keys:
      - traffic-class-id
      x-list-multiple: true
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  description: OpenAPI 3 specification is generated from aether onos-config model
    plugin
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: aether-2.1.x
  version: 2.1.x
openapi: 3.0.0
paths:
  /aether/v2.1.x/{enterprise-id}/application:
    description: List of applications
    get:
      operationId: getApplication_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_List'
          description: GET OK 200
      summary: GET /application List
      tags:
      - Application
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
  /aether/v2.1.x/{enterprise-id}/application/{application-id}:
    delete:
      operationId: deleteApplication
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /application
      tags:
      - Application
    description: List of applications
    get:
      operationId: getApplication
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: GET OK 200
      summary: GET /application Container
      tags:
      - Application
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
    post:
      operationId: postApplication
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application'
      responses:
        "201":
          description: created
      summary: POST /application
      tags:
      - Application
  /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint:
    description: list for endpoint
    get:
      operationId: getApplication_Endpoint_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Endpoint_List'
          description: GET OK 200
      summary: GET /application/{application-id}/endpoint List
      tags:
      - Application_Endpoint
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
  /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}:
    delete:
      operationId: deleteApplication_Endpoint
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /application/{application-id}/endpoint
      tags:
      - Application_Endpoint
    description: list for endpoint
    get:
      operationId: getApplication_Endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Endpoint'
          description: GET OK 200
      summary: GET /application/{application-id}/endpoint Container
      tags:
      - Application_Endpoint
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {endpoint-id}
      in: path
      name: endpoint-id
      required: true
    post:
      operationId: postApplication_Endpoint
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application_Endpoint'
      responses:
        "201":
          description: created
      summary: POST /application/{application-id}/endpoint
      tags:
      - Application_Endpoint
  /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr:
    delete:
      operationId: deleteApplication_Endpoint_Mbr
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /application/{application-id}/endpoint/{endpoint-id}/mbr
      tags:
      - Application_Endpoint
    description: Maximum bitrate
    get:
      operationId: getApplication_Endpoint_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Endpoint_Mbr'
          description: GET OK 200
      summary: GET /application/{application-id}/endpoint/{endpoint-id}/mbr Container
      tags:
      - Application_Endpoint
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {endpoint-id}
      in: path
      name: endpoint-id
      required: true
    post:
      operationId: postApplication_Endpoint_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application_Endpoint_Mbr'
      responses:
        "201":
          description: created
      summary: POST /application/{application-id}/endpoint/{endpoint-id}/mbr
      tags:
      - Application_Endpoint
  /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/traffic-class/values:
    description: Link to traffic class
    get:
      operationId: getApplication_Endpoint_Traffic-class_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /application/{application-id}/endpoint/{endpoint-id}/traffic-class/values
        Leafref
      tags:
      - Application_Endpoint_Traffic-class
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {endpoint-id}
      in: path
      name: endpoint-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site:
    description: List of site
    get:
      operationId: getSite_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_List'
          description: GET OK 200
      summary: GET /site List
      tags:
      - Site
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
  /aether/v2.1.x/{enterprise-id}/site/{site-id}:
    delete:
      operationId: deleteSite
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site
      tags:
      - Site
    description: List of site
    get:
      operationId: getSite
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: GET OK 200
      summary: GET /site Container
      tags:
      - Site
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSite
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site'
      responses:
        "201":
          description: created
      summary: POST /site
      tags:
      - Site
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service:
    delete:
      operationId: deleteSite_Connectivity-service
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/connectivity-service
      tags:
      - Site
    description: Connectivity to the mobile core
    get:
      operationId: getSite_Connectivity-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Connectivity-service'
          description: GET OK 200
      summary: GET /site/{site-id}/connectivity-service Container
      tags:
      - Site
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSite_Connectivity-service
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Connectivity-service'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/connectivity-service
      tags:
      - Site
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service/core-4g:
    delete:
      operationId: deleteSite_Connectivity-service_Core-4g
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/connectivity-service/core-4g
      tags:
      - Site_Connectivity-service
    description: The 4g core endpoint
    get:
      operationId: getSite_Connectivity-service_Core-4g
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Connectivity-service_Core-4g'
          description: GET OK 200
      summary: GET /site/{site-id}/connectivity-service/core-4g Container
      tags:
      - Site_Connectivity-service
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSite_Connectivity-service_Core-4g
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Connectivity-service_Core-4g'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/connectivity-service/core-4g
      tags:
      - Site_Connectivity-service
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service/core-5g:
    delete:
      operationId: deleteSite_Connectivity-service_Core-5g
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/connectivity-service/core-5g
      tags:
      - Site_Connectivity-service
    description: The 5g core endpoint
    get:
      operationId: getSite_Connectivity-service_Core-5g
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Connectivity-service_Core-5g'
          description: GET OK 200
      summary: GET /site/{site-id}/connectivity-service/core-5g Container
      tags:
      - Site_Connectivity-service
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSite_Connectivity-service_Core-5g
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Connectivity-service_Core-5g'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/connectivity-service/core-5g
      tags:
      - Site_Connectivity-service
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device:
    description: List of devices
    get:
      operationId: getSite_Device_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Device_List'
          description: GET OK 200
      summary: GET /site/{site-id}/device List
      tags:
      - Site_Device
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group:
    description: List of device groups
    get:
      operationId: getSite_Device-group_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Device-group_List'
          description: GET OK 200
      summary: GET /site/{site-id}/device-group List
      tags:
      - Site_Device-group
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}:
    delete:
      operationId: deleteSite_Device-group
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/device-group
      tags:
      - Site_Device-group
    description: List of device groups
    get:
      operationId: getSite_Device-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Device-group'
          description: GET OK 200
      summary: GET /site/{site-id}/device-group Container
      tags:
      - Site_Device-group
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
    post:
      operationId: postSite_Device-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Device-group'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/device-group
      tags:
      - Site_Device-group
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device:
    description: list of devices in this device-group
    get:
      operationId: getSite_Device-group_Device_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Device-group_Device_List'
          description: GET OK 200
      summary: GET /site/{site-id}/device-group/{device-group-id}/device List
      tags:
      - Site_Device-group_Device
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id}:
    delete:
      operationId: deleteSite_Device-group_Device
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/device-group/{device-group-id}/device
      tags:
      - Site_Device-group_Device
    description: list of devices in this device-group
    get:
      operationId: getSite_Device-group_Device
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Device-group_Device'
          description: GET OK 200
      summary: GET /site/{site-id}/device-group/{device-group-id}/device Container
      tags:
      - Site_Device-group_Device
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-id}
      in: path
      name: device-id
      required: true
    post:
      operationId: postSite_Device-group_Device
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Device-group_Device'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/device-group/{device-group-id}/device
      tags:
      - Site_Device-group_Device
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id}/device-id/values:
    description: Link to device
    get:
      operationId: getSite_Device-group_Device_Device-id_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/device-group/{device-group-id}/device/{device-id}/device-id/values
        Leafref
      tags:
      - Site_Device-group_Device_Device-id
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-id}
      in: path
      name: device-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/ip-domain/values:
    description: |-
      Link to ip-domain settings that determine the pool of IP addresses,
      as well as the domain resolver settings to use
    get:
      operationId: getSite_Device-group_Ip-domain_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/device-group/{device-group-id}/ip-domain/values
        Leafref
      tags:
      - Site_Device-group_Ip-domain
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr:
    delete:
      operationId: deleteSite_Device-group_Mbr
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/device-group/{device-group-id}/mbr
      tags:
      - Site_Device-group
    description: Maximum bitrate
    get:
      operationId: getSite_Device-group_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Device-group_Mbr'
          description: GET OK 200
      summary: GET /site/{site-id}/device-group/{device-group-id}/mbr Container
      tags:
      - Site_Device-group
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
    post:
      operationId: postSite_Device-group_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Device-group_Mbr'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/device-group/{device-group-id}/mbr
      tags:
      - Site_Device-group
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/traffic-class/values:
    description: Link to traffic class
    get:
      operationId: getSite_Device-group_Traffic-class_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/device-group/{device-group-id}/traffic-class/values
        Leafref
      tags:
      - Site_Device-group_Traffic-class
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device/{device-id}:
    delete:
      operationId: deleteSite_Device
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/device
      tags:
      - Site_Device
    description: List of devices
    get:
      operationId: getSite_Device
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Device'
          description: GET OK 200
      summary: GET /site/{site-id}/device Container
      tags:
      - Site_Device
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-id}
      in: path
      name: device-id
      required: true
    post:
      operationId: postSite_Device
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Device'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/device
      tags:
      - Site_Device
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device/{device-id}/sim-card/values:
    description: Link to simcard
    get:
      operationId: getSite_Device_Sim-card_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/device/{device-id}/sim-card/values Leafref
      tags:
      - Site_Device_Sim-card
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-id}
      in: path
      name: device-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/device/{device-id}/state:
    description: read only attributes of device
    get:
      operationId: getSite_Device_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Device_State'
          description: GET OK 200
      summary: GET /site/{site-id}/device/{device-id}/state Container
      tags:
      - Site_Device
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-id}
      in: path
      name: device-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/imsi-definition:
    delete:
      operationId: deleteSite_Imsi-definition
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/imsi-definition
      tags:
      - Site
    description: container for imsi-defination
    get:
      operationId: getSite_Imsi-definition
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Imsi-definition'
          description: GET OK 200
      summary: GET /site/{site-id}/imsi-definition Container
      tags:
      - Site
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSite_Imsi-definition
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Imsi-definition'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/imsi-definition
      tags:
      - Site
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/ip-domain:
    description: List of ip domains
    get:
      operationId: getSite_Ip-domain_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Ip-domain_List'
          description: GET OK 200
      summary: GET /site/{site-id}/ip-domain List
      tags:
      - Site_Ip-domain
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id}:
    delete:
      operationId: deleteSite_Ip-domain
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/ip-domain
      tags:
      - Site_Ip-domain
    description: List of ip domains
    get:
      operationId: getSite_Ip-domain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Ip-domain'
          description: GET OK 200
      summary: GET /site/{site-id}/ip-domain Container
      tags:
      - Site_Ip-domain
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {ip-domain-id}
      in: path
      name: ip-domain-id
      required: true
    post:
      operationId: postSite_Ip-domain
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Ip-domain'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/ip-domain
      tags:
      - Site_Ip-domain
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring:
    delete:
      operationId: deleteSite_Monitoring
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/monitoring
      tags:
      - Site
    description: container for monitoring
    get:
      operationId: getSite_Monitoring
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Monitoring'
          description: GET OK 200
      summary: GET /site/{site-id}/monitoring Container
      tags:
      - Site
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSite_Monitoring
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Monitoring'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/monitoring
      tags:
      - Site
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring/edge-device:
    description: List of edge monitoring devices
    get:
      operationId: getSite_Monitoring_Edge-device_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Monitoring_Edge-device_List'
          description: GET OK 200
      summary: GET /site/{site-id}/monitoring/edge-device List
      tags:
      - Site_Monitoring_Edge-device
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id}:
    delete:
      operationId: deleteSite_Monitoring_Edge-device
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/monitoring/edge-device
      tags:
      - Site_Monitoring_Edge-device
    description: List of edge monitoring devices
    get:
      operationId: getSite_Monitoring_Edge-device
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Monitoring_Edge-device'
          description: GET OK 200
      summary: GET /site/{site-id}/monitoring/edge-device Container
      tags:
      - Site_Monitoring_Edge-device
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {edge-device-id}
      in: path
      name: edge-device-id
      required: true
    post:
      operationId: postSite_Monitoring_Edge-device
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Monitoring_Edge-device'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/monitoring/edge-device
      tags:
      - Site_Monitoring_Edge-device
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/sim-card:
    description: List of sim cards
    get:
      operationId: getSite_Sim-card_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Sim-card_List'
          description: GET OK 200
      summary: GET /site/{site-id}/sim-card List
      tags:
      - Site_Sim-card
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/sim-card/{sim-id}:
    delete:
      operationId: deleteSite_Sim-card
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/sim-card
      tags:
      - Site_Sim-card
    description: List of sim cards
    get:
      operationId: getSite_Sim-card
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Sim-card'
          description: GET OK 200
      summary: GET /site/{site-id}/sim-card Container
      tags:
      - Site_Sim-card
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {sim-id}
      in: path
      name: sim-id
      required: true
    post:
      operationId: postSite_Sim-card
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Sim-card'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/sim-card
      tags:
      - Site_Sim-card
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice:
    description: List of Slices
    get:
      operationId: getSite_Slice_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice_List'
          description: GET OK 200
      summary: GET /site/{site-id}/slice List
      tags:
      - Site_Slice
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}:
    delete:
      operationId: deleteSite_Slice
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/slice
      tags:
      - Site_Slice
    description: List of Slices
    get:
      operationId: getSite_Slice
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice'
          description: GET OK 200
      summary: GET /site/{site-id}/slice Container
      tags:
      - Site_Slice
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    post:
      operationId: postSite_Slice
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Slice'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/slice
      tags:
      - Site_Slice
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group:
    description: |-
      A list of device groups. Groups will only participate in
      the Slice if the enable field is set to True
    get:
      operationId: getSite_Slice_Device-group_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice_Device-group_List'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/device-group List
      tags:
      - Site_Slice_Device-group
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group}:
    delete:
      operationId: deleteSite_Slice_Device-group
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/slice/{slice-id}/device-group
      tags:
      - Site_Slice_Device-group
    description: |-
      A list of device groups. Groups will only participate in
      the Slice if the enable field is set to True
    get:
      operationId: getSite_Slice_Device-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice_Device-group'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/device-group Container
      tags:
      - Site_Slice_Device-group
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group}
      in: path
      name: device-group
      required: true
    post:
      operationId: postSite_Slice_Device-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Slice_Device-group'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/slice/{slice-id}/device-group
      tags:
      - Site_Slice_Device-group
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group}/device-group/values:
    description: Link to device group
    get:
      operationId: getSite_Slice_Device-group_Device-group_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/device-group/{device-group}/device-group/values
        Leafref
      tags:
      - Site_Slice_Device-group_Device-group
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group}
      in: path
      name: device-group
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter:
    description: |-
      A list of applications to allow and/or deny. Rules are executed in
      priority order. The first rule to match will determine the fate
      of the packet.
    get:
      operationId: getSite_Slice_Filter_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice_Filter_List'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/filter List
      tags:
      - Site_Slice_Filter
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application}:
    delete:
      operationId: deleteSite_Slice_Filter
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/slice/{slice-id}/filter
      tags:
      - Site_Slice_Filter
    description: |-
      A list of applications to allow and/or deny. Rules are executed in
      priority order. The first rule to match will determine the fate
      of the packet.
    get:
      operationId: getSite_Slice_Filter
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice_Filter'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/filter Container
      tags:
      - Site_Slice_Filter
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application}
      in: path
      name: application
      required: true
    post:
      operationId: postSite_Slice_Filter
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Slice_Filter'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/slice/{slice-id}/filter
      tags:
      - Site_Slice_Filter
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application}/application/values:
    description: Link to application
    get:
      operationId: getSite_Slice_Filter_Application_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/filter/{application}/application/values
        Leafref
      tags:
      - Site_Slice_Filter_Application
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application}
      in: path
      name: application
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr:
    delete:
      operationId: deleteSite_Slice_Mbr
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/slice/{slice-id}/mbr
      tags:
      - Site_Slice
    description: Per slice Maximum Bit Rate
    get:
      operationId: getSite_Slice_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice_Mbr'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/mbr Container
      tags:
      - Site_Slice
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    post:
      operationId: postSite_Slice_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Slice_Mbr'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/slice/{slice-id}/mbr
      tags:
      - Site_Slice
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule:
    description: List of priority traffic rules
    get:
      operationId: getSite_Slice_Priority-traffic-rule_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice_Priority-traffic-rule_List'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/priority-traffic-rule List
      tags:
      - Site_Slice_Priority-traffic-rule
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}:
    delete:
      operationId: deleteSite_Slice_Priority-traffic-rule
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/slice/{slice-id}/priority-traffic-rule
      tags:
      - Site_Slice_Priority-traffic-rule
    description: List of priority traffic rules
    get:
      operationId: getSite_Slice_Priority-traffic-rule
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Slice_Priority-traffic-rule'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/priority-traffic-rule Container
      tags:
      - Site_Slice_Priority-traffic-rule
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {priority-traffic-rule-id}
      in: path
      name: priority-traffic-rule-id
      required: true
    post:
      operationId: postSite_Slice_Priority-traffic-rule
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Slice_Priority-traffic-rule'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/slice/{slice-id}/priority-traffic-rule
      tags:
      - Site_Slice_Priority-traffic-rule
  ? /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/application/values
  : description: Link to application
    get:
      operationId: getSite_Slice_Priority-traffic-rule_Application_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/application/values
        Leafref
      tags:
      - Site_Slice_Priority-traffic-rule_Application
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {priority-traffic-rule-id}
      in: path
      name: priority-traffic-rule-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/device/values:
    description: Link to device
    get:
      operationId: getSite_Slice_Priority-traffic-rule_Device_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/device/values
        Leafref
      tags:
      - Site_Slice_Priority-traffic-rule_Device
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {priority-traffic-rule-id}
      in: path
      name: priority-traffic-rule-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/endpoint/values:
    description: Link to endpoint in application
    get:
      operationId: getSite_Slice_Priority-traffic-rule_Endpoint_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/endpoint/values
        Leafref
      tags:
      - Site_Slice_Priority-traffic-rule_Endpoint
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {priority-traffic-rule-id}
      in: path
      name: priority-traffic-rule-id
      required: true
  ? /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/traffic-class/values
  : description: Link to traffic class
    get:
      operationId: getSite_Slice_Priority-traffic-rule_Traffic-class_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}/traffic-class/values
        Leafref
      tags:
      - Site_Slice_Priority-traffic-rule_Traffic-class
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {priority-traffic-rule-id}
      in: path
      name: priority-traffic-rule-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/upf/values:
    description: Link to user plane that implements this vcf
    get:
      operationId: getSite_Slice_Upf_Values_Leafref
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeafRefOptions'
          description: GET OK 200
      summary: GET /site/{site-id}/slice/{slice-id}/upf/values Leafref
      tags:
      - Site_Slice_Upf
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/small-cell:
    description: List of small cell addresses
    get:
      operationId: getSite_Small-cell_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Small-cell_List'
          description: GET OK 200
      summary: GET /site/{site-id}/small-cell List
      tags:
      - Site_Small-cell
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id}:
    delete:
      operationId: deleteSite_Small-cell
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/small-cell
      tags:
      - Site_Small-cell
    description: List of small cell addresses
    get:
      operationId: getSite_Small-cell
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Small-cell'
          description: GET OK 200
      summary: GET /site/{site-id}/small-cell Container
      tags:
      - Site_Small-cell
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {small-cell-id}
      in: path
      name: small-cell-id
      required: true
    post:
      operationId: postSite_Small-cell
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Small-cell'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/small-cell
      tags:
      - Site_Small-cell
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/upf:
    description: A list of named upfs.
    get:
      operationId: getSite_Upf_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Upf_List'
          description: GET OK 200
      summary: GET /site/{site-id}/upf List
      tags:
      - Site_Upf
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{enterprise-id}/site/{site-id}/upf/{upf-id}:
    delete:
      operationId: deleteSite_Upf
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/{site-id}/upf
      tags:
      - Site_Upf
    description: A list of named upfs.
    get:
      operationId: getSite_Upf
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Upf'
          description: GET OK 200
      summary: GET /site/{site-id}/upf Container
      tags:
      - Site_Upf
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {upf-id}
      in: path
      name: upf-id
      required: true
    post:
      operationId: postSite_Upf
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Upf'
      responses:
        "201":
          description: created
      summary: POST /site/{site-id}/upf
      tags:
      - Site_Upf
  /aether/v2.1.x/{enterprise-id}/template:
    description: List of slice templates
    get:
      operationId: getTemplate_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_List'
          description: GET OK 200
      summary: GET /template List
      tags:
      - Template
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
  /aether/v2.1.x/{enterprise-id}/template/{template-id}:
    delete:
      operationId: deleteTemplate
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /template
      tags:
      - Template
    description: List of slice templates
    get:
      operationId: getTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: GET OK 200
      summary: GET /template Container
      tags:
      - Template
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {template-id}
      in: path
      name: template-id
      required: true
    post:
      operationId: postTemplate
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Template'
      responses:
        "201":
          description: created
      summary: POST /template
      tags:
      - Template
  /aether/v2.1.x/{enterprise-id}/template/{template-id}/mbr:
    delete:
      operationId: deleteTemplate_Mbr
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /template/{template-id}/mbr
      tags:
      - Template
    description: Per-Slice QOS Settings Maximum Bit Rate
    get:
      operationId: getTemplate_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Mbr'
          description: GET OK 200
      summary: GET /template/{template-id}/mbr Container
      tags:
      - Template
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {template-id}
      in: path
      name: template-id
      required: true
    post:
      operationId: postTemplate_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Template_Mbr'
      responses:
        "201":
          description: created
      summary: POST /template/{template-id}/mbr
      tags:
      - Template
  /aether/v2.1.x/{enterprise-id}/traffic-class:
    description: List of traffic class
    get:
      operationId: getTraffic-class_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-class_List'
          description: GET OK 200
      summary: GET /traffic-class List
      tags:
      - Traffic-class
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
  /aether/v2.1.x/{enterprise-id}/traffic-class/{traffic-class-id}:
    delete:
      operationId: deleteTraffic-class
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /traffic-class
      tags:
      - Traffic-class
    description: List of traffic class
    get:
      operationId: getTraffic-class
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-class'
          description: GET OK 200
      summary: GET /traffic-class Container
      tags:
      - Traffic-class
    parameters:
    - $ref: '#/components/parameters/enterprise-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {traffic-class-id}
      in: path
      name: traffic-class-id
      required: true
    post:
      operationId: postTraffic-class
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Traffic-class'
      responses:
        "201":
          description: created
      summary: POST /traffic-class
      tags:
      - Traffic-class
