# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-1.0
components:
  parameters:
    target:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: target (device in onos-config)
      in: path
      name: target
      required: true
  requestBodies:
    RequestBody_Ap-list:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ap-list'
    RequestBody_Ap-list_Ap-list:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ap-list_Ap-list'
    RequestBody_Ap-list_Ap-list_Access-points:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ap-list_Ap-list_Access-points'
    RequestBody_Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    RequestBody_Application_Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application_Application'
    RequestBody_Application_Application_Endpoint:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application_Application_Endpoint'
    RequestBody_Connectivity-service:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Connectivity-service'
    RequestBody_Connectivity-service_Connectivity-service:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Connectivity-service_Connectivity-service'
    RequestBody_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device-group'
    RequestBody_Device-group_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device-group_Device-group'
    RequestBody_Device-group_Device-group_Imsis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device-group_Device-group_Imsis'
    RequestBody_Enterprise:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enterprise'
    RequestBody_Enterprise_Enterprise:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enterprise_Enterprise'
    RequestBody_Enterprise_Enterprise_Connectivity-service:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enterprise_Enterprise_Connectivity-service'
    RequestBody_Ip-domain:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ip-domain'
    RequestBody_Ip-domain_Ip-domain:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ip-domain_Ip-domain'
    RequestBody_Site:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site'
    RequestBody_Site_Site:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Site'
    RequestBody_Site_Site_Imsi-definition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Site_Imsi-definition'
    RequestBody_Template:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template'
    RequestBody_Template_Template:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template_Template'
    RequestBody_Traffic-class:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Traffic-class'
    RequestBody_Traffic-class_Traffic-class:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Traffic-class_Traffic-class'
    RequestBody_Upf:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Upf'
    RequestBody_Upf_Upf:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Upf_Upf'
    RequestBody_Vcs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs'
    RequestBody_Vcs_Vcs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs_Vcs'
    RequestBody_Vcs_Vcs_Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs_Vcs_Application'
    RequestBody_Vcs_Vcs_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs_Vcs_Device-group'
  schemas:
    AdditionalPropertyTarget:
      description: Optionally specify a target other than the default (only on PATCH method)
      properties:
        target:
          description: an override of the target (device)
          title: target
          type: string
      title: AdditionalPropertyTarget
      type: object
    AdditionalPropertyUnchanged:
      description: To optionally omit 'required' properties, add them to 'unchanged' list
      properties:
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertyUnchanged
      type: object
    Ap-list:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        ap-list:
          description: A list of named ap-lists.
          items:
            $ref: '#/components/schemas/Ap-list_Ap-list'
          title: ItemAp-list_Ap-list
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Ap-list
      type: object
    Ap-list_Ap-list:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        access-points:
          description: List of access point addresses
          items:
            $ref: '#/components/schemas/Ap-list_Ap-list_Access-points'
          title: Access-points
          type: array
          uniqueItems: true
          x-keys:
          - address
        description:
          description: description of this ap-list
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enterprise:
          description: Link to enterprise that owns this Access Point List
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this ap-list.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
      required:
      - enterprise
      - id
      type: object
    Ap-list_Ap-list_Access-points:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        address:
          description: Address of access point
          title: address
          type: string
        enable:
          default: true
          description: Enable this access point
          title: enable
          type: boolean
        tac:
          description: Type Allocation Code
          format: int32
          maximum: 99999999
          minimum: 0
          title: tac
          type: integer
      required:
      - address
      - tac
      type: object
    Application:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        application:
          description: List of applications
          items:
            $ref: '#/components/schemas/Application_Application'
          title: ItemApplication_Application
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Application
      type: object
    Application_Application:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        description:
          description: description of this application
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint:
          items:
            $ref: '#/components/schemas/Application_Application_Endpoint'
          maxItems: 1
          title: Endpoint
          type: array
          uniqueItems: true
          x-keys:
          - name
        enterprise:
          description: Link to enterprise that owns this Application. May be set to None if the application is global to all Enterprises.
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this application.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
      required:
      - enterprise
      - id
      type: object
    Application_Application_Endpoint:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        address:
          description: Address of this endpoint. Either a hostname, and IP, or a subnet.
          title: address
          type: string
        name:
          description: Name of this endpoint
          title: name
          type: string
        port-end:
          description: Last port in range
          format: int32
          maximum: 4294967295
          minimum: 0
          title: port-end
          type: integer
        port-start:
          description: First port in range
          format: int32
          maximum: 4294967295
          minimum: 0
          title: port-start
          type: integer
        protocol:
          default: TCP
          description: Name of this endpoint
          maxLength: 3
          minLength: 3
          pattern: TCP|UDP
          title: protocol
          type: string
      required:
      - port-start
      - address
      - name
      type: object
    Connectivity-service:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        connectivity-service:
          description: List of connectivity services
          items:
            $ref: '#/components/schemas/Connectivity-service_Connectivity-service'
          title: ItemConnectivity-service_Connectivity-service
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Connectivity-service
      type: object
    Connectivity-service_Connectivity-service:
      properties:
        core-5g-endpoint:
          description: url of the 5g core
          title: core-5g-endpoint
          type: string
        description:
          description: description of this connectivity service
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        hss-endpoint:
          description: url of the hss service
          title: hss-endpoint
          type: string
        id:
          description: ID for this connectivity service.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
        pcrf-endpoint:
          description: url of the pcrf service
          title: pcrf-endpoint
          type: string
        spgwc-endpoint:
          description: url of the spgwc service
          title: spgwc-endpoint
          type: string
      required:
      - id
      type: object
    Device-group:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        device-group:
          description: List of device groups
          items:
            $ref: '#/components/schemas/Device-group_Device-group'
          title: ItemDevice-group_Device-group
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Device-group
      type: object
    Device-group_Device-group:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        description:
          description: description of this device group
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        id:
          description: ID for this device group.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
        imsis:
          description: |-
            List of imsi ranges that comprise this group. It's acceptable for
            a range to degenerate to being a singleton
          items:
            $ref: '#/components/schemas/Device-group_Device-group_Imsis'
          title: Imsis
          type: array
          uniqueItems: true
          x-keys:
          - name
        ip-domain:
          description: |-
            Link to ip-domain settings that determine the pool of IP addresses,
            as well as the domain resolver settings to use
          title: ip-domain
          type: string
          x-leafref: /ipd:ip-domain/ipd:ip-domain/ipd:id
        site:
          description: Link to site
          title: site
          type: string
          x-leafref: /st:site/st:site/st:id
      required:
      - id
      - site
      type: object
    Device-group_Device-group_Imsis:
      properties:
        imsi-range-from:
          format: int64
          maximum: 1.8446744073709552e+19
          minimum: 0
          title: imsi-range-from
          type: integer
        imsi-range-to:
          format: int64
          maximum: 1.8446744073709552e+19
          minimum: 0
          title: imsi-range-to
          type: integer
        name:
          title: name
          type: string
      required:
      - name
      type: object
    Enterprise:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        enterprise:
          description: List of enterprises
          items:
            $ref: '#/components/schemas/Enterprise_Enterprise'
          title: ItemEnterprise_Enterprise
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Enterprise
      type: object
    Enterprise_Enterprise:
      properties:
        connectivity-service:
          items:
            $ref: '#/components/schemas/Enterprise_Enterprise_Connectivity-service'
          title: Connectivity-service
          type: array
          uniqueItems: true
          x-keys:
          - connectivity-service
        description:
          description: description of this enterprise
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        id:
          description: ID for this enterprise.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
      required:
      - id
      type: object
    Enterprise_Enterprise_Connectivity-service:
      properties:
        connectivity-service:
          description: Link to connectivity services where configuration should be pushed for this enterprise's devices
          title: connectivity-service
          type: string
          x-leafref: /cs:connectivity-service/cs:connectivity-service/cs:id
        enabled:
          default: true
          description: Allow or disallow pushes to this connectivity service
          title: enabled
          type: boolean
      required:
      - connectivity-service
      type: object
    Ip-domain:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        ip-domain:
          description: List of ip domains
          items:
            $ref: '#/components/schemas/Ip-domain_Ip-domain'
          title: ItemIp-domain_Ip-domain
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Ip-domain
      type: object
    Ip-domain_Ip-domain:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        admin-status:
          default: ENABLE
          description: administrative status
          maxLength: 16
          pattern: ENABLE|MAINTENANCE|DISABLE
          title: admin-status
          type: string
        description:
          description: description of this ip domain
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        dnn:
          description: DNN/APN
          maxLength: 32
          title: dnn
          type: string
        dns-primary:
          description: primary dns server name
          title: dns-primary
          type: string
        dns-secondary:
          description: secondary dns server name
          title: dns-secondary
          type: string
        enterprise:
          description: Link to enterprise that owns this IP-Domain
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this ip domain.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
        mtu:
          default: 1492
          description: maximum transmission unit
          format: int32
          maximum: 65535
          minimum: 68
          title: mtu
          type: integer
        subnet:
          description: subnet to allocate ip addresses from
          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))
          title: subnet
          type: string
      required:
      - id
      - subnet
      - enterprise
      type: object
    Site:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        site:
          description: List of site
          items:
            $ref: '#/components/schemas/Site_Site'
          title: ItemSite_Site
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Site
      type: object
    Site_Site:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        description:
          description: description of this site
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enterprise:
          description: Link to enterprise that owns this site
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this site.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
        imsi-definition:
          $ref: '#/components/schemas/Site_Site_Imsi-definition'
      required:
      - enterprise
      - id
      type: object
    Site_Site_Imsi-definition:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        enterprise:
          description: enterprise-specific identifier
          format: int32
          maximum: 999
          minimum: 0
          title: enterprise
          type: integer
        format:
          description: IMSI format specifier, describes how fields are packed into an IMSI. Must be exactly 15 characters long. For example, CCCNNNEEESSSSSS.
          maxLength: 15
          minLength: 15
          title: format
          type: string
        mcc:
          description: mobile country code
          format: int32
          maximum: 999
          minimum: 0
          title: mcc
          type: integer
        mnc:
          description: mobile network code
          format: int32
          maximum: 999
          minimum: 0
          title: mnc
          type: integer
      required:
      - enterprise
      - format
      - mcc
      - mnc
      title: Site_Site_Imsi-definition
      type: object
    Template:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        template:
          description: List of vcs templates
          items:
            $ref: '#/components/schemas/Template_Template'
          title: ItemTemplate_Template
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Template
      type: object
    Template_Template:
      properties:
        description:
          description: description of this vcs template
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        downlink:
          description: Downlink data rate in mbps
          format: int32
          maximum: 4294967295
          minimum: 0
          title: downlink
          type: integer
        id:
          description: ID for this vcs template.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
        sd:
          description: Slice differentiator
          format: int32
          maximum: 16777215
          minimum: 0
          title: sd
          type: integer
        sst:
          description: Slice/Service type
          format: int32
          maximum: 255
          minimum: 1
          title: sst
          type: integer
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-class/tc:traffic-class/tc:id
        uplink:
          description: Uplink data rate in mbps
          format: int32
          maximum: 4294967295
          minimum: 0
          title: uplink
          type: integer
      required:
      - id
      type: object
    Traffic-class:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        traffic-class:
          description: List of traffic class
          items:
            $ref: '#/components/schemas/Traffic-class_Traffic-class'
          title: ItemTraffic-class_Traffic-class
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Traffic-class
      type: object
    Traffic-class_Traffic-class:
      properties:
        description:
          description: description of this traffic class
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        id:
          description: ID for this traffic class.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
        pdb:
          description: PDB
          format: int32
          maximum: 1000
          minimum: 0
          title: pdb
          type: integer
        pelr:
          description: PELR exponent
          format: int32
          maximum: 10
          minimum: 0
          title: pelr
          type: integer
        qci:
          description: QCI
          format: int32
          maximum: 32
          minimum: 1
          title: qci
          type: integer
      required:
      - id
      type: object
    Upf:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        upf:
          description: A list of named upfs.
          items:
            $ref: '#/components/schemas/Upf_Upf'
          title: ItemUpf_Upf
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Upf
      type: object
    Upf_Upf:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        address:
          description: Address of UPF
          title: address
          type: string
        description:
          description: description of this UPF
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enterprise:
          description: Link to enterprise that owns this Access Point List
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this upf.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
        port:
          description: Port for UPF
          format: int32
          maximum: 4294967295
          minimum: 0
          title: port
          type: integer
      required:
      - enterprise
      - id
      - port
      - address
      type: object
    Vcs:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        vcs:
          description: List of virtual cellular services
          items:
            $ref: '#/components/schemas/Vcs_Vcs'
          title: ItemVcs_Vcs
          type: array
          uniqueItems: true
          x-keys:
          - id
      title: Vcs
      type: object
    Vcs_Vcs:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        ap:
          description: Link to access-point list
          title: ap
          type: string
          x-leafref: /apl:ap-list/apl:ap-list/apl:id
        application:
          description: |-
            An ordered list of applications to allow and deny. The deny rules
            will be executed first, followed by the allow rules. The first rule
            to match is returned. An implicit DENY ALL lies at the end.
          items:
            $ref: '#/components/schemas/Vcs_Vcs_Application'
          title: Application
          type: array
          uniqueItems: true
          x-keys:
          - application
        description:
          description: description of this vcs
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device-group:
          description: |-
            A list of device groups. Groups will only participate in
            the VCS if the enable field is set to True
          items:
            $ref: '#/components/schemas/Vcs_Vcs_Device-group'
          title: Device-group
          type: array
          uniqueItems: true
          x-keys:
          - device-group
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        downlink:
          description: Downlink data rate in mbps
          format: int32
          maximum: 4294967295
          minimum: 0
          title: downlink
          type: integer
        enterprise:
          description: Link to enterprise that owns this VCS
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this vcs.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
        sd:
          description: Slice differentiator. Immutable.
          format: int32
          maximum: 16777215
          minimum: 0
          title: sd
          type: integer
        sst:
          description: Slice/Service type. Immutable.
          format: int32
          maximum: 255
          minimum: 1
          title: sst
          type: integer
        template:
          description: |-
            Link to user vcs template that was used to initialize
            this VCS
          title: template
          type: string
          x-leafref: /vt:template/vt:template/vt:id
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-class/tc:traffic-class/tc:id
        upf:
          description: Link to user plane that implements this vcf
          title: upf
          type: string
          x-leafref: /upf:upf/upf:upf/upf:id
        uplink:
          description: Uplink data rate in mbps
          format: int32
          maximum: 4294967295
          minimum: 0
          title: uplink
          type: integer
      required:
      - sst
      - traffic-class
      - enterprise
      - sd
      - id
      type: object
    Vcs_Vcs_Application:
      properties:
        allow:
          default: true
          description: Allow or deny this application
          title: allow
          type: boolean
        application:
          description: Link to application
          title: application
          type: string
          x-leafref: /app:application/app:application/app:id
      required:
      - application
      type: object
    Vcs_Vcs_Device-group:
      properties:
        device-group:
          description: Link to device group
          title: device-group
          type: string
          x-leafref: /dg:device-group/dg:device-group/dg:id
        enable:
          default: true
          description: Enable this device group
          title: enable
          type: boolean
      required:
      - device-group
      type: object
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  description: |-
    ## Background

    The Aether ROC control API is available via REST or via gNMI. It is expected that most external
    consumers of the API will use REST.

    The REST API supports the typical GET, POST, PATCH, DELETE operations:

    * GET. Retrieve an object.
    * POST. Create an object.
    * PUT,  PATCH. Modify an existing object.
    * DELETE. Delete an object.

    Endpoints are named based on the type of object. Some examples:

    * `GET http://roc/aether/v3.0.0/connectivity-service-v3/enterprise/`. Get a list of enterprises.
    * `GET http://roc/aether/v3.0.0/connectivity-service-v3/enterprise/Starbucks`. Get the Starbucks enterprise.
    * `POST http://roc/aether/v3.0.0/connectivity-service-v3/enterprise`. Create a new enterprise.
    * `PATCH http://roc/aether/v3.0.0/connectivity-service-v3/site/Starbucks-NewYork`. Update the Starbucks New York site.

    This document is a high-level description of the objects that can be interacted with. For a
    low-level description, see the Swagger API specification.

    ## Identifying and Referencing Objects

    Every object contains an `id` that is used to identify the object. The `id` is only unique within
    the scope of a particular type of object. For example, a site may be named `foo` and a device-group
    may also be named `foo`, and the two names do not conflict because they are different object types.

    Some objects contain references to other objects. For example, many objects contain references to
    the `Enterprise` object, which allows them to be associated with a particular enterprise. References
    are constructed using the `id` field of the referenced object. It is an error to attempt to create
    a reference to an object that does not exist. Deleting an object while there are open references
    to it from other objects is also an error.

    ## Common Model Fields

    Several fields are common to all models in Aether:

    * `id`. The identifier for objects of this model.
    * `description`. A human-readable description, used to store additional context about the object.
    * `display-name`. A human-readable name that is shown in the GUI.

    As these fields are common to all models, they will be omitted from the per-model descriptions below.

    ## Key Aether Objects

    The following is a list of Aether models, generally organized in a top-down manner.

    ### Enterprise

    `Enterprise` forms the root of a customer-specific Enterprise hierarchy. The `Enterprise` model is
    referenced by many other objects, and allows those objects to be scoped to a particular Enterprise
    for ownership and role-based access control purposes. `Enterprise` contains the following fields:

    * `connectivity-service`. A list of connectivity services that realize connectivity for this
      enterprise. A connectivity service is a reference to the SD-Core, and reflects either a 4G or a
      5G core.

    ### Site

    `Enterprises` are further divided into `Sites`. A site is a point of presence for an `Enterprise` and
    may be either physical or logical (i.e. a single geographic location could in theory contain several
    logical sites). Site contains the following fields:

    * `enterprise`. A link to the `Enterprise` that owns this site.
    * `imsi-definition`. A description of how IMSIs are constructed for this site. Contains the following
      sub-fields:

       * `mcc`. Mobile country code.
       * `mnc`. Mobile network code.
       * `enterprise`. A numeric enterprise id.
       * `format`. A mask that allows the above three fields to be embedded into an IMSI. For example
         `CCCNNNEEESSSSSS` will construct IMSIs using a 3-digit MCC, 3-digit MNC, 3-digit ENT, and a
         6-digit subscriber.

    ### Device-Group

    `Device-Group` allows multiple devices to be logically grouped together. `Device-Group` contains
    the following fields:

    * `imsis`. A list of IMSI ranges. Each range has the following
      fields:

       * `name`. Name of the range. Used as a key.
       * `imsi-range-from`. First subscriber in the range.
       * `imsi-range-to`. Last subscriber in the range. Can be omitted if the range only contains one
         IMSI.
    * `ip-domain`. Reference to an `IP-Domain` object that describes the IP and DNS settings for UEs
      within this group.
    * `site`. Reference to the site where this `Device-Group` may be used. Indirectly identifies the
      `Enterprise` as `Site` contains a reference to `Enterprise`.

    ### Virtual Cellular Service

    `Virtual Cellular Service (VCS)` connects a `Device-Group` to an `Application`. `VCS` has the
    following fields:

    * `device-group`. A list of `Device-Group` objects that can participate in this `VCS`. Each
      entry in the list contains both the reference to the `Device-Group` as well as an `enable`
      field which may be used to temporarily remove access to the group.
    * `application`. A list of `Application` objects that are either allowed or denied for this
      `VCS`. Each entry in the list contains both a reference to the `Application` as well as an
      `allow` field which can be set to `true` to allow the application or `false` to deny it.
    * `template`. Reference to the `Template` that was used to initialize this `VCS`.
    * `upf`. Reference to the User Plane Function (`UPF`) that should be used to process packets
      for this `VCS`. It's permitted for multiple `VCS` to share a single `UPF`.
    * `ap`. Reference to an Access Point List (`AP-List`) that lists the access points for this
      `VCS`.
    * `enterprise`. Reference to the `Enterprise` that owns this `VCS`.
    * `SST`, `SD`, `uplink`, `downlink`, `traffic-class`. Parameters that were initialized using the
      `template`. They are described in the section for the `Template` model.

    ### Application

    `Application` specifies an application and the endpoints for the application. Applications are
    the termination point for traffic from the UPF. Contains the following fields:

    * `endpoint`. A list of endpoints. Each has the following
      fields:

       * `name`. Name of the endpoint. Used as a key.
       * `address`. The DNS name or IP address of the endpoint.
       * `port-start`. Starting port number.
       * `port-end`. Ending port number.
       * `protocol`. `TCP|UDP`, specifies the protocol for the endpoint.
    * `enterprise`. Link to an `Enterprise` object that owns this application. May be left empty
      to indicate a global application that may be used by multiple enterprises.

    ## Supporting Aether Objects

    ### AP-List

    `AP-List` specifies a list of access points (radios). It has the following fields:

    * `access-points`. A list of access points. Each access point has the following:

        * `address`. Hostname of the access point.
        * `tac`. Type Allocation Code.
        * `enable`. If set to `true`, the access point is enabled. Otherwise, it is disabled.

    * `enterprise`. The `Enterprise` that owns these access points.

    ### Connectivity-Service

    `Connectivity-Service` specifies the URL of an SD-Core control plane.

    * `core-5g-endpoint`. Endpoint of a `config4g` or `config5g` core.

    ### IP-Domain

    `IP-Domain` specifies IP and DNS settings and has the following fields:

    * `dnn`. Data network name for 5G, or APN for 4G.
    * `dns-primary`, `dns-secondary`. IP addresses for DNS servers.
    * `subnet`. Subnet to allocate to UEs.
    * `admin-status`. Tells whether these ip-domain settings should be used, or whether they
      should be drained from UEs.
    * `mtu`. Ethernet maximum transmission unit.
    * `enterprise`. `Enterprise that owns this `IP-Domain`.

    ### Template

    `Template` contains connectivity settings that are pre-configured by Aether Operations.
    Templates are used to initialize `VCS` objects. `Template` has the following fields:

    * `sst`, `sd`. Slice identifiers.
    * `uplink`, `downlink`. Guaranteed uplink and downlink bandwidth.
    * `traffic-class`. Link to a `Traffic-Class` object that describes the type of traffic.

    ### Traffic-Class

    Specifies the class of traffic. Contains the following:

    * `qci`. QoS class identifier.
    * `pelr`. Packet error loss rate.
    * `pdb`. Packet delay budget.

    ### UPF

    Specifies the UPF that should forward packets. Has the following fields:

    * `address`. Hostname or IP address of UPF.
    * `port`. Port number of UPF.
    * `enterprise`. Enterprise that owns this UPF.
  license:
    name: LicenseRef-ONF-Member-1.0
    url: https://opennetworking.org/wp-content/uploads/2020/06/ONF-Member-Only-Software-License-v1.0.pdf
  termsOfService: https://opennetworking.org/wp-content/uploads/2019/02/ONF-Licensing-and-IPR-FAQ-2020-06.pdf
  title: Aether 3.0.0
  version: 3.0.0
openapi: 3.0.0
paths:
  /aether/v3.0.0/{target}/ap-list:
    delete:
      operationId: deleteAp-list
      responses:
        default:
          description: ""
      summary: DELETE /ap-list
    description: The top level container
    get:
      operationId: getAp-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ap-list'
          description: GET OK 200
      summary: GET /ap-list
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postAp-list
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Ap-list'
      responses:
        "201":
          description: created
      summary: POST /ap-list
  /aether/v3.0.0/{target}/ap-list/ap-list/{id}:
    delete:
      operationId: deleteAp-list_Ap-list
      responses:
        default:
          description: ""
      summary: DELETE /ap-list/ap-list
    description: A list of named ap-lists.
    get:
      operationId: getAp-list_Ap-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ap-list_Ap-list'
          description: GET OK 200
      summary: GET /ap-list/ap-list
      tags:
      - Ap-list_Ap-list
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postAp-list_Ap-list
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Ap-list_Ap-list'
      responses:
        "201":
          description: created
      summary: POST /ap-list/ap-list
  /aether/v3.0.0/{target}/ap-list/ap-list/{id}/access-points/{address}:
    delete:
      operationId: deleteAp-list_Ap-list_Access-points
      responses:
        default:
          description: ""
      summary: DELETE /ap-list/ap-list/{id}/access-points
    description: List of access point addresses
    get:
      operationId: getAp-list_Ap-list_Access-points
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ap-list_Ap-list_Access-points'
          description: GET OK 200
      summary: GET /ap-list/ap-list/{id}/access-points
      tags:
      - Ap-list_Ap-list_Access-points
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postAp-list_Ap-list_Access-points
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Ap-list_Ap-list_Access-points'
      responses:
        "201":
          description: created
      summary: POST /ap-list/ap-list/{id}/access-points
  /aether/v3.0.0/{target}/application:
    delete:
      operationId: deleteApplication
      responses:
        default:
          description: ""
      summary: DELETE /application
    description: The top level container
    get:
      operationId: getApplication
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: GET OK 200
      summary: GET /application
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postApplication
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application'
      responses:
        "201":
          description: created
      summary: POST /application
  /aether/v3.0.0/{target}/application/application/{id}:
    delete:
      operationId: deleteApplication_Application
      responses:
        default:
          description: ""
      summary: DELETE /application/application
    description: List of applications
    get:
      operationId: getApplication_Application
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Application'
          description: GET OK 200
      summary: GET /application/application
      tags:
      - Application_Application
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postApplication_Application
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application_Application'
      responses:
        "201":
          description: created
      summary: POST /application/application
  /aether/v3.0.0/{target}/application/application/{id}/endpoint/{name}:
    delete:
      operationId: deleteApplication_Application_Endpoint
      responses:
        default:
          description: ""
      summary: DELETE /application/application/{id}/endpoint
    get:
      operationId: getApplication_Application_Endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Application_Endpoint'
          description: GET OK 200
      summary: GET /application/application/{id}/endpoint
      tags:
      - Application_Application_Endpoint
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postApplication_Application_Endpoint
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application_Application_Endpoint'
      responses:
        "201":
          description: created
      summary: POST /application/application/{id}/endpoint
  /aether/v3.0.0/{target}/connectivity-service:
    delete:
      operationId: deleteConnectivity-service
      responses:
        default:
          description: ""
      summary: DELETE /connectivity-service
    description: The top level container
    get:
      operationId: getConnectivity-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connectivity-service'
          description: GET OK 200
      summary: GET /connectivity-service
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postConnectivity-service
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Connectivity-service'
      responses:
        "201":
          description: created
      summary: POST /connectivity-service
  /aether/v3.0.0/{target}/connectivity-service/connectivity-service/{id}:
    delete:
      operationId: deleteConnectivity-service_Connectivity-service
      responses:
        default:
          description: ""
      summary: DELETE /connectivity-service/connectivity-service
    description: List of connectivity services
    get:
      operationId: getConnectivity-service_Connectivity-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connectivity-service_Connectivity-service'
          description: GET OK 200
      summary: GET /connectivity-service/connectivity-service
      tags:
      - Connectivity-service_Connectivity-service
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postConnectivity-service_Connectivity-service
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Connectivity-service_Connectivity-service'
      responses:
        "201":
          description: created
      summary: POST /connectivity-service/connectivity-service
  /aether/v3.0.0/{target}/device-group:
    delete:
      operationId: deleteDevice-group
      responses:
        default:
          description: ""
      summary: DELETE /device-group
    description: The top level container
    get:
      operationId: getDevice-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group'
          description: GET OK 200
      summary: GET /device-group
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postDevice-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Device-group'
      responses:
        "201":
          description: created
      summary: POST /device-group
  /aether/v3.0.0/{target}/device-group/device-group/{id}:
    delete:
      operationId: deleteDevice-group_Device-group
      responses:
        default:
          description: ""
      summary: DELETE /device-group/device-group
    description: List of device groups
    get:
      operationId: getDevice-group_Device-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group_Device-group'
          description: GET OK 200
      summary: GET /device-group/device-group
      tags:
      - Device-group_Device-group
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postDevice-group_Device-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Device-group_Device-group'
      responses:
        "201":
          description: created
      summary: POST /device-group/device-group
  /aether/v3.0.0/{target}/device-group/device-group/{id}/imsis/{name}:
    delete:
      operationId: deleteDevice-group_Device-group_Imsis
      responses:
        default:
          description: ""
      summary: DELETE /device-group/device-group/{id}/imsis
    description: |-
      List of imsi ranges that comprise this group. It's acceptable for
      a range to degenerate to being a singleton
    get:
      operationId: getDevice-group_Device-group_Imsis
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group_Device-group_Imsis'
          description: GET OK 200
      summary: GET /device-group/device-group/{id}/imsis
      tags:
      - Device-group_Device-group_Imsis
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postDevice-group_Device-group_Imsis
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Device-group_Device-group_Imsis'
      responses:
        "201":
          description: created
      summary: POST /device-group/device-group/{id}/imsis
  /aether/v3.0.0/{target}/enterprise:
    delete:
      operationId: deleteEnterprise
      responses:
        default:
          description: ""
      summary: DELETE /enterprise
    description: The top level container
    get:
      operationId: getEnterprise
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
          description: GET OK 200
      summary: GET /enterprise
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postEnterprise
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Enterprise'
      responses:
        "201":
          description: created
      summary: POST /enterprise
  /aether/v3.0.0/{target}/enterprise/enterprise/{id}:
    delete:
      operationId: deleteEnterprise_Enterprise
      responses:
        default:
          description: ""
      summary: DELETE /enterprise/enterprise
    description: List of enterprises
    get:
      operationId: getEnterprise_Enterprise
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise_Enterprise'
          description: GET OK 200
      summary: GET /enterprise/enterprise
      tags:
      - Enterprise_Enterprise
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postEnterprise_Enterprise
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Enterprise_Enterprise'
      responses:
        "201":
          description: created
      summary: POST /enterprise/enterprise
  /aether/v3.0.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service}:
    delete:
      operationId: deleteEnterprise_Enterprise_Connectivity-service
      responses:
        default:
          description: ""
      summary: DELETE /enterprise/enterprise/{id}/connectivity-service
    get:
      operationId: getEnterprise_Enterprise_Connectivity-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise_Enterprise_Connectivity-service'
          description: GET OK 200
      summary: GET /enterprise/enterprise/{id}/connectivity-service
      tags:
      - Enterprise_Enterprise_Connectivity-service
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {connectivity-service}
      in: path
      name: connectivity-service
      required: true
    post:
      operationId: postEnterprise_Enterprise_Connectivity-service
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Enterprise_Enterprise_Connectivity-service'
      responses:
        "201":
          description: created
      summary: POST /enterprise/enterprise/{id}/connectivity-service
  /aether/v3.0.0/{target}/ip-domain:
    delete:
      operationId: deleteIp-domain
      responses:
        default:
          description: ""
      summary: DELETE /ip-domain
    description: The top level container
    get:
      operationId: getIp-domain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip-domain'
          description: GET OK 200
      summary: GET /ip-domain
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postIp-domain
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Ip-domain'
      responses:
        "201":
          description: created
      summary: POST /ip-domain
  /aether/v3.0.0/{target}/ip-domain/ip-domain/{id}:
    delete:
      operationId: deleteIp-domain_Ip-domain
      responses:
        default:
          description: ""
      summary: DELETE /ip-domain/ip-domain
    description: List of ip domains
    get:
      operationId: getIp-domain_Ip-domain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip-domain_Ip-domain'
          description: GET OK 200
      summary: GET /ip-domain/ip-domain
      tags:
      - Ip-domain_Ip-domain
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postIp-domain_Ip-domain
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Ip-domain_Ip-domain'
      responses:
        "201":
          description: created
      summary: POST /ip-domain/ip-domain
  /aether/v3.0.0/{target}/site:
    delete:
      operationId: deleteSite
      responses:
        default:
          description: ""
      summary: DELETE /site
    description: The top level container
    get:
      operationId: getSite
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: GET OK 200
      summary: GET /site
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSite
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site'
      responses:
        "201":
          description: created
      summary: POST /site
  /aether/v3.0.0/{target}/site/site/{id}:
    delete:
      operationId: deleteSite_Site
      responses:
        default:
          description: ""
      summary: DELETE /site/site
    description: List of site
    get:
      operationId: getSite_Site
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site'
          description: GET OK 200
      summary: GET /site/site
      tags:
      - Site_Site
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postSite_Site
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Site'
      responses:
        "201":
          description: created
      summary: POST /site/site
  /aether/v3.0.0/{target}/site/site/{id}/imsi-definition:
    delete:
      operationId: deleteSite_Site_Imsi-definition
      responses:
        default:
          description: ""
      summary: DELETE /site/site/{id}/imsi-definition
    get:
      operationId: getSite_Site_Imsi-definition
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site_Imsi-definition'
          description: GET OK 200
      summary: GET /site/site/{id}/imsi-definition
      tags:
      - Site_Site
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postSite_Site_Imsi-definition
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Site_Imsi-definition'
      responses:
        "201":
          description: created
      summary: POST /site/site/{id}/imsi-definition
  /aether/v3.0.0/{target}/template:
    delete:
      operationId: deleteTemplate
      responses:
        default:
          description: ""
      summary: DELETE /template
    description: The top level container
    get:
      operationId: getTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: GET OK 200
      summary: GET /template
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postTemplate
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Template'
      responses:
        "201":
          description: created
      summary: POST /template
  /aether/v3.0.0/{target}/template/template/{id}:
    delete:
      operationId: deleteTemplate_Template
      responses:
        default:
          description: ""
      summary: DELETE /template/template
    description: List of vcs templates
    get:
      operationId: getTemplate_Template
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Template'
          description: GET OK 200
      summary: GET /template/template
      tags:
      - Template_Template
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postTemplate_Template
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Template_Template'
      responses:
        "201":
          description: created
      summary: POST /template/template
  /aether/v3.0.0/{target}/traffic-class:
    delete:
      operationId: deleteTraffic-class
      responses:
        default:
          description: ""
      summary: DELETE /traffic-class
    description: The top level container
    get:
      operationId: getTraffic-class
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-class'
          description: GET OK 200
      summary: GET /traffic-class
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postTraffic-class
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Traffic-class'
      responses:
        "201":
          description: created
      summary: POST /traffic-class
  /aether/v3.0.0/{target}/traffic-class/traffic-class/{id}:
    delete:
      operationId: deleteTraffic-class_Traffic-class
      responses:
        default:
          description: ""
      summary: DELETE /traffic-class/traffic-class
    description: List of traffic class
    get:
      operationId: getTraffic-class_Traffic-class
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-class_Traffic-class'
          description: GET OK 200
      summary: GET /traffic-class/traffic-class
      tags:
      - Traffic-class_Traffic-class
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postTraffic-class_Traffic-class
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Traffic-class_Traffic-class'
      responses:
        "201":
          description: created
      summary: POST /traffic-class/traffic-class
  /aether/v3.0.0/{target}/upf:
    delete:
      operationId: deleteUpf
      responses:
        default:
          description: ""
      summary: DELETE /upf
    description: The top level container
    get:
      operationId: getUpf
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upf'
          description: GET OK 200
      summary: GET /upf
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postUpf
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Upf'
      responses:
        "201":
          description: created
      summary: POST /upf
  /aether/v3.0.0/{target}/upf/upf/{id}:
    delete:
      operationId: deleteUpf_Upf
      responses:
        default:
          description: ""
      summary: DELETE /upf/upf
    description: A list of named upfs.
    get:
      operationId: getUpf_Upf
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upf_Upf'
          description: GET OK 200
      summary: GET /upf/upf
      tags:
      - Upf_Upf
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postUpf_Upf
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Upf_Upf'
      responses:
        "201":
          description: created
      summary: POST /upf/upf
  /aether/v3.0.0/{target}/vcs:
    delete:
      operationId: deleteVcs
      responses:
        default:
          description: ""
      summary: DELETE /vcs
    description: The top level container
    get:
      operationId: getVcs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs'
          description: GET OK 200
      summary: GET /vcs
      tags:
      - ""
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postVcs
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs'
      responses:
        "201":
          description: created
      summary: POST /vcs
  /aether/v3.0.0/{target}/vcs/vcs/{id}:
    delete:
      operationId: deleteVcs_Vcs
      responses:
        default:
          description: ""
      summary: DELETE /vcs/vcs
    description: List of virtual cellular services
    get:
      operationId: getVcs_Vcs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs'
          description: GET OK 200
      summary: GET /vcs/vcs
      tags:
      - Vcs_Vcs
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postVcs_Vcs
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs_Vcs'
      responses:
        "201":
          description: created
      summary: POST /vcs/vcs
  /aether/v3.0.0/{target}/vcs/vcs/{id}/application/{application}:
    delete:
      operationId: deleteVcs_Vcs_Application
      responses:
        default:
          description: ""
      summary: DELETE /vcs/vcs/{id}/application
    description: |-
      An ordered list of applications to allow and deny. The deny rules
      will be executed first, followed by the allow rules. The first rule
      to match is returned. An implicit DENY ALL lies at the end.
    get:
      operationId: getVcs_Vcs_Application
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_Application'
          description: GET OK 200
      summary: GET /vcs/vcs/{id}/application
      tags:
      - Vcs_Vcs_Application
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application}
      in: path
      name: application
      required: true
    post:
      operationId: postVcs_Vcs_Application
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs_Vcs_Application'
      responses:
        "201":
          description: created
      summary: POST /vcs/vcs/{id}/application
  /aether/v3.0.0/{target}/vcs/vcs/{id}/device-group/{device-group}:
    delete:
      operationId: deleteVcs_Vcs_Device-group
      responses:
        default:
          description: ""
      summary: DELETE /vcs/vcs/{id}/device-group
    description: |-
      A list of device groups. Groups will only participate in
      the VCS if the enable field is set to True
    get:
      operationId: getVcs_Vcs_Device-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_Device-group'
          description: GET OK 200
      summary: GET /vcs/vcs/{id}/device-group
      tags:
      - Vcs_Vcs_Device-group
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group}
      in: path
      name: device-group
      required: true
    post:
      operationId: postVcs_Vcs_Device-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs_Vcs_Device-group'
      responses:
        "201":
          description: created
      summary: POST /vcs/vcs/{id}/device-group
