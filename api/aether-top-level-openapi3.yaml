# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0

components:
  schemas:
    PatchBody:
      properties:
        Updates:
          title: Updated elements
          description: Elements to be updated or replaced
          $ref: '#/components/schemas/Elements'
        Deletes:
          title: Deleted elements
          description: Elements to be deleted
          $ref: '#/components/schemas/Elements'
        Extensions:
          title: gnmi extensions
          description: Model type and version of 'target' on first creation [link](https://docs.onosproject.org/onos-config/docs/gnmi_extensions/#use-of-extension-101-device-version-in-setrequest)
          properties:
            change-name-100:
              type: string
              title: change-name-100
              deprecated: true
            model-version-101:
              type: string
              title: model-version-101
              deprecated: true
            model-type-102:
              type: string
              title: model-type-102
              deprecated: true
            transaction-info-110:
              type: object
              properties:
                ID:
                  type: string
                index:
                  type: integer
              title: transaction-info-110
              description: Used in the responses, carries inforamtion about the transaction.
            transaction-strategy-111:
              type: integer
              title: transaction-strategy-111
              description: "Identifies whether a request needs to be handles Asynchronously (val: 0) or Synchronously (val: 1)"
          type: object
        default-target:
          description: Target (device name) to use by default if not specified on indivdual updates/deletes as an additional property
          type: string
          pattern: '[0-9a-z\-\._]+'
      required:
      - default-target
    Elements:
      properties:
        connectivity-services-2.0.0:
          title: Connectivity-service 2.0.0 updates
          $ref: './aether-2.0.0-openapi3.yaml#/components/schemas/Connectivity-services'
        enterprises-2.0.0:
          title: Enterprise 2.0.0 updates
          $ref: './aether-2.0.0-openapi3.yaml#/components/schemas/Enterprises'
        application-2.1.0:
          title: Application 2.1.0 updates
          $ref: './aether-2.1.0-openapi3.yaml#/components/schemas/Application_List'
        site-2.1.0:
          title: Site 2.1.0 updates
          $ref: './aether-2.1.0-openapi3.yaml#/components/schemas/Site_List'
        template-2.1.0:
          title: Template 2.1.0 updates
          $ref: './aether-2.1.0-openapi3.yaml#/components/schemas/Template_List'
        traffic-class-2.1.0:
          title: Traffic Class 2.1.0 updates
          $ref: './aether-2.1.0-openapi3.yaml#/components/schemas/Traffic-class_List'
        switch-model-0.1.0:
          title: SDN Fabric Switch Model 0.1.0 updates
          $ref: './sdn-fabric-0.1.0-openapi3.yaml#/components/schemas/Switch-model_List'
        switch-0.1.0:
          title: SDN Fabric Switch 0.1.0 updates
          $ref: './sdn-fabric-0.1.0-openapi3.yaml#/components/schemas/Switch_List'
        route-0.1.0:
          title: SDN Fabric Route 0.1.0 updates
          $ref: './sdn-fabric-0.1.0-openapi3.yaml#/components/schemas/Route_List'
        dhcp-server-0.1.0:
          title: SDN Fabric DHCP Server 0.1.0 updates
          $ref: './sdn-fabric-0.1.0-openapi3.yaml#/components/schemas/Dhcp-server_List'
    TargetName:
      properties:
        name:
          type: string
    TargetsNames:
      items:
        $ref: '#/components/schemas/TargetName'
      type: array
    ChangeValue:
      description: an individual Path/Value and removed flag combination in a Change
      properties:
        path:
          description: the path to change
          type: string
        value:
          description: the change value
          type: string
        removed:
          description: indicates whether this is a delete
          type: boolean
      required:
        - path
      type: object
    Change:
      description: represents a configuration change to a single target
      properties:
        target_id:
          description: the identifier of the target to which this change applies
          type: string
        target_version:
          description: an optional target version to which to apply this change
          type: string
        target_type:
          description: an optional target type to which to apply this change
          type: string
        values:
          description: a set of change values to apply
          items:
            $ref: '#/components/schemas/ChangeValue'
          type: array
      required:
        - target_id
      type: object
    Failure:
      properties:
        type:
          description: transaction failure type
          type: string
          enum:
            - UNKNOWN
            - CANCELED
            - NOT_FOUND
            - ALREADY_EXISTS
            - UNAUTHORIZED
            - FORBIDDEN
            - CONFLICT
            - INVALID
            - UNAVAILABLE
            - NOT_SUPPORTED
            - TIMEOUT
            - INTERNAL
        description:
          type: string
    Revision:
      type: integer
      format: int64
    Synchronicity:
      type: string
      enum:
        - ASYNCHRONOUS
        - SYNCHRONOUS
    Isolation:
      type: string
      enum:
        - DEFAULT
        - SERIALIZABLE
    Strategy:
      properties:
        synchronicity:
          description: indicates the transaction synchronicity level
          $ref: '#/components/schemas/Synchronicity'
        isolation:
          description: indicates the transaction isolation level
          $ref: '#/components/schemas/Isolation'
    Index:
      type: integer
      format: int64
    RollbackTransaction:
      properties:
        rollback_index:
                description: the index of the transaction to roll back
                $ref: '#/components/schemas/Index'
    Deleted:
      type: boolean
    Path:
      type: string
    TypeOpts:
      type: integer
      format: int32
    Bytes:
      type: string
      format: byte
    ValueType:
      description: the type for a value
      type: string
      enum:
        - EMPTY
        - STRING
        - INT
        - UINT
        - BOOL
        - DECIMAL
        - FLOAT
        - BYTES
        - LEAFLIST_STRING
        - LEAFLIST_INT
        - LEAFLIST_UINT
        - LEAFLIST_BOOL
        - LEAFLIST_DECIMAL
        - LEAFLIST_FLOAT
        - LEAFLIST_BYTES
    TypedValue:
      description: value represented as a byte array
      properties:
        value:
          description: the bytes array
          type: string
        type:
          description: the value type
          $ref: '#/components/schemas/ValueType'
        type_opts:
          description: a set of type options
          type: array
          items:
            $ref: '#/components/schemas/TypeOpts'
    PathValue:
      description: the state of a path/value in the configuration tree
      properties:
        path:
          description: the path to change
          $ref: '#/components/schemas/Path'
        value:
          description: the change value
          $ref: '#/components/schemas/TypedValue'
        deleted:
          description: indicates whether this is a delete
          $ref: '#/components/schemas/Deleted'
    PathTarget:
      type: object
      properties:
        path:
          type: string
        path-value:
          $ref: '#/components/schemas/PathValue'
    PathValues:
      type: array
      items:
        $ref: '#/components/schemas/PathTarget'
        type: object
    ChangeTarget:
      type: object
      properties:
        target-name:
          type: string
        path-values:
          $ref: '#/components/schemas/PathValues'
    ChangeTransaction:
      type: array
      items:
        $ref: '#/components/schemas/ChangeTarget'
        type: object
    Details:
      properties:
        change:
          description: the changes to apply to targets
          $ref: '#/components/schemas/ChangeTransaction'
        rollback:
          description: the rollback of transaction
          $ref: '#/components/schemas/RollbackTransaction'
    Start:
      type: string
      format: date-time
    End:
      type: string
      format: date-time
    TransactionPhaseStatus:
      properties:
        start:
          $ref: '#/components/schemas/Start'
        end:
          $ref: '#/components/schemas/End'
    InitializePhaseState:
      type: string
      enum:
        - INITIALIZING
        - INITIALIZED
        - FAILED
    TransactionInitializePhase:
      properties:
        status:
          $ref: '#/components/schemas/TransactionPhaseStatus'
        state:
          $ref: '#/components/schemas/InitializePhaseState'
        failure:
          $ref: '#/components/schemas/Failure'
    ValidatePhaseState:
      type: string
      enum:
        - VALIDATING
        - VALIDATED
        - FAILED
    TransactionValidatePhase:
      properties:
        status:
          $ref: '#/components/schemas/TransactionPhaseStatus'
        state:
          $ref: '#/components/schemas/ValidatePhaseState'
        failure:
          $ref: '#/components/schemas/Failure'
    CommitPhaseState:
      type: string
      enum:
        - COMMITTING
        - COMMITTED
    TransactionCommitPhase:
      properties:
        status:
          $ref: '#/components/schemas/TransactionPhaseStatus'
        state:
          $ref: '#/components/schemas/CommitPhaseState'
    ApplyPhaseState:
      type: string
      enum:
        - APPLYING
        - APPLIED
        - FAILED
    TransactionApplyPhase:
      properties:
        status:
          $ref: '#/components/schemas/TransactionPhaseStatus'
        state:
          $ref: '#/components/schemas/ApplyPhaseState'
        failure:
          $ref: '#/components/schemas/Failure'
    AbortPhaseState:
      type: string
      enum:
        - ABORTING
        - ABORTED
    TransactionAbortPhase:
      properties:
        status:
          $ref: '#/components/schemas/TransactionPhaseStatus'
        state:
          $ref: '#/components/schemas/AbortPhaseState'
    TransactionPhases:
      properties:
        initialize:
          description: the transaction initialization phase status
          $ref: '#/components/schemas/TransactionInitializePhase'
        validate:
          description: the transaction validation phase status
          $ref: '#/components/schemas/TransactionValidatePhase'
        commit:
          description: the transaction commit phase status
          $ref: '#/components/schemas/TransactionCommitPhase'
        apply:
          description: the transaction apply phase status
          $ref: '#/components/schemas/TransactionApplyPhase'
        abort:
          description: the transaction abort phase status
          $ref: '#/components/schemas/TransactionAbortPhase'
    ProposalID:
      type: string
    State:
      type: string
      enum:
        - PENDING
        - VALIDATED
        - APPLIED
        - FAILED
    Status:
      properties:
        phases:
          description: the transaction phases
          $ref: '#/components/schemas/TransactionPhases'
        proposals:
          description: the set of proposals managed by the transaction
          type: array
          items:
            $ref: '#/components/schemas/ProposalID'
        state:
          description: the overall transaction state
          $ref: '#/components/schemas/State'
        failure:
          $ref: '#/components/schemas/Failure'
    Transaction:
      description: Transaction refers to a multi-target transactional change. Taken from https://github.com/onosproject/onos-api/tree/master/proto/onos/config/v2
      properties:
        meta:
          description: the meta of the Transaction
          properties:
            key:
              description: the key of the Transaction
              type: string
            version:
              description: the version of the Transaction
              type: integer
              format: int64
            revision:
              description: the change revision number
              $ref: '#/components/schemas/Revision'
            created:
              description: the time at which the transaction was created
              type: string
              format: date-time
            updated:
              description: the time at which the transaction was last updated
              type: string
              format: date-time
            deleted:
              description: the time at which the transcation was deleted
              type: string
              format: date-time
        id:
          description: the unique identifier of the transaction
          type: string
        index:
          description: a monotonically increasing, globally unique index of the change
          type: integer
          format: int64
        username:
          description: the name of the user that made the transaction
          type: string
        strategy:
          description: the transaction strategy
          $ref: '#/components/schemas/Strategy'
        details:
          description: the transaction details
          $ref: '#/components/schemas/Details'
        status:
          description: the current lifecycle status of the transaction
          $ref: '#/components/schemas/Status'
      required:
        - id
        - index
        - meta
    TransactionList:
      items:
        $ref: '#/components/schemas/Transaction'
      type: array
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  license:
    name: Apache-2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  title: Aether Top Level
  description: |-
    The "Aether Top Level" can be used for the PATCH command.
    It allows several of the Resources of the model specific resources to be committed in one command.
    GETs should continue to be done through the individual REST resources.

    > This interface is intended to be used only by expert users. It is used by the GUI to make multiple
      commits in 1 transaction. e.g. deleting many resources at once.

  version: 2.0.0
openapi: 3.0.0
paths:
  /aether-roc-api:
    patch:
      operationId: patch-top-level
      responses:
        "200":
          description: patched
      summary: PATCH at the top level of aether-roc-api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchBody'
  /targets:
    get:
      operationId: targets-top-level
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetsNames'
          description: GET OK 200
      summary: GET /targets A list of just target names
  /sdcore/synchronize/{service}:
    post:
      operationId: sdcore-push-config-top-level
      responses:
        "200":
          description: synchronized
      summary: POST /sdcore/synchronize/{service}
    parameters:
      - content:
          text/plain; charset=utf-8:
            schema:
              type: string
        description: sdcore service name e.g. sdcore-adapter-v4
        in: path
        name: service
        required: true
  /transactions:
    get:
      operationId: get-transactions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
          description: GET OK 200
      summary: GET /transactions
      tags:
        - TransactionList
  /spec:
    get:
      operationId: spec-top-level
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: GET OK 200
      summary: GET /spec The Top Level Spec in YAML format. Same as aether-top-level-openapi3.yaml
  /spec/aether-2.0.0-openapi3.yaml:
    get:
      operationId: spec-aether-200
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: GET OK 200
      summary: GET /spec/aether-2.0.0-openapi3.yaml The Aether 2.0.0 spec
  /spec/aether-2.1.0-openapi3.yaml:
    get:
      operationId: spec-aether-210
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: GET OK 200
      summary: GET /spec/aether-2.1.0-openapi3.yaml The Aether 2.1.0 spec
  /spec/aether-app-gtwy-openapi3.yaml:
    get:
      operationId: spec-aether-app-gtwy
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: GET OK 200
      summary: GET /spec/aether-app-gtwy-openapi3.yaml The Aether Application Gateway spec
