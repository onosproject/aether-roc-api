# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-1.0

components:
  schemas:
    PatchBody:
      properties:
        Updates:
          title: Updated elements
          description: Elements to be updated or replaced
          $ref: '#/components/schemas/Elements'
        Deletes:
          title: Deleted elements
          description: Elements to be deleted
          $ref: '#/components/schemas/Elements'
        Extensions:
          title: gnmi extensions
          description: Model type and version of 'target' on first creation [link](https://docs.onosproject.org/onos-config/docs/gnmi_extensions/#use-of-extension-101-device-version-in-setrequest)
          properties:
            change-name-100:
              type: string
              title: change-name-100
            model-version-101:
              type: string
              title: model-version-101
            model-type-102:
              type: string
              title: model-type-102
          type: object
        default-target:
          description: Target (device name) to use by default if not specified on indivdual updates/deletes as an additional property
          type: string
          pattern: '[0-9a-z\-\._]+'
      required:
      - default-target
    Elements:
      properties:
        application-4.0.0:
          title: Application 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Application'
        connectivity-service-4.0.0:
          title: Connectivity-service 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Connectivity-service'
        device-group-4.0.0:
          title: Device Group 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Device-group'
        enterprise-4.0.0:
          title: Enterprise 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Enterprise'
        ip-domain-4.0.0:
          title: IP Domain 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Ip-domain'
        site-4.0.0:
          title: Site 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Site'
        template-4.0.0:
          title: Template 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Template'
        traffic-class-4.0.0:
          title: Traffic Class 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Traffic-class'
        upf-4.0.0:
          title: UPF 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Upf'
        vcs-4.0.0:
          title: VCS 4.0.0 updates
          $ref: './aether-4.0.0-openapi3.yaml#/components/schemas/Vcs'
        connectivity-services-2.0.0:
          title: Connectivity-service 2.0.0 updates
          $ref: './aether-2.0.0-openapi3.yaml#/components/schemas/Connectivity-services'
        enterprises-2.0.0:
          title: Enterprise 2.0.0 updates
          $ref: './aether-2.0.0-openapi3.yaml#/components/schemas/Enterprises'
    TargetName:
      properties:
        name:
          type: string
    TargetsNames:
      items:
        $ref: '#/components/schemas/TargetName'
      type: array
    ChangeValue:
      description: an individual Path/Value and removed flag combination in a Change
      properties:
        path:
          description: the path to change
          type: string
        value:
          description: the change value
          type: string
        removed:
          description: indicates whether this is a delete
          type: boolean
      required:
        - path
      type: object
    Change:
      description: represents a configuration change to a single target
      properties:
        target_id:
          description: the identifier of the target to which this change applies
          type: string
        target_version:
          description: an optional target version to which to apply this change
          type: string
        target_type:
          description: an optional target type to which to apply this change
          type: string
        values:
          description: a set of change values to apply
          items:
            $ref: '#/components/schemas/ChangeValue'
          type: array
      required:
        - target_id
      type: object
    Transaction:
      description: Transaction refers to a multi-target transactional change. Taken from https://github.com/onosproject/onos-api/tree/master/proto/onos/config/v2
      properties:
        id:
          description: the unique identifier of the transaction
          type: string
        index:
          description: a monotonically increasing, globally unique index of the change
          type: integer
          format: int64
        revision:
          description: the change revision number
          type: integer
          format: int64
        status:
          description: the current lifecycle status of the transaction
          properties:
            phase:
              description: the current phase of the transaction
              type: string
              enum:
                - TRANSACTION_CHANGE
                - TRANSACTION_ROLLBACK
            state:
              description: the state of the transaction within a Phase
              type: string
              enum:
                - TRANSACTION_PENDING
                - TRANSACTION_COMPLETE
                - TRANSACTION_FAILED
                - TRANSACTION_VALIDATING
                - TRANSACTION_VALIDATED
                - TRANSACTION_VALIDATION_FAILED
          required:
            - phase
            - state
          type: object
        created:
          description: the time at which the transaction was created
          type: string
          format: date-time
        updated:
          description: the time at which the transaction was last updated
          type: string
          format: date-time
        changes:
          description: a set of changes to apply to targets
          items:
            $ref: '#/components/schemas/Change'
          type: array
          x-keys: target_id
        deleted:
          description: a flag indicating whether this transaction is being deleted by a snapshot
          type: boolean
        dependency:
          description: a reference to the transaction on which this transaction is dependent
          type: string
        dependents:
          description: a list of references to transactions that depend on this transaction
          items:
            properties:
              id:
                type: string
            type: object
          type: array
          x-keys: id
        username:
          description: the name of the user that made the transaction
          type: string
      required:
        - id
        - index
        - revision
    TransactionList:
      items:
        $ref: '#/components/schemas/Transaction'
      type: array
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  license:
    name: LicenseRef-ONF-Member-1.0
    url: https://opennetworking.org/wp-content/uploads/2020/06/ONF-Member-Only-Software-License-v1.0.pdf
  termsOfService: https://opennetworking.org/wp-content/uploads/2019/02/ONF-Licensing-and-IPR-FAQ-2020-06.pdf
  title: Aether Top Level
  description: |-
    The "Aether Top Level" can be used for the PATCH command.
    It allows several of the Resources of the model specific resources to be committed in one command.
    GETs should continue to be done through the individual REST resources.

    > This interface is intended to be used only by expert users. It is used by the GUI to make multiple
      commits in 1 transaction. e.g. deleting many resources at once.

  version: 2.0.0
openapi: 3.0.0
paths:
  /aether-roc-api:
    patch:
      operationId: patch-top-level
      responses:
        "200":
          description: patched
      summary: PATCH at the top level of aether-roc-api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchBody'
  /targets:
    get:
      operationId: targets-top-level
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetsNames'
          description: GET OK 200
      summary: GET /targets A list of just target names
  /sdcore/synchronize/{service}:
    post:
      operationId: sdcore-push-config-top-level
      responses:
        "200":
          description: synchronized
      summary: POST /sdcore/synchronize/{service}
    parameters:
      - content:
          text/plain; charset=utf-8:
            schema:
              type: string
        description: sdcore service name e.g. sdcore-adapter-v4
        in: path
        name: service
        required: true
  /transactions:
    get:
      operationId: get-transactions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
          description: GET OK 200
      summary: GET /transactions
      tags:
        - TransactionList
  /spec:
    get:
      operationId: spec-top-level
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: GET OK 200
      summary: GET /spec The Top Level Spec in YAML format. Same as aether-top-level-openapi3.yaml
  /spec/aether-2.0.0-openapi3.yaml:
    get:
      operationId: spec-aether-200
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: GET OK 200
      summary: GET /spec/aether-2.0.0-openapi3.yaml The Aether 2.0.0 spec
  /spec/aether-4.0.0-openapi3.yaml:
    get:
      operationId: spec-aether-400
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: GET OK 200
      summary: GET /spec/aether-4.0.0-openapi3.yaml The Aether 4.0.0 spec

