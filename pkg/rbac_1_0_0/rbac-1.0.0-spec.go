// Code generated by oapi-codegen. DO NOT EDIT.
// Package rbac_1_0_0 provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package rbac_1_0_0

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+RXXW/bOgz9KwbvfbgXUOp0exk87GHAgqBYsRZdMWAo+qA6dKrOljRJLhoE/u+DZCf+",
	"TNo6Thpgb7FEUodHPCKzhFAkUnDkRkOwBEkVTdCgcl+Gqjka+ysU3CB3Pw0+GV/GlPGPXnhPlUbzKTXR",
	"6IPd1OE9JtSZLSRCANooxueQZRmBGepQMWmY4BAUwb3/ZvjIQvQY9wQXehQKHrH5/0AAn2giYxuEcYOK",
	"0xgIMOsqqbkHApwmuA4EBBT+TpnCGQRGpWhPzOG4XK7uaPjjdDzOre2Xy1cJicowdDbnTJu23VSJVNpt",
	"ZjBxdv8qjCCAf/ySPL84yt/knxEwzLh0zgwmm8zIijiqFF1Yr25QV8KG6o3JuT8LyVk1EVW8OjhdW4u7",
	"BwyNPWMLoy+mf8d0yxgV9M8d176KWgEv14Gqy6RZ+ATmNiKbVT1WSy3r7OX8rSipc9gPohIx1hEWKz0B",
	"dmPrtrtElTCtC8CvL+OKf+8r2kf+9bzqTMRIo1HMtBlxkfJaYa8AuI0OqKv9Roh2sdrzaJOHcrErtFso",
	"jd13JwMb9d9IvEWW9WY8EtVjrF/17fcSMcPYk3E6ZzbEI6qcRTg9GZ+Mi9w4lQwCeO+WiGsJjj9f3dHQ",
	"f3Sm/jJHlrnFXB4xGpfkmomzGQTwxa13vmcKtRRcr+QV0TQ2LaWB40WnSULVwsabnE+uJ94UuT0FZ16k",
	"ROL9/Pxtmmfn3oW8tdaBTNE8j+LdeNxoylTKmIUujP+g8zsve/HrRNXVrKeTa+/iq2cPridqNzZTvoUA",
	"AobONQQ3jSqC24zUxpCbbvyliV84ZrcEpNAdpF4KbYa728uL79fbbjYjW4rQd0+/b58Xf5k/Mlmfwqy2",
	"qSOo0I1w9luqlb4+WM1WbqhH+ZbjTUcd72GK/oULLxLKUzn3HePxupM1xmOyL13tXJpDCGxZjFj9xXVE",
	"wnoDUQ0uqJ5aOrCM5gXdHToqZ/aDCultROT6k6xNsK8VUWsUPAI1bce0X1k1/6sMp6/GZfVUmnuxDzZ8",
	"DVMdAxT5LkPY8cxfhx+9hp66dpi3/t5Ra69TVpb9CQAA//8vY2fFHhYAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
