// Code generated by oapi-codegen. DO NOT EDIT.
// Package rbac_1_0_0 provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package rbac_1_0_0

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9RWS2/TQBD+K9bA0akDvSAjDkhEUUVFq9ILQj1snXG6xd5ddscVUeT/jnZt109SJ81D",
	"nOLM7Dy+z9+sZw2RTJUUKMhAuAYTPWDK3OPNPYvsr9JSoSaOznrJDVnPXMtMWQMnTJ3nrcYYQngT1BmD",
	"Ml1QR+Q+EKcEIYQLwrR2+EArZc1Ma7ay56pSN9Ie36KSCxgo5OzdOo1zDvGzX94/YkQ2TwvvBjq2brSO",
	"anTRT9mnZoEm0lwRl8LWqUKb5ucgQ5qLpY1a2ox80YyoTL3T+SYeKqBtLnZrSssE2z2VltEtDXdTea5R",
	"p9yYsqkx0mlE7Ez1flC1e2/jS5DFk4QbmgiZiZbsqpLOMdBc5e+k6MvM1mNd5LVxKLUz1Ifd/0HMjZnr",
	"QO0RYs9zEctWF0KaSSRFzJdeKheYeCrJltxGP6EuKIN3Z9Oz6UQyc16iEUxxCOHc2sEHxejBMRboexYF",
	"T+68ey70nCA5NM+QLxYQwhdnLy8LjUZJYaoJiFmWUG8YwEE2WZoyvbIZZpez25k3R2Hz4sKLtUy9H5+/",
	"zQssbliR+qXnSEN130+n9ieSglC4MKZUwiMXGDya4gUWOh8zBQXlbQjz2a139dWzpZxvHFIb1SN3A3Af",
	"iC0NhD8B7nIflDQDLFxLQ6+h//rq++0m8nO/L4jA3ZSBneJgXcxyPk4kzXv8JGr5ZwP7lk3jc3ZQ/TTe",
	"xSgp1d9vpymmWYqE2vpa6An/UKASxsVHL3pg2iB9yiiefGjT0L3MelB/4cqLpfZ0wTm3NnvVgA+Cpa2P",
	"gcbfGde4gJB0hvndS5J/tZheof11uSxso/uTav4oej+K1kfL/MgKX5Y0D0i83ix30vhR9e1uddVatl7W",
	"d29rOYnQN3exb8V31+PDSr/zWkYPgbsfX14f9vMCdxfcdmvEKTeIYywPx9gbttoY/v9l4aB7Qp7/DQAA",
	"//9LSEWPPBIAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
