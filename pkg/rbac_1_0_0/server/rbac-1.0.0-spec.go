// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+RYwW7bOBD9FWF2D7sAHTm7l0JFDwVqGEGDJkiDAkWQAyOPHKYSyZJUEMPQvxekZFuS",
	"aTuRbMNFbxE1M3zz+J44zhxikUnBkRsN0RwkVTRDg8o9GaqmaOxfseAGufvT4IsJZUoZfx/Ej1RpNB9y",
	"kwze2Zc6fsSMurCZRIhAG8X4FIqiIDBBHSsmDRMcoqp48M8En1mMAeOB4EIPYsETNv0XCOALzWRqizBu",
	"UHGaAgFmUyU1j0CA0wyXhYCAwp85UziByKgc7Y4lHNfLzQONv50Ph2W0fXL9KiFRGYYu5pJpsx43ViKX",
	"9jUzmLm4vxUmEMFf4Yq8sNoq3JRfEDDMuHYuDGabwsiCOKoUndksP6gbYUt1xuTSd0JyUW1EtSwPp8to",
	"8fCEsbF7bGH01fT3bHdVo4Z+13brR9EQ8HxZqL5M2sInMLUV2aSesVhaiy5ez9+CkiaH3SAqkWITYbXS",
	"EaAfmz/uGlXGtK4Av13GtfzOR3SI/pt9NZlIkSaDlGkz4CLnDWEvALgXHqiL960S62K1+9E2D6tFX2m3",
	"sAp2z14GNvq/1fgaWTab8UTUt7F59W9/kIkJpoFM8ymzJZ5RlSzC+dnwbFj1xqlkEMH/bom4K8HxF6oH",
	"GofPLjScl8gKt1jaI0XjmlwycTGBCD65de/3TKGWguuFvRKap2bNaeB40XmWUTWz9UaXo9tRMEZud8FJ",
	"kCiRBd8/fhmX3bnvQnm1NoGM0exG8d9w2LqUqZQpi12Z8EmXZ766i99mKt9lPR7dBlefA7txs1H7YjPl",
	"WwggYOhUQ3TXUhHcF6Qxhtz58a9CwiqxuCcghfaQei202d/ZXl99vd12sgXZIsLQffrDeXUDFF1EuZgU",
	"TkCZXiiHlWc1Tu1No+WJdFCq05BHrQeYlX/gLEiECqYV3Z4peDVStMZgcij/9JLhXk0U2ts6nJd3dndL",
	"VVPfqdjKB+cI1irH5D3by51QR4+VOvstjHZARKpUgwfQclQ9qvH7mKWf+Xub/XR8fnyL79vdPXx9ZEuf",
	"kIFOxDuhbPxE7WKjxm+9EzHUZkyHt1b9nxH7NZnv1Doaz8nvjzZff9nutGFR/AoAAP//VeBzxVwXAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
