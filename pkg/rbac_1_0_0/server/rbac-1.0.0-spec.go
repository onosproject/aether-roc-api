// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xZ34vjNhD+V8y0Dy0o52z7Ulz60NIQjh69ZbsUynEPWnuS1dWWVEleLgT/70WyE/+S",
	"s7uOk5pyL0ssSzPffJpvNPLuIRaZFBy50RDtQVJFMzSo3JOhaovG/ooFN8jdT4OfTShTyviPQfxIlUbz",
	"U242ix/sSx0/YkbdtJ1EiEAbxfgWiqIgkKCOFZOGCQ5RZTz4JsEnFmPAeCC40ItY8A3bfgsE8DPNZGqN",
	"MG5QcZoCAWaXSmoegQCnGR4NAQGF/+RMYQKRUTlaj3YEtflFJAxdRHcPNP7zZrks19intRK5vDvO23Wi",
	"pVKmLKYWc/hJW+DNIL9WuIEIvgprFsPyrQ4HXFkqCjIEZGv/sOROpHhFTA2vg/CuA2fY/dUYOc2CSFGJ",
	"FFlyiypjWjPBrwer69nBLEhlcyDBnayVkKhMJYJ3TJuh7Iz2wAxmenR2EzDMONW+NZgNTSOH+kCVoju7",
	"yg/KbcZ4TOVePgfJzeoiaqzycHqcLR4+YWxgWNGvor8pxDN3oqXpOpYXOu/vT6t474/2msOkW/QJVDab",
	"Kw5DvdnFy0nt8NTmdxzSUlvNBdXISJx+bC/U9UTVgcyIC1+MbW5SpJtFyrRZcJHzVv4fYLgXHsCH9x0T",
	"/Sy2/miXjXrQZ9oN1JPds5eHwWrhDb9HnLXB+EY0ndnVzbYoyESCaSDTfMusiSdUJZdw82b5ZllFyKlk",
	"EMH3boi4bsmxGKoHGodPbmq4L/EVbrCUTYrGhXrk420CEfzqxr01UKGWguuD7DY0T01PgeDY0XmWUbWz",
	"9lbvVverYI3cesEk2CiRBX/9/Pu6jM6VjbLrbANZo3kexXfL5YXbk24fu17dB+9/C6zjdqD2xTDlJwgg",
	"YOhWQ/Shk0vwsSCtDv2DH389JawWFh8JSKE9pN4KPcRqq6vx+Wl11+HplrHo7dNNP1NihZaQDo+37/+4",
	"P5UuBTmR2aE7KsJ9dWIUYzL90LLMIN29UC6b88dby0SJX+7IiPTvnv5nyIFc5Eb7N+6COtG8d9W6+elc",
	"Vl8p0DoPzlZp7wI8F6mG9swM9+XJOV647bZ2Lho+geoKcu5c+CdVdmcDJxB63T/9ryR/QUQHzXgBHXv5",
	"CUpQN42nqUYDX8H+s8J0diGaT/G5fsGZusicUVTmXkiuIdvppDpPeYay9YlhjFI9d/WZKPc5ZJdXsu8T",
	"9JTK9u3jF7WfpXZv0kyi/lP/CblkNSiKfwMAAP//boZokrgcAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
