// Code generated by GENERATOR. DO NOT EDIT.
// Package server provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/6xV32/bNhD+Vw7sgLaYKMkuUKB6mrclW7E27lrvKQ4KRjzZTCmSIylnXqD/fThKtmM7",
	"QLehb/L9+r77eHd+YLVtnTVoYmDVAwv1GluRPi80tjuz89ahjwrTL+EMd942SiOf5mVekvE7jw2rWF4I",
	"jGv0g4Nbh0Y49SrfilY/Kw5gxYhUzA7FWN/3GfsgYr3+0crtOfDPqDEOnyPckyX3zPuMXfwV0QRlTcqS",
	"GGqvXFTWsIq9txI1xK1DEEbCBj0Fgm3geRR+hfE5WAON8iFC7VFQGlxrZb7cvFjH6EJVFNLWIbfGBuft",
	"HdYxt35V0G9eW9OoVQooVqZVn3FPpXjWBeS24XsTn5QTLnGjauQjD64MDxg9/tlhiC9ZdiJGS+w5seeT",
	"ckqWqKJGVp16MkafrGIhemVWpMoQsQOalJPz9MfOswp9to+m1uDQ2iHW3pIehPaHk+I/PpvERnQ68uEd",
	"zp9ukezwYpAMjGjxJUQLXUC43cKYDqoBYyMEh7VqFEp6T2Wk2shOaOgGXoUcxgpEAGFASKkIRWgYBd+S",
	"9iJG9AR9XfI3gv+9XPLlMv988/2T6tCrKY+SVdenvdz02Uj/SrR4PuRmtJ4W3acFykuhKmL7VVkfYfV7",
	"qsJ7sR2KKtNYqlFbE0WdtMZWKM2q5PqBVthgvLf+izIrmm+WjSTZ3KGBq70TLm1nZNoTlrHOU43dojxR",
	"ps+YVjWagIe+2bvB8hEbPr+65O+xvUXPJ3n5LyoW947WLqKJRee0FTIU03JaFuXr4lGxudFb/sk28V54",
	"5CMg30zyMneySSqhb8O8+YSexut/YE7eFOU0YQ7llVlxYSR/++Ejv5z9zokVL18nvMMuzdLphIV18A43",
	"qFnGxjVkFZvmJEKfsfGmsoq9Ssc3Dec6zcHu+Hpb8xTyQL56TR80Y+lp3kpWDVd2Yd0OZzwzu7s7djRc",
	"e6dVnTKLu0BUdn8TX5u8wyXv+2EpgrMmDLM7LcvztU5kUaYVCl3bCr8lrrPFT7+CiBDXCNE60ESa7vRJ",
	"u5RWDGuWMMbTcdz5uERHvZ/z+iYCHO1rkuC43V8uFjD/DQjyuGNy7BqBGWgVIrV714UIgzmdvFS0/ycA",
	"AP//bHQ/4sQHAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	sl := openapi3.NewSwaggerLoader()
	sl.IsExternalRefsAllowed = true
	swagger, err := sl.LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
