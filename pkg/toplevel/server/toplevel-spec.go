// Code generated by GENERATOR. DO NOT EDIT.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/onosproject/aether-roc-api/pkg/aether_3_0_0/server"
	externalRef1 "github.com/onosproject/aether-roc-api/pkg/aether_4_0_0/server"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./aether-3.0.0-openapi3.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	for rawPath, rawFunc := range externalRef1.PathToRawSpec(path.Join(pathPrefix, "./aether-4.0.0-openapi3.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
