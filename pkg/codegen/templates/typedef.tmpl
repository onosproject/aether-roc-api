import 	(
    "github.com/onosproject/aether-roc-api/pkg/gnmiutils"
   	modelplugin "github.com/onosproject/config-models/modelplugin/rbac-1.0.0/rbac_1_0_0"
)

{{range .Types}}
// {{printf "gnmiDelete%s" .TypeName}} deletes an instance of {{.JsonName}}.
func (w *ServerImpl) {{printf "gnmiDelete%s" .TypeName}}(ctx context.Context, openApiPath string, target Target, args ...string) (*{{.TypeName}}, error) {
    var response {{.TypeName}}

    return &response, nil
}

// {{printf "gnmiGet%s" .TypeName}} returns an instance of {{.JsonName}}.
func (i *ServerImpl) {{printf "gnmiGet%s" .TypeName}}(ctx context.Context, openApiPath string, target Target, args ...string) (*{{.TypeName}}, error) {

    gnmiGet, err := gnmiutils.NewGnmiGetRequest(openApiPath, string(target), args...)
    if err != nil {
        return nil, err
    }
    log.Infof("gnmiGetRequest %s", gnmiGet.String())
	jsonVal, err := gnmiutils.GetResponseUpdate(i.GnmiClient.Get(ctx, gnmiGet))
	if err != nil {
		return nil, err
	}
	log.Info(jsonVal.JsonVal)
    var gnmiResponse modelplugin.Device
	if err = modelplugin.Unmarshal(jsonVal.JsonVal, &gnmiResponse); err != nil {
	    return nil, fmt.Errorf("error unmarshalling gnmiResponse %v", err)
	}
	mpd := ModelPluginDevice{
	    device: gnmiResponse,
	}

    response := mpd.{{printf "handlePropList%s" .TypeName}}()

    return response, nil
}

// {{printf "gnmiPost%s" .TypeName}} adds an instance of {{.JsonName}}.
func (w *ServerImpl) {{printf "gnmiPost%s" .TypeName}}(ctx context.Context, openApiPath string, target Target, args ...string) (*{{.TypeName}}, error) {
    var response {{.TypeName}}

    return &response, nil
}

{{end}}

type Translator interface {
    {{range .Types}}
    {{printf "handlePropList%s" .TypeName}}() {{printf "*%s" .TypeName}}{{end}}
}
