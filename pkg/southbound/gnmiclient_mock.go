// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/southbound/gnmiclient.go

// Package southbound is a generated GoMock package.
package southbound

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	gnmi "github.com/openconfig/gnmi/proto/gnmi"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockGnmiClient is a mock of GnmiClient interface
type MockGnmiClient struct {
	ctrl     *gomock.Controller
	recorder *MockGnmiClientMockRecorder
}

// MockGnmiClientMockRecorder is the mock recorder for MockGnmiClient
type MockGnmiClientMockRecorder struct {
	mock *MockGnmiClient
}

// NewMockGnmiClient creates a new mock instance
func NewMockGnmiClient(ctrl *gomock.Controller) *MockGnmiClient {
	mock := &MockGnmiClient{ctrl: ctrl}
	mock.recorder = &MockGnmiClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGnmiClient) EXPECT() *MockGnmiClientMockRecorder {
	return m.recorder
}

// Init mocks base method
func (m *MockGnmiClient) Init(gnmiConn *grpc.ClientConn) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", gnmiConn)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init
func (mr *MockGnmiClientMockRecorder) Init(gnmiConn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockGnmiClient)(nil).Init), gnmiConn)
}

// Get mocks base method
func (m *MockGnmiClient) Get(ctx context.Context, request *gnmi.GetRequest) (*gnmi.GetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, request)
	ret0, _ := ret[0].(*gnmi.GetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockGnmiClientMockRecorder) Get(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGnmiClient)(nil).Get), ctx, request)
}

// Set mocks base method
func (m *MockGnmiClient) Set(ctx context.Context, request *gnmi.SetRequest) (*gnmi.SetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx, request)
	ret0, _ := ret[0].(*gnmi.SetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Set indicates an expected call of Set
func (mr *MockGnmiClientMockRecorder) Set(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockGnmiClient)(nil).Set), ctx, request)
}
