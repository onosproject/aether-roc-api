// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
