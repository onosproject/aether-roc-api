// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"rivz6maDQ522fv369X8DAAD//78RYlQyFwEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
