// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
