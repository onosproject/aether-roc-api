// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x9DW/bONLwXyG8L7Dtwh/p1+5tHjzAm03TXvCkqa9J+uLeJrBpibZ5lUQtSSX17fa/",
	"P+CXREqULMdS2uv2gNvGEjUzHM4Mh0PO8I9BQOKUJCjhbHD4xyCFFMaIIyp/cUhXiIu/ApJwlMg/OfrE",
	"J2kEcfJfIFhDyhD/74wvR38TL1mwRjGUzTYpGhwOGKc4WQ0+f/48HISIBRSnHJNkcKiBg0chusUBAjgB",
	"JCFsFJBkiVePB8MBFq1SyNeD4SCBMcq/GQwHFP2eYYrCwSGnGRLAxRPE+G8kxEgS/y5/sJkdpWmEA6gw",
	"O72BxZvJv5h6XXTi/1C0HBwOfpgUXJqot2xiw/ws+1eDsW/ss3tRMjtJwpTghPdNUoFod9pmbxb0weiT",
	"yKo0HpMkQQHHt5hvRgxRIa2d0eQF3o6Ghyds1pLal1KjRytKsrQzghygzTj7J2B2X2r0j/6JMoh2p61T",
	"nWuFbBcaT2OG2QOQp/BUKTtJOKIpxay7MbRANuHrF/Vsdyr6NUA7oKzSe5qOQhJD3N18W0BswNYn3lkT",
	"BReYd8d5CcyPo3tEs23YpCaOQrTECe7Ug6rH0ETNG5JgTqRP2z0hFvB2NMxOwhUahd3OKVsRNdF2EcMo",
	"GgUoinqgxwJepeESxWkEOxTPHGA9rv6QznbBPruIuhSAOvitKenUhWjC4aGIwuUSB6Mggqw7P8GFugXr",
	"Q9Aw20bRVbrsDLOA5cXQNZaZH9P7oDsuClheDF1jmTVi6meJ4gVeT8MrHHFEO8euwdbj7dZauVC3YO3U",
	"MlUhf1bodQPx/VEYSqcCRlNKUkT55jIPqrnxsLepahdtAEtRgJcbAIEOkhG+RhTwNUwAXyMQoiXMIg4e",
	"kSTaAJKA6dHl8d9BjPiahI8Hw0GqcOlIGK/BCBNAbhGlOESALCVkNygnQHHMIyf0Vg7sFU1q+5p/RBb/",
	"QgEffB562l4lwRomKxRWCb0kgBTcITHm4EcTAfwRFJ0dAhiGoh8x4AT8mBmIP4IIM17hS1aP8QgEJI4h",
	"YChFFHIUSgiCS/lHIIZJCDmhGwA5p3iRcQQSGCNmca1AsRvjrqrfWbxz44mw/LXuXmMsrG6oKmHaSyEV",
	"JAURukUREHoDcYJohZnQJcoFcqaZZzUSXMIcxezekc6Cf6ccxXXNcv5BSuFmMBxkCf49Q6cKNacZGg4+",
	"jT6iDRscfhjgcHDjjIwPknckZr2MSiEHnysMD0OKlH9Rkl31Qqk0ZjbTx+AES1MCwZowLqR1CGACTqdD",
	"QMRTli0SxMeWBBs0FfktCUqZCuuXj5LBcBDDT2coWfH14PDJwdPnw0GMk/xBQYAN1kcEZmkENyO1Q1Ch",
	"Qr2VeilsQsbkTsPrq1PR3+OzU5eOvx3UUmGj8ZCBrGj6PmJtRcsL5Pmz3YRZ0nojibMjR2XVTD4KzhRt",
	"xDzDAblLmBq1I1t+3sANWCDAEBcfnZMEAaymDmtwAWZgFZEFjEQjGEWgCOEwW7gswso8FR2JEFwqFk5Q",
	"wg+L1r6fWOoI9hjz05dgSWhVGdyxf/a0PPYp5BxRAeEDHP37aPT/Zzf6j4PRr9fXo9n45ierM9hv5Iut",
	"qg+qSaFRVvdv2lsXZ+emdzMTK4dp/40Vs4lXHp1zoZrGQiBL0jVb6zQuJZSPUOIZ7zPIOBCvhapT0S81",
	"0jjO4sHhzy9ePHshh1r9PihQ5SBzdDjhaIVojo9xSD2e1CtM90GpoHqRUsJJQCKFUnp9Yk4+ng7K8/RU",
	"t/Sx0pZyR8if2UJ+eTz98+rl1GJ9jt3Dfl5e5PrNim4GVDPLnXQ+36L8PDh02nsfCP0vqZsWHYvH91Ez",
	"s2ZwO/hGDS5YYC4cxIo/FJK7JMLJx+qXU0RHaoUGUjEVW3bzzW/vgPkQhJBDIGALmVqkgktLQmPIlYj8",
	"/NwWsSd/e/7851+ePz/45dkvB7++ePH04ODAL3E5YT55y9I2NI+OSjSrz/qiWBNVpdfvqNUPomfw6/Yw",
	"vg6nOqihzu9d262Bbt3azd5hw9d1vNt/uJ8r3gyyeURrt6pKLnUQjFJKxDoaZWyU0ajK7Kt3Z4LXR8fH",
	"oGhq+8tVGB7rGRCKRi9WI9ttdPFkNDKL8hcrINpbSCqfd+Gd+8TnW3PT14y14/maMYsHBrzzuQf8Nu/T",
	"x+KHcEOHgzSgy3Y9Fy09XXcBeDCwdHUXtEMhm3pwlEC08KZ983k5tPp1mPKwRJXfhOvDcLJVa9PdcDLF",
	"NdX1DfczzX5Q/hGZ9TM8DSuYnQ2hPQjdGcB8k3a/8zxfjSndZutsLj6MjcPmbJBft8RrtTZjKsQh+K8D",
	"HphpQsEp/5EBGAQo5XARIdGf6wSq7wQ/Q7RCiYwJi18LhJMVgIDhZBUhLod+P501J48szZUP7hn6wfaJ",
	"FP8SLW8CGOIcJyvNnhBxRGOcIDUtELW2PJ0CHcBAbHidQAbuUBQByNTOhAJEESPRLaIWRCmJ9hDmhG1Z",
	"/OE0PMwb+35JlWf6YIq/i/KtNc/on01oGT8Uzex/PStMDanFTFR3DLAH81ddumld/MfbC3ChR2Rwj0BP",
	"u9N8/xmxARfJjX8y8w7aPQbahBB6H+z9ohJaTL7qKIRF45eLOtiCZPVEf7KDMNWFJVocgHUHVkxuIzlJ",
	"jZaUxOJRF0wog/WNltWGkx4Qc+JFa9yf5jixLyLoM9Xu4dqvY8nQvG2jnJqiTevlQs2hX3ep4G+03zLB",
	"B8g3AqWTzu1CYvfv+tYoVwfBLC/VN/eJ0jhbZt9UbGbbgqLo+ZfZubtpK7Qto41tg7vKWfIGd8HdGlEE",
	"VM5cRlVAnq1JFoVggUCasTUKfRz80azPmBNVbJJzv/sVsEPfZ03PlcOOErG8Cp2NLaU1pdMMUUTuhKSF",
	"mEH5t+yVXFE0hS2LLWaFJ+/HgpAIwaQywn4V9Yy5c8j/65gpGld5evWb6sVZ63nCm3rgzhK+JvvNER44",
	"Hs7PehiDxqM2MU5GjEOeMXcn9uT86Lezk8pmrPwAM+GD41sE9Jeuvf7ZNlMKzp9vjk7PL0/Oj86PT/58",
	"eXqhYRdHcSwyuoj45zLxrU0lYeLhwMvz88nR9Hzb3JHjSPw9TNgopTiGdFNFoV+AMFG7B4gCQ2IOtfi8",
	"BjpDAUlCL/z81RYMBQjvUaV9TgOdTkcvcwX9Ysd4csl9mMhizDNH7588//VpWef1IgdwChMWY8aEpmUJ",
	"5i1PgggcvnWOOpLnkQX5XB+wIoFc/6ZFbA7o9VrR/0ePPhyMfr3588OT0a836s8n8h/199MPB6Pn5u8X",
	"Hw5GL24eX1+PH//x7PPuH040ssd/PvrwZPT0xvx49uFg9PTmsX2wWPdvmwPmyJgcJf2hb4o2aWpfx+xc",
	"F5tUE7MJIbaZkq2MOXciLl7sN/26IFyGzrrlapc7NpqH39iJ0n3MdCni/fAWWhDwcNs+pQTRe+Z9Dgex",
	"k965e9bmcMCcBMgalRdtQCD3TYy93tkEONmQlgYXT++1ZbTF7N40GQdfrm7vxqJJT4p3I5VTgwOAQ5Rw",
	"vMTSUNuhymdP7Zn6119/9c/TPlWypmsDsaIbby5OgXqp83swokOgGi0QA2tyB5YYRSEDkCKQwuAjCgFO",
	"xASfAPH5GLzJGBcLe/QJBjzagCcvZAkeGHBEGYhIshqDV4SK93EaoSE4Pj4+Pz8/OTm5kP8rKeSTF65C",
	"vih6qbvh84WCoNq7mCxwhEBAsoTTDQhIiBzfQ87/fzz7bCmzgOMDn9SDTxC/I/RjHfinQxdBEmz1KlQb",
	"Z0jzngsCb9yp0S/ljSrhJoyXRDdcoVEQZYwj2vbgmfgG6G/8J9CaoPrmGTeFvCbMLLAWxtEKHu1otOpS",
	"ymvcmbr2902EECCKbrTludXxeo7Xg21K/fIKSkuBKmf/f3eiKmQ0pxz4pbot7v02nOpKJnwVeWOFg9Iu",
	"E0wFWbfGck9kMy1tPhQaTjVWu20kHWh7+Zh1ksShZ1663KQIHKnlt1ClYzUx2eLjkPO8PGkdjV5dX7sE",
	"CEStpErR5JMtuyrF17EE5hZF/hnmNmDAtGo9r3iqZbgTSbXBfuvjKpgq12fds79xrSwVbrRAa3iLiSdT",
	"5aXOFjctAF6ChIClTNMHNIsQAzHkwdqV3KcHtrC+PDn/5+jo7OzPo7Ozt//P+mt69dvZ6bEdfywT1EWk",
	"2paOv9q+p933h1lRMw9FssgBCPFyiahYQEFOmhdQT37+5Zdfnj6piXYyf5Idi1ockq2tTzMcMMZrSJ9c",
	"qC09IJFadD59YZNojRtjvMXpn6q016ySG6r2VE85KW7ve16vuXRO1aqVSWvfiz5y5BQPvurDaAWJXz4D",
	"rmlkfANZPqP5lTgK246OKm+hfHS0nbfQVEGp5Dc0NN3Tg/DDqhmYai2pkjNPPckklkMKkxC8Q1wYbJKA",
	"KcWEYr4ZgycAqwPba7xaI8bH4MkL8ygid+KJI6k1JlKg9+nMzvN7eTz/UhO80/kHSgcLFx6L9vI3Z9Br",
	"zZH42putjiLPLDA9OXsH0CeljS6CGvACjA/+7wGugheT5LHgHDi1I7s5Fs3BiuwKYFun95q5XNc9+zpM",
	"ZqaIKRcwMgWLhFSGIEuXUrRaGcq8FJtrFM3j/QygA8Fh6axTtu4ZArmavmoX+1CH77YkPgpdN6f0cLKS",
	"dtbFUAbTxapJYfi+K1qUsgkCMbxTwWFwpmqCfbkt0ixdPpC1J76iJVNCuSQmF5NW1Ur867Yvk37lLaWj",
	"j4doWiUynw3X9R6/Dht+GzQ4u7eY8gyq8GYWQbpzbYe8HKVrz83j/ey5A8Fh76xTFn+PgQWs42zkumz0",
	"wnlw8tHH4LX8F9zhKAKy9mQKKccBTtWK9zoR89r74wtTE0zF89W2tlhe6LJhlzRDO8pubV77HmnsDhNu",
	"vpU57v3xRa+z2jKvGlsnNHaVR3M+8U4sRSeEghAlmzF4JzUOUgTQJxRkXJ50uE5SvUAFhIaIjoEwn0tZ",
	"W0uoqIAllVQJoJufvIQcXSemhgUMPqoyhjvJmKlcW7BPP9lNruwyhzftArxfV1x3DE7jOJP57+MeYrxb",
	"fQWd1mLEGchqAmlENiqPY383omWguVRauHV4ucS/+4aah/6lneFUxhAFaQQTbQJwnEYoFh0wYrW0K9Ha",
	"yy4/s7J0eZilS+ff+px3x7KoDnimPSkDNavoulrYuxVOUcwo1ewopkHf7ODvfrg6tJv7ftupSzvtdteQ",
	"V7vfXdllsGeqBlYWJb1LK15hgnfItULJxleyNV8OS3C+bfotZYDVYNUA9dXa9Q8VTNNDu2637zfWjqKa",
	"UTzLn3yuqatOq5W2NgpmQG+NIjkTQsPo9b4h5KtY7njyFhnb6Py+5fPFt3yq41EZNNEcJ0tiit7DQM5g",
	"KIY4klCX5P+SFCX6aCVOVmNCV8WNi29TlIDz/CV4RbIkNDoiz8wN1pyn7HAy8YCprId/+AH8BoOPwpAl",
	"4XVynQgP7wjJmtTv3h7LFTIlETianopZH95CHEkreosheHdycSmsk/h7df7mdAxOuWiFPqUoEC6knAZj",
	"wjhAn4S3BKPrJCAJy2JEmSk+JkBL/1H47wLk2NAh4YvXLEtTQrnaDuGbFAcwAq9PLodg+vZC/Pfo8vjv",
	"Q/Dy5Ozk8gQQWSJeOLuHAtJPouUYvEOcYnSLAEyAGoyxeCcAjMExRUJgSq+uLodAwR6DNySUNwAkAH3C",
	"TCi83VRhHoOXKEIlONeJKXmp/GsV/l1AhkJAEtMjeWhKfwMuSIzMkWHTh/nrk0sgRvZwMqEkmEA5RpPb",
	"5+OD8cHElys7un0+sRYM8zF4jTiA+arAqlQw7gTDBYd0kQUfmUYlupY/s7PFJTbB+H3QzYtRAwm6q8KX",
	"VzDsjEB6pTnVo3N0909CP87H4CoNZY0pp1Pn6A6I9yq7Qsmt8C5IkAnHT6qM3NIbqYBTJYyA9KCbClgw",
	"AQthuDiSh8hDcIf5Wp0hh9dJRO6qgIaAIU3XHVytEFUqo4/Xq8ragrIffjAbMhtZI0vuRMpFRiB+v1V0",
	"SIG9RXSjCTMxMiaEeo7DufZtmVDXUJar0kCt3qiFomyNmQpMqAWa7I6JS7CAKLmHOmwhY2llZXCOz0O1",
	"HIlV0XOlSvMlIXPZHQhsv+w6Ec1gxEip7VA2lop3R9QNESAkICGys8sIBxwsUAAzuZZHG6m2+YLM8EXQ",
	"ySRjpbqaYdTsAlSzViXGq/tCdJtSn2KYbJo/V+yaFwUN5rr9ENytcbBWC3qWX7SxQAAyRgIMjQS5LLZU",
	"JRcBxK4TqEoXME4zKXsZM1sjcihV1EiLbU5gmI+UMv7CQlIqltIEiDVynMoQUyB1VVZuM18ClUlh+ClL",
	"nBHE5EBII6vtqZJW0+5ujaUTLxakgmAxy1nsuk6ESHKZbemyXRInpMFQaLTimMQxSYSFRxF4JTM+5LCi",
	"W0RhZOeABKqlrqEfiw+Y8DLUhGksNQ7nSgGKzBYZWzB0GP9Wfq+MlaXO8zE4AusshsmIIhjKydbRdqN3",
	"jBPBgjwuK2UHfeIALkjGbW1UKKwglw+HiqJp3WZrcpeIngkor69OJauOpIQxtI0jQ6U1ck5fIHk9jJAm",
	"OSIyGIToSLa0+8XAAkXkzozJ/6CNcUMswyTDT0QIu5AJaVzNbKYbGwpUTUB5Ow1dwQT/Wwa0AAScpCPh",
	"awq1S5CRgR+sCxHEE0fXhPeoXA9KiAqogSBjnMSIFmlMxRdgjRGFNFhvtB20gamOY3adWBq02GgrYMur",
	"MlO5ahNmzRVSx6X9lKLgaLfdEyl2dwmibI1TCY+SCI2U9wHV5ptx8dKMpkQ4Ay7Buf3nDvOVDBiR982m",
	"UsiiplLYStwoghH+N3KbmFjcdQIcc3XkhaREwTEscj58OTomFClGUrSMJPOQuXHl+WugplUAXryWFZ1z",
	"abjAvCwHbC4FfplR+XmIb3Fo8sHmoj2THZbzkyRH+nyi7ylFTJIlOiVmUZu9ULjdej7TlKXrDZMeLqEg",
	"Iiv55yM8RuO8riVYIbKiMF3jAORHiwJZZUbpLJE5X2oqYcqOCe9BwRIkssdj2cl2w+t4XWJQdb3AsnB7",
	"cl6V8SmlhEooJV9oTe5kUp2xK8U05KawgmMvxWIUWbYYWYQDAH4C8zgI5sJ9r+TDjfMWidXCTmnLW5T6",
	"n4j1Cw7smD8O88ZqsSkbxpB9VEwpZmhhnm+FpaUot6RKn1G8QGFYyTG0nAWJAoB5KYtwrmxtzjPNRzV9",
	"Q/BsFOIV5uDN8fGw+HFu/Tg5v9TWRmP4Wb9g2UKlQ1LVPTmYRUbt3NLwF6/B6pyE6Dchts6+PqHgHQwx",
	"YWNwAoW3ol4q/VjD0kDqofsJzPVm8nwM/q7vRsrrVefZJWPdlkMxhr70D9NChfbmY3C6NNtec04zNB+W",
	"QMoVrCpSNAZvhUbeYYaGwqkQrj1m6pVWjSJbaS4k0yr7pGVaALdSmpYUxkhKmOmL1ELl92vbhsKCCQ3J",
	"g3N1akWlxBlQPzJwYmckTvNPjLG0AdfmyDXCtrrTDF6543Nrmq6mLCr9uEVULCFQEo44GaEkdOy81mYB",
	"V7ovkiJbICpgwaOMZXL+h+AdZOkCUboBU/xYTMmYmYCDbKJlXswAFLGUJGpZw6UbRHl+M1dOg+NKAagC",
	"/0uKURJGajuyaGo5dtKJ1dfm2dbPTDo67P5aLV6uk7n9YG5MSJxFHKfSKdT8k8ZDG/doo2La0i9YSZ9o",
	"DEqAjMlXy4o6my+LNztzuMyYVvWatSarIswVFRa9r9hh7XeeW6MmPx+DK+mMiCnzI9rkZrRU6XI+BupS",
	"n8IkGf9UgfF8x8l8DOTlQ3UfgWOleMZHxRZhat2az48kMeZXmmXFI1P1am4tpPSyZp4X5pm7S5w8wVxg",
	"Op1Ku/vy/KIozSyPAJ1I10ctl+162MoCY47KKHNbYu3VlQZeuxliATEGp0mIKZJZ6/k6RdIk8LouClMO",
	"juULlpwtu7kxjEb3KYrkMtSpiVfYt3hB9WopdiPVMnorlDCVZasDqZaCgeW7zcw6I8IxlkFHcmjZCxW2",
	"VRZDIlPrEG0lxDIq0kZL6asOQ1c+kM2KjS2js+/1UaBjcxTowljB62Re9xI8en988XhuTJxgZ2mktAhZ",
	"F+fMx2D+/vhibrRN+PZ+xbVjII7+lnBUAk/u2REtQQKn0nbtitONUSEJNxeJBeFrNzKQu4glO1ZUKBd9",
	"1PNybjN0SMOSVQkHxSmhkOJoAyiKhQel3QiNxNIOdSDC7brNSbfn8syDXhIIhqJQb7hhy/WUOlGwYisf",
	"PIsRlwSHCRK6RD53eKC9AsdbKc5vlPWAUDBfwoipNnLHEMuojAAvAx9raWTnZp/Mi8wwXB74KOOQ9S0T",
	"6WjiEJmDs0owloTKOKKy7ZjmPRKai3UUUnhqOhvGZ7/mJlVGLyXuoBVmFEsHtVK0JFOCzNKlD9qVmJan",
	"cj/+VZYEkkmP5lfTV/PHCnxRmNMgSSlRvqk8ryKHPV996PGX9xGkiJqoBqHFlKw0VBiVtRCrfLkmkSpa",
	"YeqZKyrHYMGj+dF0JP4ytAoh0+sHy31mHgmtrtiqfG5YtFlALi4u50Mwv3gp/qsN6dCykUMhk1Y6zHwM",
	"plD4t7L6iRpBMRcVQ2fFFCXBljBc5pFWPUGataww/nLsVFcdKTEhNGWMLQ2T9tfROFPjRVodW29MMBjl",
	"2zQGkXNR65GtBpAi5T2pE08KkFrQyI91Akke8rqavqpbuJasd7HoEXOi8AuUn0utix6M/2QoNkOufjmG",
	"L++UNlwVX8111Px+Wo7H46r9BObFdX7zsdwbkRFbefliksVm7WgaoiQUVjQJ6xrpOw7FhKdvQJwPrdGT",
	"EURzt6IZKYsTX4dXAW1R3OZb2HgdD6OsyPl5jcS3G1DWZOi5JzZCSw5QnHK56pFmNcSB2kXTN8Q61MgN",
	"XGsqXmwKa+duIMqw7YXaqBVDW43e/iBj7Vag0PaVfC/mpWHXy1GYmMheEbsUVn6cByPdy9iUuOXhOCjD",
	"lUu8er6ay0lT/XqxmrsxwNx/l/RZ3nxBlM97Fw8atUxIQiL8uZeQwzzeJLVciPOL1/Lq56Ppufz5/LUO",
	"3xd1SqUNtouKillpaleaJFTTRG8R1bu7qjqj0NBqnUpOxIJDT1BWUVuhQyiK5LSvb7xHDPkuqHGnUtkD",
	"6xspbEWTkEKcmB2BHHHMMzFS4htBX235Ts8EZylDZTorBi4fWTN/yIEtJpPchSuFmO07eGQlMIpGZjWj",
	"VMLIen7wYHydGLgqnunxYpSzkO8JWoRsEx/GuJABJgypOv5S7DQx4xJVZusxeJ1BChOOZPqZDOIKYc1P",
	"9ixgEt7hkK+1o1aa2nPjA+YmCVam+TUtb81mroalJTGSuu0WSRcyq5dilg0vNSJL257nh3ys7x5izef0",
	"Xu4UOlZK8svudM3En8/4VC7TtuYIy8a/B3g+Bv8gFxpNMfDqfYoiKt0w4b/qjdiIMCZ5pZuEi6JFiCJh",
	"3bNwhXiuH1fTV9VuXU1fOV7zktA7SEPjKgunQzQRywgZOLFmDJKoJAShP4DjWBDyd9jWDyqCv2UfSHhV",
	"qktE+h7TwptwXju2ot5U5O11eEW4D3KPRDsIqgnATO25CE9IG6NSruBczlQ1KYbXyWA4EIKVqHQCfa7r",
	"TD15h5ajt+evRm+Q6MXoyfigxbGuyV06kpu/CZ9kaURgyCZPD54eTA5+nljA3ibRZnRBlvwOUjTSCEe3",
	"T8YH4zRUyaWIxuzt8sLcfbAzzie/Tg6eSpwKPE5WI5iEo9Ppu9Gro3+MBFWjg58lPuuuYGU+5cGcwXAg",
	"5ix1Ok09+TwcCPwwxYPDwTPdKIV8LQ8wls71/MFl5tfnSeXga4TUMff8eNhpKNNVxPMj56ipigIz5NaW",
	"Lx8+lCf/WBaryuMDffjMwbtD+tlKlZR2iXuNeANlTw8OzClCpC+ft47c/oupjqujpjtcGa/OKLp0vz65",
	"BG//BwiMbq/Fi0npoDBcyawLmWqR5uvBweEHPwlFkwnXWXs3w0FKmIchU8IqHPk9Q4z/RsJNXR+LJhix",
	"ybvig9mRO1Yl7j6pjrk6xRKWmCCPsrkD/3nYRjCdv//A4eedJLUfoW0W4DNPSlE76X14QZ51JdQ1Al6H",
	"6v5yP3SYwNEnPkkjiJP/klVlGeL/nfHl6G8uN8qV6Sr9/Ig2QArXcIDlpQiQr4sDxTIzqTgcz2mGWutf",
	"P6rYm1p2oqITM8tP/hAcvLfKnhSFBfpQXZdWwcbddLSOvAfQ1VmOuyulLTFjqwoXFPzn63KPdCj591Ki",
	"U2n3tyuOHHZvXyxZ68nQlBWxI7MziU22z/1Nj0pQ6d/62CS3uCH1fobK05mHtFU6easPe2Wz77vp+s8z",
	"XUYye7Re5qLnB7BgjjI3GLP62xSbDJa9DXCR3x24l4kKam4T3Xdl3oLULg2Q/1LUXQ1O3ZWSPa/Z63i1",
	"h0rUXRK7nwr4hWVHMfc/bLe+93DqgXSipaKcNZ3o301dvgINmvWnVtt0rT0533hAYQfJ6NhePKAR2d2y",
	"VOtsNNkNdcbuta5nsZdxCEuVnfadKBtI61K93YJUu2pwuTBJzxNimSd7CHa5ENd+susOfkvxdH+0m+gs",
	"DvQku1sE+cxXUq2dGH8BiZ51J951sl6P7hufgBpGtiO97FFJu9LYiX3l2O6K+xJ14Ze2I7EiD1NEda5R",
	"uSLPbsrs78SDqLT+0aFmOyz7ruXbh7wPXc+HtTeVdzVjX/VvF1ZuYmUHQeX2lO4RTd6xDw9pBO4XS27P",
	"tRbGwMjtX9gmdBC2bTfQD2IatsZrt0CR6aCtt7z9fD0VMHo2DpLOemdfvNY5rDrxjcTmMGCeY6lyfGAQ",
	"oJSresmEyso1Mi1UngdV9UXU0ekFUnn2KtmHy7MQu1kdL2MexuIo1F0bG6w7tN3OKPzf96oebK9qmwT2",
	"Yu5OjVb2aum07jcYuXIl7yYbdmLX093LZFlYOwin1dPVpcWwsOxsHNwa5z1H0krs2EN8T5xh2k9S7SFv",
	"JY/2n+0CaAW5fUhqo9CeVUtIthLYhxbdWTdS7BdoP5pv3GGuHctO9K4nFdxfG2t2dH1P76m5PWzy7tid",
	"pjOi96S4d63uaPt2V05tMQLf6i5uj3T4NclLWc2I7GvFethy3kVke7F2TcreYAfz/N7tpuw0Vcm1+9qq",
	"AmUHHnIdUV2ao9OC4F2tTdHX/r1jhxV7iPKpPT77Sao11G1k0PqrnV9suty5aDYJaR5fSoFqwlrI54PK",
	"6awLifXKrg/FN+4Ge0ewC/XqRdFaqlxxD1STel2o24b2UimJqQND76OlS+WR8HfWFnMPVs+mPe/8HnJ3",
	"oQdiP0FTw7lFstR/2plwQVZXclYjbMZg68FqkrCHkLLZ/UWtLG8FuG/cCDtjs6cSdKgJu6rDpFQcu716",
	"nMYMvyy+60pZ/FR93q4kzfT0ojJyZ8Eh894q5O/2X1ivPMPZhZZVh6wzrauR3PaqWNSRbq+Fb4pvutVA",
	"i5gWyldPRj+KZ+HbV+dim/S/rLqVBrATVXvjiFCnWmZL530UbGJViG99rqTKq5Nwhbo5e9qK0oa9sFJl",
	"fF2efbCL5tZ3pm8dnp3YfexMnx3WeXS7joLvsfIHOw+yVQo7NkSupPVmlFylbW+gistNdjZKF+LTYxRF",
	"HVuigqSGZWxxfUleB7SF6akluR97c2H1ZE8bYzHFZ1csTN9tyYPbElesOjEgF44SdGo0bP1qMBSmVvl2",
	"g2Aque5rB3KMHYRK62jqUtFzHDsrNy+o6zts6jBiD9G8tAZnP3EshrmF9BV/tAulGjK7lskG4TRz0m3A",
	"gGnFWojmQ4robH9Z9QltFfw3vnj1jl0HWtWDeu2jZxNZCnp3bTM393ercjZJ3lxIVRS8ZSpkK5p71UF1",
	"X34Hmmgz5rtSeka0S800o9a5fjrifU9VbZfH6GVUBwmMWynbI2+xLc0PoLH3y1PcypwGzdUy91fU3w7S",
	"ERuHsU813pp86Nw10UJvVXN5AcPeuuqg7mKl1UBcp0rpEr6zGjqfP8C6q8yWfQS5PGZ7im6Jky3ltPSr",
	"5XrMYkNvYrxNqM0KzdxTZmSgjUh/EfGedSnstaLfhPJbn3KaRrgrTe1Vb3fQ4ixdblfUq3S5r04KPB1M",
	"KB5KulQ0AX5nhcokTX3PGabnewjglRqD/QRNDmSzQMn/t5sCrtJlN8LlF7Di8kdhDEKQpUs2bhav/iVs",
	"dl8pK0maAfWNm2NrTPaT/c7kf6sO3AYtHPf3wd6OjsDTgVH1UNKlyAvwO4v7bfAQjrjp+R6C9T7oYPaW",
	"A9ksUPL/7Yzq+4B1I1x+Acv3NPSV7oG50r1F5WM/aR1L2+y+EleSOgPqGzew1pjspwed6cJO+lAqfmL/",
	"aq0rHVZdrSWtyTtx6q6OgSSEqXuX5QWSKaQcBzhVl3yq67bfH18AbC6lVqWZ5BX2mJlb8i9phrbq4gPV",
	"b9XisWfp1nrmVrT2W6vn2CMdrsp4KSrxenfz0mExWb8odWR2fHrb1hAtccQRnfxhaUlrC/RKftup8VHk",
	"NJkd++ZCcwn2HYBJOCEUhCjZjMG7LNLXNqNPKMg4CqUBSvVNvIDQEFF1P+wSU8YBzSJZCS6GPFgrExYK",
	"jYpxgtQtt/K2aX2dvroxd7zVSvnZ04eB0pj2M01LQ27ZKGno381RAx2O+ngJgpW7FnczRpY0dWCHXuV6",
	"1qEFMsrb1va0PJSh+t/JUQwP+v0PYDTQ14ey3/Owhafrf9FVQyfHKUqj0akebT86UW3e7sCExYAOjknU",
	"ULHH4Yhm+nrTpvsdhKjpfnUC/UscevAMXVfq1c0Bhzpp/fz58/8GAAD//3k5Mlm2FwEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
