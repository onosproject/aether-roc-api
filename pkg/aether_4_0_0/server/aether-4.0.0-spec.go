// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"nbTe39//bwAAAP//19f80CYlAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
