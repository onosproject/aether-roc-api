// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
