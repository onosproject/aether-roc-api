// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"gB5uyBYBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
