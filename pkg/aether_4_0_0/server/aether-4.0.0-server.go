// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"github.com/labstack/echo/v4"
	externalRef0 "github.com/onosproject/aether-roc-api/pkg/aether_4_0_0/types"
	"github.com/onosproject/aether-roc-api/pkg/middleware/openapi3mw"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// DELETE /application
	// (DELETE /aether/v4.0.0/{target}/application)
	DeleteApplication(ctx echo.Context, target externalRef0.Target) error
	// GET /application
	// (GET /aether/v4.0.0/{target}/application)
	GetApplication(ctx echo.Context, target externalRef0.Target) error
	// POST /application
	// (POST /aether/v4.0.0/{target}/application)
	PostApplication(ctx echo.Context, target externalRef0.Target) error
	// DELETE /application/application
	// (DELETE /aether/v4.0.0/{target}/application/application/{id})
	DeleteApplicationApplication(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /application/application
	// (GET /aether/v4.0.0/{target}/application/application/{id})
	GetApplicationApplication(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /application/application
	// (POST /aether/v4.0.0/{target}/application/application/{id})
	PostApplicationApplication(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /application/application/{id}/endpoint
	// (DELETE /aether/v4.0.0/{target}/application/application/{id}/endpoint/{name})
	DeleteApplicationApplicationEndpoint(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// GET /application/application/{id}/endpoint
	// (GET /aether/v4.0.0/{target}/application/application/{id}/endpoint/{name})
	GetApplicationApplicationEndpoint(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// POST /application/application/{id}/endpoint
	// (POST /aether/v4.0.0/{target}/application/application/{id}/endpoint/{name})
	PostApplicationApplicationEndpoint(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// DELETE /application/application/{id}/endpoint/{name}/mbr
	// (DELETE /aether/v4.0.0/{target}/application/application/{id}/endpoint/{name}/mbr)
	DeleteApplicationApplicationEndpointMbr(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// GET /application/application/{id}/endpoint/{name}/mbr
	// (GET /aether/v4.0.0/{target}/application/application/{id}/endpoint/{name}/mbr)
	GetApplicationApplicationEndpointMbr(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// POST /application/application/{id}/endpoint/{name}/mbr
	// (POST /aether/v4.0.0/{target}/application/application/{id}/endpoint/{name}/mbr)
	PostApplicationApplicationEndpointMbr(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// DELETE /connectivity-service
	// (DELETE /aether/v4.0.0/{target}/connectivity-service)
	DeleteConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// GET /connectivity-service
	// (GET /aether/v4.0.0/{target}/connectivity-service)
	GetConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// POST /connectivity-service
	// (POST /aether/v4.0.0/{target}/connectivity-service)
	PostConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// DELETE /connectivity-service/connectivity-service
	// (DELETE /aether/v4.0.0/{target}/connectivity-service/connectivity-service/{id})
	DeleteConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /connectivity-service/connectivity-service
	// (GET /aether/v4.0.0/{target}/connectivity-service/connectivity-service/{id})
	GetConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /connectivity-service/connectivity-service
	// (POST /aether/v4.0.0/{target}/connectivity-service/connectivity-service/{id})
	PostConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /device-group
	// (DELETE /aether/v4.0.0/{target}/device-group)
	DeleteDeviceGroup(ctx echo.Context, target externalRef0.Target) error
	// GET /device-group
	// (GET /aether/v4.0.0/{target}/device-group)
	GetDeviceGroup(ctx echo.Context, target externalRef0.Target) error
	// POST /device-group
	// (POST /aether/v4.0.0/{target}/device-group)
	PostDeviceGroup(ctx echo.Context, target externalRef0.Target) error
	// DELETE /device-group/device-group
	// (DELETE /aether/v4.0.0/{target}/device-group/device-group/{id})
	DeleteDeviceGroupDeviceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /device-group/device-group
	// (GET /aether/v4.0.0/{target}/device-group/device-group/{id})
	GetDeviceGroupDeviceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /device-group/device-group
	// (POST /aether/v4.0.0/{target}/device-group/device-group/{id})
	PostDeviceGroupDeviceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /device-group/device-group/{id}/imsis
	// (DELETE /aether/v4.0.0/{target}/device-group/device-group/{id}/imsis/{name})
	DeleteDeviceGroupDeviceGroupImsis(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// GET /device-group/device-group/{id}/imsis
	// (GET /aether/v4.0.0/{target}/device-group/device-group/{id}/imsis/{name})
	GetDeviceGroupDeviceGroupImsis(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// POST /device-group/device-group/{id}/imsis
	// (POST /aether/v4.0.0/{target}/device-group/device-group/{id}/imsis/{name})
	PostDeviceGroupDeviceGroupImsis(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// DELETE /enterprise
	// (DELETE /aether/v4.0.0/{target}/enterprise)
	DeleteEnterprise(ctx echo.Context, target externalRef0.Target) error
	// GET /enterprise
	// (GET /aether/v4.0.0/{target}/enterprise)
	GetEnterprise(ctx echo.Context, target externalRef0.Target) error
	// POST /enterprise
	// (POST /aether/v4.0.0/{target}/enterprise)
	PostEnterprise(ctx echo.Context, target externalRef0.Target) error
	// DELETE /enterprise/enterprise
	// (DELETE /aether/v4.0.0/{target}/enterprise/enterprise/{id})
	DeleteEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /enterprise/enterprise
	// (GET /aether/v4.0.0/{target}/enterprise/enterprise/{id})
	GetEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /enterprise/enterprise
	// (POST /aether/v4.0.0/{target}/enterprise/enterprise/{id})
	PostEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /enterprise/enterprise/{id}/connectivity-service
	// (DELETE /aether/v4.0.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	DeleteEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// GET /enterprise/enterprise/{id}/connectivity-service
	// (GET /aether/v4.0.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	GetEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// POST /enterprise/enterprise/{id}/connectivity-service
	// (POST /aether/v4.0.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	PostEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// DELETE /ip-domain
	// (DELETE /aether/v4.0.0/{target}/ip-domain)
	DeleteIpDomain(ctx echo.Context, target externalRef0.Target) error
	// GET /ip-domain
	// (GET /aether/v4.0.0/{target}/ip-domain)
	GetIpDomain(ctx echo.Context, target externalRef0.Target) error
	// POST /ip-domain
	// (POST /aether/v4.0.0/{target}/ip-domain)
	PostIpDomain(ctx echo.Context, target externalRef0.Target) error
	// DELETE /ip-domain/ip-domain
	// (DELETE /aether/v4.0.0/{target}/ip-domain/ip-domain/{id})
	DeleteIpDomainIpDomain(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /ip-domain/ip-domain
	// (GET /aether/v4.0.0/{target}/ip-domain/ip-domain/{id})
	GetIpDomainIpDomain(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /ip-domain/ip-domain
	// (POST /aether/v4.0.0/{target}/ip-domain/ip-domain/{id})
	PostIpDomainIpDomain(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /site
	// (DELETE /aether/v4.0.0/{target}/site)
	DeleteSite(ctx echo.Context, target externalRef0.Target) error
	// GET /site
	// (GET /aether/v4.0.0/{target}/site)
	GetSite(ctx echo.Context, target externalRef0.Target) error
	// POST /site
	// (POST /aether/v4.0.0/{target}/site)
	PostSite(ctx echo.Context, target externalRef0.Target) error
	// DELETE /site/site
	// (DELETE /aether/v4.0.0/{target}/site/site/{id})
	DeleteSiteSite(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /site/site
	// (GET /aether/v4.0.0/{target}/site/site/{id})
	GetSiteSite(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /site/site
	// (POST /aether/v4.0.0/{target}/site/site/{id})
	PostSiteSite(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /site/site/{id}/imsi-definition
	// (DELETE /aether/v4.0.0/{target}/site/site/{id}/imsi-definition)
	DeleteSiteSiteImsiDefinition(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /site/site/{id}/imsi-definition
	// (GET /aether/v4.0.0/{target}/site/site/{id}/imsi-definition)
	GetSiteSiteImsiDefinition(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /site/site/{id}/imsi-definition
	// (POST /aether/v4.0.0/{target}/site/site/{id}/imsi-definition)
	PostSiteSiteImsiDefinition(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /site/site/{id}/small-cell
	// (DELETE /aether/v4.0.0/{target}/site/site/{id}/small-cell/{name})
	DeleteSiteSiteSmallCell(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// GET /site/site/{id}/small-cell
	// (GET /aether/v4.0.0/{target}/site/site/{id}/small-cell/{name})
	GetSiteSiteSmallCell(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// POST /site/site/{id}/small-cell
	// (POST /aether/v4.0.0/{target}/site/site/{id}/small-cell/{name})
	PostSiteSiteSmallCell(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// DELETE /template
	// (DELETE /aether/v4.0.0/{target}/template)
	DeleteTemplate(ctx echo.Context, target externalRef0.Target) error
	// GET /template
	// (GET /aether/v4.0.0/{target}/template)
	GetTemplate(ctx echo.Context, target externalRef0.Target) error
	// POST /template
	// (POST /aether/v4.0.0/{target}/template)
	PostTemplate(ctx echo.Context, target externalRef0.Target) error
	// DELETE /template/template
	// (DELETE /aether/v4.0.0/{target}/template/template/{id})
	DeleteTemplateTemplate(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /template/template
	// (GET /aether/v4.0.0/{target}/template/template/{id})
	GetTemplateTemplate(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /template/template
	// (POST /aether/v4.0.0/{target}/template/template/{id})
	PostTemplateTemplate(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /template/template/{id}/device
	// (DELETE /aether/v4.0.0/{target}/template/template/{id}/device)
	DeleteTemplateTemplateDevice(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /template/template/{id}/device
	// (GET /aether/v4.0.0/{target}/template/template/{id}/device)
	GetTemplateTemplateDevice(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /template/template/{id}/device
	// (POST /aether/v4.0.0/{target}/template/template/{id}/device)
	PostTemplateTemplateDevice(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /template/template/{id}/device/mbr
	// (DELETE /aether/v4.0.0/{target}/template/template/{id}/device/mbr)
	DeleteTemplateTemplateDeviceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /template/template/{id}/device/mbr
	// (GET /aether/v4.0.0/{target}/template/template/{id}/device/mbr)
	GetTemplateTemplateDeviceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /template/template/{id}/device/mbr
	// (POST /aether/v4.0.0/{target}/template/template/{id}/device/mbr)
	PostTemplateTemplateDeviceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /template/template/{id}/slice
	// (DELETE /aether/v4.0.0/{target}/template/template/{id}/slice)
	DeleteTemplateTemplateSlice(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /template/template/{id}/slice
	// (GET /aether/v4.0.0/{target}/template/template/{id}/slice)
	GetTemplateTemplateSlice(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /template/template/{id}/slice
	// (POST /aether/v4.0.0/{target}/template/template/{id}/slice)
	PostTemplateTemplateSlice(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /template/template/{id}/slice/mbr
	// (DELETE /aether/v4.0.0/{target}/template/template/{id}/slice/mbr)
	DeleteTemplateTemplateSliceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /template/template/{id}/slice/mbr
	// (GET /aether/v4.0.0/{target}/template/template/{id}/slice/mbr)
	GetTemplateTemplateSliceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /template/template/{id}/slice/mbr
	// (POST /aether/v4.0.0/{target}/template/template/{id}/slice/mbr)
	PostTemplateTemplateSliceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /traffic-class
	// (DELETE /aether/v4.0.0/{target}/traffic-class)
	DeleteTrafficClass(ctx echo.Context, target externalRef0.Target) error
	// GET /traffic-class
	// (GET /aether/v4.0.0/{target}/traffic-class)
	GetTrafficClass(ctx echo.Context, target externalRef0.Target) error
	// POST /traffic-class
	// (POST /aether/v4.0.0/{target}/traffic-class)
	PostTrafficClass(ctx echo.Context, target externalRef0.Target) error
	// DELETE /traffic-class/traffic-class
	// (DELETE /aether/v4.0.0/{target}/traffic-class/traffic-class/{id})
	DeleteTrafficClassTrafficClass(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /traffic-class/traffic-class
	// (GET /aether/v4.0.0/{target}/traffic-class/traffic-class/{id})
	GetTrafficClassTrafficClass(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /traffic-class/traffic-class
	// (POST /aether/v4.0.0/{target}/traffic-class/traffic-class/{id})
	PostTrafficClassTrafficClass(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /upf
	// (DELETE /aether/v4.0.0/{target}/upf)
	DeleteUpf(ctx echo.Context, target externalRef0.Target) error
	// GET /upf
	// (GET /aether/v4.0.0/{target}/upf)
	GetUpf(ctx echo.Context, target externalRef0.Target) error
	// POST /upf
	// (POST /aether/v4.0.0/{target}/upf)
	PostUpf(ctx echo.Context, target externalRef0.Target) error
	// DELETE /upf/upf
	// (DELETE /aether/v4.0.0/{target}/upf/upf/{id})
	DeleteUpfUpf(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /upf/upf
	// (GET /aether/v4.0.0/{target}/upf/upf/{id})
	GetUpfUpf(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /upf/upf
	// (POST /aether/v4.0.0/{target}/upf/upf/{id})
	PostUpfUpf(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /vcs
	// (DELETE /aether/v4.0.0/{target}/vcs)
	DeleteVcs(ctx echo.Context, target externalRef0.Target) error
	// GET /vcs
	// (GET /aether/v4.0.0/{target}/vcs)
	GetVcs(ctx echo.Context, target externalRef0.Target) error
	// POST /vcs
	// (POST /aether/v4.0.0/{target}/vcs)
	PostVcs(ctx echo.Context, target externalRef0.Target) error
	// DELETE /vcs/vcs
	// (DELETE /aether/v4.0.0/{target}/vcs/vcs/{id})
	DeleteVcsVcs(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /vcs/vcs
	// (GET /aether/v4.0.0/{target}/vcs/vcs/{id})
	GetVcsVcs(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /vcs/vcs
	// (POST /aether/v4.0.0/{target}/vcs/vcs/{id})
	PostVcsVcs(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /vcs/vcs/{id}/device
	// (DELETE /aether/v4.0.0/{target}/vcs/vcs/{id}/device)
	DeleteVcsVcsDevice(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /vcs/vcs/{id}/device
	// (GET /aether/v4.0.0/{target}/vcs/vcs/{id}/device)
	GetVcsVcsDevice(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /vcs/vcs/{id}/device
	// (POST /aether/v4.0.0/{target}/vcs/vcs/{id}/device)
	PostVcsVcsDevice(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /vcs/vcs/{id}/device-group
	// (DELETE /aether/v4.0.0/{target}/vcs/vcs/{id}/device-group/{device-group})
	DeleteVcsVcsDeviceGroup(ctx echo.Context, target externalRef0.Target, id string, deviceGroup string) error
	// GET /vcs/vcs/{id}/device-group
	// (GET /aether/v4.0.0/{target}/vcs/vcs/{id}/device-group/{device-group})
	GetVcsVcsDeviceGroup(ctx echo.Context, target externalRef0.Target, id string, deviceGroup string) error
	// POST /vcs/vcs/{id}/device-group
	// (POST /aether/v4.0.0/{target}/vcs/vcs/{id}/device-group/{device-group})
	PostVcsVcsDeviceGroup(ctx echo.Context, target externalRef0.Target, id string, deviceGroup string) error
	// DELETE /vcs/vcs/{id}/device/mbr
	// (DELETE /aether/v4.0.0/{target}/vcs/vcs/{id}/device/mbr)
	DeleteVcsVcsDeviceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /vcs/vcs/{id}/device/mbr
	// (GET /aether/v4.0.0/{target}/vcs/vcs/{id}/device/mbr)
	GetVcsVcsDeviceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /vcs/vcs/{id}/device/mbr
	// (POST /aether/v4.0.0/{target}/vcs/vcs/{id}/device/mbr)
	PostVcsVcsDeviceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /vcs/vcs/{id}/filter
	// (DELETE /aether/v4.0.0/{target}/vcs/vcs/{id}/filter/{application})
	DeleteVcsVcsFilter(ctx echo.Context, target externalRef0.Target, id string, application string) error
	// GET /vcs/vcs/{id}/filter
	// (GET /aether/v4.0.0/{target}/vcs/vcs/{id}/filter/{application})
	GetVcsVcsFilter(ctx echo.Context, target externalRef0.Target, id string, application string) error
	// POST /vcs/vcs/{id}/filter
	// (POST /aether/v4.0.0/{target}/vcs/vcs/{id}/filter/{application})
	PostVcsVcsFilter(ctx echo.Context, target externalRef0.Target, id string, application string) error
	// DELETE /vcs/vcs/{id}/slice
	// (DELETE /aether/v4.0.0/{target}/vcs/vcs/{id}/slice)
	DeleteVcsVcsSlice(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /vcs/vcs/{id}/slice
	// (GET /aether/v4.0.0/{target}/vcs/vcs/{id}/slice)
	GetVcsVcsSlice(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /vcs/vcs/{id}/slice
	// (POST /aether/v4.0.0/{target}/vcs/vcs/{id}/slice)
	PostVcsVcsSlice(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /vcs/vcs/{id}/slice/mbr
	// (DELETE /aether/v4.0.0/{target}/vcs/vcs/{id}/slice/mbr)
	DeleteVcsVcsSliceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /vcs/vcs/{id}/slice/mbr
	// (GET /aether/v4.0.0/{target}/vcs/vcs/{id}/slice/mbr)
	GetVcsVcsSliceMbr(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /vcs/vcs/{id}/slice/mbr
	// (POST /aether/v4.0.0/{target}/vcs/vcs/{id}/slice/mbr)
	PostVcsVcsSliceMbr(ctx echo.Context, target externalRef0.Target, id string) error
}

// serverInterfaceWrapper converts echo contexts to parameters.
type serverInterfaceWrapper struct {
	handler ServerInterface
}

// DeleteApplication converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplication(ctx, target)
}

// GetApplication converts echo context to params.
func (w *serverInterfaceWrapper) GetApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplication(ctx, target)
}

// PostApplication converts echo context to params.
func (w *serverInterfaceWrapper) PostApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplication(ctx, target)
}

// DeleteApplicationApplication converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplicationApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplicationApplication(ctx, target, id)
}

// GetApplicationApplication converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationApplication(ctx, target, id)
}

// PostApplicationApplication converts echo context to params.
func (w *serverInterfaceWrapper) PostApplicationApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplicationApplication(ctx, target, id)
}

// DeleteApplicationApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplicationApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplicationApplicationEndpoint(ctx, target, id, name)
}

// GetApplicationApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationApplicationEndpoint(ctx, target, id, name)
}

// PostApplicationApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) PostApplicationApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplicationApplicationEndpoint(ctx, target, id, name)
}

// DeleteApplicationApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplicationApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplicationApplicationEndpointMbr(ctx, target, id, name)
}

// GetApplicationApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationApplicationEndpointMbr(ctx, target, id, name)
}

// PostApplicationApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostApplicationApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplicationApplicationEndpointMbr(ctx, target, id, name)
}

// DeleteConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteConnectivityService(ctx, target)
}

// GetConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetConnectivityService(ctx, target)
}

// PostConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostConnectivityService(ctx, target)
}

// DeleteConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteConnectivityServiceConnectivityService(ctx, target, id)
}

// GetConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetConnectivityServiceConnectivityService(ctx, target, id)
}

// PostConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostConnectivityServiceConnectivityService(ctx, target, id)
}

// DeleteDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceGroup(ctx, target)
}

// GetDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceGroup(ctx, target)
}

// PostDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceGroup(ctx, target)
}

// DeleteDeviceGroupDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceGroupDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceGroupDeviceGroup(ctx, target, id)
}

// GetDeviceGroupDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceGroupDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceGroupDeviceGroup(ctx, target, id)
}

// PostDeviceGroupDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceGroupDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceGroupDeviceGroup(ctx, target, id)
}

// DeleteDeviceGroupDeviceGroupImsis converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceGroupDeviceGroupImsis(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceGroupDeviceGroupImsis(ctx, target, id, name)
}

// GetDeviceGroupDeviceGroupImsis converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceGroupDeviceGroupImsis(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceGroupDeviceGroupImsis(ctx, target, id, name)
}

// PostDeviceGroupDeviceGroupImsis converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceGroupDeviceGroupImsis(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceGroupDeviceGroupImsis(ctx, target, id, name)
}

// DeleteEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprise(ctx, target)
}

// GetEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprise(ctx, target)
}

// PostEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprise(ctx, target)
}

// DeleteEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterpriseEnterprise(ctx, target, id)
}

// GetEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterpriseEnterprise(ctx, target, id)
}

// PostEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterpriseEnterprise(ctx, target, id)
}

// DeleteEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// GetEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// PostEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// DeleteIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) DeleteIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteIpDomain(ctx, target)
}

// GetIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) GetIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetIpDomain(ctx, target)
}

// PostIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) PostIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostIpDomain(ctx, target)
}

// DeleteIpDomainIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) DeleteIpDomainIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteIpDomainIpDomain(ctx, target, id)
}

// GetIpDomainIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) GetIpDomainIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetIpDomainIpDomain(ctx, target, id)
}

// PostIpDomainIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) PostIpDomainIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostIpDomainIpDomain(ctx, target, id)
}

// DeleteSite converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSite(ctx, target)
}

// GetSite converts echo context to params.
func (w *serverInterfaceWrapper) GetSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSite(ctx, target)
}

// PostSite converts echo context to params.
func (w *serverInterfaceWrapper) PostSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSite(ctx, target)
}

// DeleteSiteSite converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSite(ctx, target, id)
}

// GetSiteSite converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSite(ctx, target, id)
}

// PostSiteSite converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSite(ctx, target, id)
}

// DeleteSiteSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSiteImsiDefinition(ctx, target, id)
}

// GetSiteSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSiteImsiDefinition(ctx, target, id)
}

// PostSiteSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSiteImsiDefinition(ctx, target, id)
}

// DeleteSiteSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSiteSmallCell(ctx, target, id, name)
}

// GetSiteSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSiteSmallCell(ctx, target, id, name)
}

// PostSiteSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSiteSmallCell(ctx, target, id, name)
}

// DeleteTemplate converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplate(ctx, target)
}

// GetTemplate converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplate(ctx, target)
}

// PostTemplate converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplate(ctx, target)
}

// DeleteTemplateTemplate converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplateTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplateTemplate(ctx, target, id)
}

// GetTemplateTemplate converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplateTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplateTemplate(ctx, target, id)
}

// PostTemplateTemplate converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplateTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplateTemplate(ctx, target, id)
}

// DeleteTemplateTemplateDevice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplateTemplateDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplateTemplateDevice(ctx, target, id)
}

// GetTemplateTemplateDevice converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplateTemplateDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplateTemplateDevice(ctx, target, id)
}

// PostTemplateTemplateDevice converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplateTemplateDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplateTemplateDevice(ctx, target, id)
}

// DeleteTemplateTemplateDeviceMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplateTemplateDeviceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplateTemplateDeviceMbr(ctx, target, id)
}

// GetTemplateTemplateDeviceMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplateTemplateDeviceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplateTemplateDeviceMbr(ctx, target, id)
}

// PostTemplateTemplateDeviceMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplateTemplateDeviceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplateTemplateDeviceMbr(ctx, target, id)
}

// DeleteTemplateTemplateSlice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplateTemplateSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplateTemplateSlice(ctx, target, id)
}

// GetTemplateTemplateSlice converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplateTemplateSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplateTemplateSlice(ctx, target, id)
}

// PostTemplateTemplateSlice converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplateTemplateSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplateTemplateSlice(ctx, target, id)
}

// DeleteTemplateTemplateSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplateTemplateSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplateTemplateSliceMbr(ctx, target, id)
}

// GetTemplateTemplateSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplateTemplateSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplateTemplateSliceMbr(ctx, target, id)
}

// PostTemplateTemplateSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplateTemplateSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplateTemplateSliceMbr(ctx, target, id)
}

// DeleteTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTrafficClass(ctx, target)
}

// GetTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) GetTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTrafficClass(ctx, target)
}

// PostTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) PostTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTrafficClass(ctx, target)
}

// DeleteTrafficClassTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTrafficClassTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTrafficClassTrafficClass(ctx, target, id)
}

// GetTrafficClassTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) GetTrafficClassTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTrafficClassTrafficClass(ctx, target, id)
}

// PostTrafficClassTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) PostTrafficClassTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTrafficClassTrafficClass(ctx, target, id)
}

// DeleteUpf converts echo context to params.
func (w *serverInterfaceWrapper) DeleteUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteUpf(ctx, target)
}

// GetUpf converts echo context to params.
func (w *serverInterfaceWrapper) GetUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetUpf(ctx, target)
}

// PostUpf converts echo context to params.
func (w *serverInterfaceWrapper) PostUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostUpf(ctx, target)
}

// DeleteUpfUpf converts echo context to params.
func (w *serverInterfaceWrapper) DeleteUpfUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteUpfUpf(ctx, target, id)
}

// GetUpfUpf converts echo context to params.
func (w *serverInterfaceWrapper) GetUpfUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetUpfUpf(ctx, target, id)
}

// PostUpfUpf converts echo context to params.
func (w *serverInterfaceWrapper) PostUpfUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostUpfUpf(ctx, target, id)
}

// DeleteVcs converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcs(ctx, target)
}

// GetVcs converts echo context to params.
func (w *serverInterfaceWrapper) GetVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcs(ctx, target)
}

// PostVcs converts echo context to params.
func (w *serverInterfaceWrapper) PostVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcs(ctx, target)
}

// DeleteVcsVcs converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcs(ctx, target, id)
}

// GetVcsVcs converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcs(ctx, target, id)
}

// PostVcsVcs converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcs(ctx, target, id)
}

// DeleteVcsVcsDevice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcsDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcsDevice(ctx, target, id)
}

// GetVcsVcsDevice converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcsDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcsDevice(ctx, target, id)
}

// PostVcsVcsDevice converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcsDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcsDevice(ctx, target, id)
}

// DeleteVcsVcsDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcsDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcsDeviceGroup(ctx, target, id, deviceGroup)
}

// GetVcsVcsDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcsDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcsDeviceGroup(ctx, target, id, deviceGroup)
}

// PostVcsVcsDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcsDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcsDeviceGroup(ctx, target, id, deviceGroup)
}

// DeleteVcsVcsDeviceMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcsDeviceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcsDeviceMbr(ctx, target, id)
}

// GetVcsVcsDeviceMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcsDeviceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcsDeviceMbr(ctx, target, id)
}

// PostVcsVcsDeviceMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcsDeviceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcsDeviceMbr(ctx, target, id)
}

// DeleteVcsVcsFilter converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcsFilter(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcsFilter(ctx, target, id, application)
}

// GetVcsVcsFilter converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcsFilter(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcsFilter(ctx, target, id, application)
}

// PostVcsVcsFilter converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcsFilter(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcsFilter(ctx, target, id, application)
}

// DeleteVcsVcsSlice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcsSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcsSlice(ctx, target, id)
}

// GetVcsVcsSlice converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcsSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcsSlice(ctx, target, id)
}

// PostVcsVcsSlice converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcsSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcsSlice(ctx, target, id)
}

// DeleteVcsVcsSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcsSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcsSliceMbr(ctx, target, id)
}

// GetVcsVcsSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcsSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcsSliceMbr(ctx, target, id)
}

// PostVcsVcsSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcsSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcsSliceMbr(ctx, target, id)
}

// This is a simple interface which specifies echo.Route addition functions which
// are present on both echo.Echo and echo.Group, since we want to allow using
// either of them for path registration
type EchoRouter interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router EchoRouter, si ServerInterface, validateResponse bool) error {

	openApiDefinition, err := GetSwagger()
	if err != nil {
		return err
	}
	wrapper := serverInterfaceWrapper{
		handler: si,
	}

	router.DELETE("/aether/v4.0.0/:target/application", wrapper.DeleteApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/application", wrapper.GetApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/application", wrapper.PostApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/application/application/:id", wrapper.DeleteApplicationApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/application/application/:id", wrapper.GetApplicationApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/application/application/:id", wrapper.PostApplicationApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/application/application/:id/endpoint/:name", wrapper.DeleteApplicationApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/application/application/:id/endpoint/:name", wrapper.GetApplicationApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/application/application/:id/endpoint/:name", wrapper.PostApplicationApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/application/application/:id/endpoint/:name/mbr", wrapper.DeleteApplicationApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/application/application/:id/endpoint/:name/mbr", wrapper.GetApplicationApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/application/application/:id/endpoint/:name/mbr", wrapper.PostApplicationApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/connectivity-service", wrapper.DeleteConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/connectivity-service", wrapper.GetConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/connectivity-service", wrapper.PostConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/connectivity-service/connectivity-service/:id", wrapper.DeleteConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/connectivity-service/connectivity-service/:id", wrapper.GetConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/connectivity-service/connectivity-service/:id", wrapper.PostConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/device-group", wrapper.DeleteDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/device-group", wrapper.GetDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/device-group", wrapper.PostDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/device-group/device-group/:id", wrapper.DeleteDeviceGroupDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/device-group/device-group/:id", wrapper.GetDeviceGroupDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/device-group/device-group/:id", wrapper.PostDeviceGroupDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/device-group/device-group/:id/imsis/:name", wrapper.DeleteDeviceGroupDeviceGroupImsis, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/device-group/device-group/:id/imsis/:name", wrapper.GetDeviceGroupDeviceGroupImsis, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/device-group/device-group/:id/imsis/:name", wrapper.PostDeviceGroupDeviceGroupImsis, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/enterprise", wrapper.DeleteEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/enterprise", wrapper.GetEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/enterprise", wrapper.PostEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/enterprise/enterprise/:id", wrapper.DeleteEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/enterprise/enterprise/:id", wrapper.GetEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/enterprise/enterprise/:id", wrapper.PostEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.DeleteEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.GetEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.PostEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/ip-domain", wrapper.DeleteIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/ip-domain", wrapper.GetIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/ip-domain", wrapper.PostIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/ip-domain/ip-domain/:id", wrapper.DeleteIpDomainIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/ip-domain/ip-domain/:id", wrapper.GetIpDomainIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/ip-domain/ip-domain/:id", wrapper.PostIpDomainIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/site", wrapper.DeleteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/site", wrapper.GetSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/site", wrapper.PostSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/site/site/:id", wrapper.DeleteSiteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/site/site/:id", wrapper.GetSiteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/site/site/:id", wrapper.PostSiteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/site/site/:id/imsi-definition", wrapper.DeleteSiteSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/site/site/:id/imsi-definition", wrapper.GetSiteSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/site/site/:id/imsi-definition", wrapper.PostSiteSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/site/site/:id/small-cell/:name", wrapper.DeleteSiteSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/site/site/:id/small-cell/:name", wrapper.GetSiteSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/site/site/:id/small-cell/:name", wrapper.PostSiteSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/template", wrapper.DeleteTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/template", wrapper.GetTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/template", wrapper.PostTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/template/template/:id", wrapper.DeleteTemplateTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/template/template/:id", wrapper.GetTemplateTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/template/template/:id", wrapper.PostTemplateTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/template/template/:id/device", wrapper.DeleteTemplateTemplateDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/template/template/:id/device", wrapper.GetTemplateTemplateDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/template/template/:id/device", wrapper.PostTemplateTemplateDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/template/template/:id/device/mbr", wrapper.DeleteTemplateTemplateDeviceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/template/template/:id/device/mbr", wrapper.GetTemplateTemplateDeviceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/template/template/:id/device/mbr", wrapper.PostTemplateTemplateDeviceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/template/template/:id/slice", wrapper.DeleteTemplateTemplateSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/template/template/:id/slice", wrapper.GetTemplateTemplateSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/template/template/:id/slice", wrapper.PostTemplateTemplateSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/template/template/:id/slice/mbr", wrapper.DeleteTemplateTemplateSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/template/template/:id/slice/mbr", wrapper.GetTemplateTemplateSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/template/template/:id/slice/mbr", wrapper.PostTemplateTemplateSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/traffic-class", wrapper.DeleteTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/traffic-class", wrapper.GetTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/traffic-class", wrapper.PostTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/traffic-class/traffic-class/:id", wrapper.DeleteTrafficClassTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/traffic-class/traffic-class/:id", wrapper.GetTrafficClassTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/traffic-class/traffic-class/:id", wrapper.PostTrafficClassTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/upf", wrapper.DeleteUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/upf", wrapper.GetUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/upf", wrapper.PostUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/upf/upf/:id", wrapper.DeleteUpfUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/upf/upf/:id", wrapper.GetUpfUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/upf/upf/:id", wrapper.PostUpfUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/vcs", wrapper.DeleteVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/vcs", wrapper.GetVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/vcs", wrapper.PostVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/vcs/vcs/:id", wrapper.DeleteVcsVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/vcs/vcs/:id", wrapper.GetVcsVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/vcs/vcs/:id", wrapper.PostVcsVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/vcs/vcs/:id/device", wrapper.DeleteVcsVcsDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/vcs/vcs/:id/device", wrapper.GetVcsVcsDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/vcs/vcs/:id/device", wrapper.PostVcsVcsDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/vcs/vcs/:id/device-group/:device-group", wrapper.DeleteVcsVcsDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/vcs/vcs/:id/device-group/:device-group", wrapper.GetVcsVcsDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/vcs/vcs/:id/device-group/:device-group", wrapper.PostVcsVcsDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/vcs/vcs/:id/device/mbr", wrapper.DeleteVcsVcsDeviceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/vcs/vcs/:id/device/mbr", wrapper.GetVcsVcsDeviceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/vcs/vcs/:id/device/mbr", wrapper.PostVcsVcsDeviceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/vcs/vcs/:id/filter/:application", wrapper.DeleteVcsVcsFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/vcs/vcs/:id/filter/:application", wrapper.GetVcsVcsFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/vcs/vcs/:id/filter/:application", wrapper.PostVcsVcsFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/vcs/vcs/:id/slice", wrapper.DeleteVcsVcsSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/vcs/vcs/:id/slice", wrapper.GetVcsVcsSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/vcs/vcs/:id/slice", wrapper.PostVcsVcsSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v4.0.0/:target/vcs/vcs/:id/slice/mbr", wrapper.DeleteVcsVcsSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v4.0.0/:target/vcs/vcs/:id/slice/mbr", wrapper.GetVcsVcsSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v4.0.0/:target/vcs/vcs/:id/slice/mbr", wrapper.PostVcsVcsSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))

	return nil
}
