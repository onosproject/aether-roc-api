// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"github.com/labstack/echo/v4"
	externalRef0 "github.com/onosproject/aether-roc-api/pkg/aether_2_0_0/types"
	"github.com/onosproject/aether-roc-api/pkg/middleware/openapi3mw"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// DELETE /connectivity-services
	// (DELETE /aether/v2.0.0/{target}/connectivity-services)
	DeleteConnectivityServices(ctx echo.Context, target externalRef0.Target) error
	// GET /connectivity-services
	// (GET /aether/v2.0.0/{target}/connectivity-services)
	GetConnectivityServices(ctx echo.Context, target externalRef0.Target) error
	// POST /connectivity-services
	// (POST /aether/v2.0.0/{target}/connectivity-services)
	PostConnectivityServices(ctx echo.Context, target externalRef0.Target) error
	// DELETE /connectivity-services/connectivity-service
	// (DELETE /aether/v2.0.0/{target}/connectivity-services/connectivity-service/{id})
	DeleteConnectivityServicesConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /connectivity-services/connectivity-service
	// (GET /aether/v2.0.0/{target}/connectivity-services/connectivity-service/{id})
	GetConnectivityServicesConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// POST /connectivity-services/connectivity-service
	// (POST /aether/v2.0.0/{target}/connectivity-services/connectivity-service/{id})
	PostConnectivityServicesConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE /enterprises
	// (DELETE /aether/v2.0.0/{target}/enterprises)
	DeleteEnterprises(ctx echo.Context, target externalRef0.Target) error
	// GET /enterprises
	// (GET /aether/v2.0.0/{target}/enterprises)
	GetEnterprises(ctx echo.Context, target externalRef0.Target) error
	// POST /enterprises
	// (POST /aether/v2.0.0/{target}/enterprises)
	PostEnterprises(ctx echo.Context, target externalRef0.Target) error
	// DELETE /enterprises/enterprise
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id})
	DeleteEnterprisesEnterprise(ctx echo.Context, target externalRef0.Target, entId string) error
	// GET /enterprises/enterprise
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id})
	GetEnterprisesEnterprise(ctx echo.Context, target externalRef0.Target, entId string) error
	// POST /enterprises/enterprise
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id})
	PostEnterprisesEnterprise(ctx echo.Context, target externalRef0.Target, entId string) error
	// DELETE /enterprises/enterprise/{ent-id}/application
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id})
	DeleteEnterprisesEnterpriseApplication(ctx echo.Context, target externalRef0.Target, entId string, appId string) error
	// GET /enterprises/enterprise/{ent-id}/application
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id})
	GetEnterprisesEnterpriseApplication(ctx echo.Context, target externalRef0.Target, entId string, appId string) error
	// POST /enterprises/enterprise/{ent-id}/application
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id})
	PostEnterprisesEnterpriseApplication(ctx echo.Context, target externalRef0.Target, entId string, appId string) error
	// DELETE /enterprises/enterprise/{ent-id}/application/{app-id}/endpoint
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id})
	DeleteEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context, target externalRef0.Target, entId string, appId string, endpointId string) error
	// GET /enterprises/enterprise/{ent-id}/application/{app-id}/endpoint
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id})
	GetEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context, target externalRef0.Target, entId string, appId string, endpointId string) error
	// POST /enterprises/enterprise/{ent-id}/application/{app-id}/endpoint
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id})
	PostEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context, target externalRef0.Target, entId string, appId string, endpointId string) error
	// DELETE /enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id}/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id}/mbr)
	DeleteEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context, target externalRef0.Target, entId string, appId string, endpointId string) error
	// GET /enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id}/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id}/mbr)
	GetEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context, target externalRef0.Target, entId string, appId string, endpointId string) error
	// POST /enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id}/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/application/{app-id}/endpoint/{endpoint-id}/mbr)
	PostEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context, target externalRef0.Target, entId string, appId string, endpointId string) error
	// DELETE /enterprises/enterprise/{ent-id}/connectivity-service
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/connectivity-service/{connectivity-service})
	DeleteEnterprisesEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, entId string, connectivityService string) error
	// GET /enterprises/enterprise/{ent-id}/connectivity-service
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/connectivity-service/{connectivity-service})
	GetEnterprisesEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, entId string, connectivityService string) error
	// POST /enterprises/enterprise/{ent-id}/connectivity-service
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/connectivity-service/{connectivity-service})
	PostEnterprisesEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, entId string, connectivityService string) error
	// DELETE /enterprises/enterprise/{ent-id}/site
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id})
	DeleteEnterprisesEnterpriseSite(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// GET /enterprises/enterprise/{ent-id}/site
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id})
	GetEnterprisesEnterpriseSite(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// POST /enterprises/enterprise/{ent-id}/site
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id})
	PostEnterprisesEnterpriseSite(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/device-group
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id})
	DeleteEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/device-group
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id})
	GetEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/device-group
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id})
	PostEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/device
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/device/{device-id})
	DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string, deviceId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/device
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/device/{device-id})
	GetEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string, deviceId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/device
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/device/{device-id})
	PostEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string, deviceId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/mbr)
	DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/mbr)
	GetEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device-group/{dg-id}/mbr)
	PostEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, dgId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/device
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device/{dev-id})
	DeleteEnterprisesEnterpriseSiteDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, devId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/device
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device/{dev-id})
	GetEnterprisesEnterpriseSiteDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, devId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/device
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/device/{dev-id})
	PostEnterprisesEnterpriseSiteDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, devId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/imsi-definition
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/imsi-definition)
	DeleteEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/imsi-definition
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/imsi-definition)
	GetEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/imsi-definition
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/imsi-definition)
	PostEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/ip-domain
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/ip-domain/{ip-id})
	DeleteEnterprisesEnterpriseSiteIpDomain(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ipId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/ip-domain
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/ip-domain/{ip-id})
	GetEnterprisesEnterpriseSiteIpDomain(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ipId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/ip-domain
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/ip-domain/{ip-id})
	PostEnterprisesEnterpriseSiteIpDomain(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ipId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/monitoring
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/monitoring)
	DeleteEnterprisesEnterpriseSiteMonitoring(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/monitoring
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/monitoring)
	GetEnterprisesEnterpriseSiteMonitoring(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/monitoring
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/monitoring)
	PostEnterprisesEnterpriseSiteMonitoring(ctx echo.Context, target externalRef0.Target, entId string, siteId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/monitoring/edge-device
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, edgeDeviceId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/monitoring/edge-device
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, edgeDeviceId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/monitoring/edge-device
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, edgeDeviceId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id})
	DeleteEnterprisesEnterpriseSitePriorityTrafficRule(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id})
	GetEnterprisesEnterpriseSitePriorityTrafficRule(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id})
	PostEnterprisesEnterpriseSitePriorityTrafficRule(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/gbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/gbr)
	DeleteEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/gbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/gbr)
	GetEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/gbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/gbr)
	PostEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/mbr)
	DeleteEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/mbr)
	GetEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/priority-traffic-rule/{ptr-id}/mbr)
	PostEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, ptrId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/sim-card
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/sim-card/{sim-id})
	DeleteEnterprisesEnterpriseSiteSimCard(ctx echo.Context, target externalRef0.Target, entId string, siteId string, simId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/sim-card
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/sim-card/{sim-id})
	GetEnterprisesEnterpriseSiteSimCard(ctx echo.Context, target externalRef0.Target, entId string, siteId string, simId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/sim-card
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/sim-card/{sim-id})
	PostEnterprisesEnterpriseSiteSimCard(ctx echo.Context, target externalRef0.Target, entId string, siteId string, simId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/small-cell
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/small-cell/{small-cell-id})
	DeleteEnterprisesEnterpriseSiteSmallCell(ctx echo.Context, target externalRef0.Target, entId string, siteId string, smallCellId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/small-cell
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/small-cell/{small-cell-id})
	GetEnterprisesEnterpriseSiteSmallCell(ctx echo.Context, target externalRef0.Target, entId string, siteId string, smallCellId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/small-cell
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/small-cell/{small-cell-id})
	PostEnterprisesEnterpriseSiteSmallCell(ctx echo.Context, target externalRef0.Target, entId string, siteId string, smallCellId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/upf
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/upf/{upf-id})
	DeleteEnterprisesEnterpriseSiteUpf(ctx echo.Context, target externalRef0.Target, entId string, siteId string, upfId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/upf
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/upf/{upf-id})
	GetEnterprisesEnterpriseSiteUpf(ctx echo.Context, target externalRef0.Target, entId string, siteId string, upfId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/upf
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/upf/{upf-id})
	PostEnterprisesEnterpriseSiteUpf(ctx echo.Context, target externalRef0.Target, entId string, siteId string, upfId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/vcs
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id})
	DeleteEnterprisesEnterpriseSiteVcs(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/vcs
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id})
	GetEnterprisesEnterpriseSiteVcs(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/vcs
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id})
	PostEnterprisesEnterpriseSiteVcs(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/device-group
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/device-group/{device-group})
	DeleteEnterprisesEnterpriseSiteVcsDeviceGroup(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string, deviceGroup string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/device-group
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/device-group/{device-group})
	GetEnterprisesEnterpriseSiteVcsDeviceGroup(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string, deviceGroup string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/device-group
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/device-group/{device-group})
	PostEnterprisesEnterpriseSiteVcsDeviceGroup(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string, deviceGroup string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/filter
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/filter/{application})
	DeleteEnterprisesEnterpriseSiteVcsFilter(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string, application string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/filter
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/filter/{application})
	GetEnterprisesEnterpriseSiteVcsFilter(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string, application string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/filter
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/filter/{application})
	PostEnterprisesEnterpriseSiteVcsFilter(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string, application string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice)
	DeleteEnterprisesEnterpriseSiteVcsSlice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice)
	GetEnterprisesEnterpriseSiteVcsSlice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice)
	PostEnterprisesEnterpriseSiteVcsSlice(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// DELETE /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice/mbr)
	DeleteEnterprisesEnterpriseSiteVcsSliceMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// GET /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice/mbr)
	GetEnterprisesEnterpriseSiteVcsSliceMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// POST /enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/site/{site-id}/vcs/{vcs-id}/slice/mbr)
	PostEnterprisesEnterpriseSiteVcsSliceMbr(ctx echo.Context, target externalRef0.Target, entId string, siteId string, vcsId string) error
	// DELETE /enterprises/enterprise/{ent-id}/template
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id})
	DeleteEnterprisesEnterpriseTemplate(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// GET /enterprises/enterprise/{ent-id}/template
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id})
	GetEnterprisesEnterpriseTemplate(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// POST /enterprises/enterprise/{ent-id}/template
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id})
	PostEnterprisesEnterpriseTemplate(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// DELETE /enterprises/enterprise/{ent-id}/template/{tp-id}/slice
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id}/slice)
	DeleteEnterprisesEnterpriseTemplateSlice(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// GET /enterprises/enterprise/{ent-id}/template/{tp-id}/slice
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id}/slice)
	GetEnterprisesEnterpriseTemplateSlice(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// POST /enterprises/enterprise/{ent-id}/template/{tp-id}/slice
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id}/slice)
	PostEnterprisesEnterpriseTemplateSlice(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// DELETE /enterprises/enterprise/{ent-id}/template/{tp-id}/slice/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id}/slice/mbr)
	DeleteEnterprisesEnterpriseTemplateSliceMbr(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// GET /enterprises/enterprise/{ent-id}/template/{tp-id}/slice/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id}/slice/mbr)
	GetEnterprisesEnterpriseTemplateSliceMbr(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// POST /enterprises/enterprise/{ent-id}/template/{tp-id}/slice/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/template/{tp-id}/slice/mbr)
	PostEnterprisesEnterpriseTemplateSliceMbr(ctx echo.Context, target externalRef0.Target, entId string, tpId string) error
	// DELETE /enterprises/enterprise/{ent-id}/traffic-class
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/traffic-class/{tc-id})
	DeleteEnterprisesEnterpriseTrafficClass(ctx echo.Context, target externalRef0.Target, entId string, tcId string) error
	// GET /enterprises/enterprise/{ent-id}/traffic-class
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/traffic-class/{tc-id})
	GetEnterprisesEnterpriseTrafficClass(ctx echo.Context, target externalRef0.Target, entId string, tcId string) error
	// POST /enterprises/enterprise/{ent-id}/traffic-class
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{ent-id}/traffic-class/{tc-id})
	PostEnterprisesEnterpriseTrafficClass(ctx echo.Context, target externalRef0.Target, entId string, tcId string) error
}

// serverInterfaceWrapper converts echo contexts to parameters.
type serverInterfaceWrapper struct {
	handler ServerInterface
}

// DeleteConnectivityServices converts echo context to params.
func (w *serverInterfaceWrapper) DeleteConnectivityServices(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteConnectivityServices(ctx, target)
}

// GetConnectivityServices converts echo context to params.
func (w *serverInterfaceWrapper) GetConnectivityServices(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetConnectivityServices(ctx, target)
}

// PostConnectivityServices converts echo context to params.
func (w *serverInterfaceWrapper) PostConnectivityServices(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostConnectivityServices(ctx, target)
}

// DeleteConnectivityServicesConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteConnectivityServicesConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteConnectivityServicesConnectivityService(ctx, target, id)
}

// GetConnectivityServicesConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetConnectivityServicesConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetConnectivityServicesConnectivityService(ctx, target, id)
}

// PostConnectivityServicesConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostConnectivityServicesConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostConnectivityServicesConnectivityService(ctx, target, id)
}

// DeleteEnterprises converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprises(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprises(ctx, target)
}

// GetEnterprises converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprises(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprises(ctx, target)
}

// PostEnterprises converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprises(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprises(ctx, target)
}

// DeleteEnterprisesEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterprise(ctx, target, entId)
}

// GetEnterprisesEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterprise(ctx, target, entId)
}

// PostEnterprisesEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterprise(ctx, target, entId)
}

// DeleteEnterprisesEnterpriseApplication converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseApplication(ctx, target, entId, appId)
}

// GetEnterprisesEnterpriseApplication converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseApplication(ctx, target, entId, appId)
}

// PostEnterprisesEnterpriseApplication converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseApplication(ctx, target, entId, appId)
}

// DeleteEnterprisesEnterpriseApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseApplicationEndpoint(ctx, target, entId, appId, endpointId)
}

// GetEnterprisesEnterpriseApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseApplicationEndpoint(ctx, target, entId, appId, endpointId)
}

// PostEnterprisesEnterpriseApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseApplicationEndpoint(ctx, target, entId, appId, endpointId)
}

// DeleteEnterprisesEnterpriseApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseApplicationEndpointMbr(ctx, target, entId, appId, endpointId)
}

// GetEnterprisesEnterpriseApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseApplicationEndpointMbr(ctx, target, entId, appId, endpointId)
}

// PostEnterprisesEnterpriseApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "app-id" -------------

	var appId string
	appId = ctx.Param("app-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseApplicationEndpointMbr(ctx, target, entId, appId, endpointId)
}

// DeleteEnterprisesEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseConnectivityService(ctx, target, entId, connectivityService)
}

// GetEnterprisesEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseConnectivityService(ctx, target, entId, connectivityService)
}

// PostEnterprisesEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseConnectivityService(ctx, target, entId, connectivityService)
}

// DeleteEnterprisesEnterpriseSite converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSite(ctx, target, entId, siteId)
}

// GetEnterprisesEnterpriseSite converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSite(ctx, target, entId, siteId)
}

// PostEnterprisesEnterpriseSite converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSite(ctx, target, entId, siteId)
}

// DeleteEnterprisesEnterpriseSiteDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteDeviceGroup(ctx, target, entId, siteId, dgId)
}

// GetEnterprisesEnterpriseSiteDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteDeviceGroup(ctx, target, entId, siteId, dgId)
}

// PostEnterprisesEnterpriseSiteDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteDeviceGroup(ctx, target, entId, siteId, dgId)
}

// DeleteEnterprisesEnterpriseSiteDeviceGroupDevice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(ctx, target, entId, siteId, dgId, deviceId)
}

// GetEnterprisesEnterpriseSiteDeviceGroupDevice converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteDeviceGroupDevice(ctx, target, entId, siteId, dgId, deviceId)
}

// PostEnterprisesEnterpriseSiteDeviceGroupDevice converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteDeviceGroupDevice(ctx, target, entId, siteId, dgId, deviceId)
}

// DeleteEnterprisesEnterpriseSiteDeviceGroupMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(ctx, target, entId, siteId, dgId)
}

// GetEnterprisesEnterpriseSiteDeviceGroupMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteDeviceGroupMbr(ctx, target, entId, siteId, dgId)
}

// PostEnterprisesEnterpriseSiteDeviceGroupMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dg-id" -------------

	var dgId string
	dgId = ctx.Param("dg-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteDeviceGroupMbr(ctx, target, entId, siteId, dgId)
}

// DeleteEnterprisesEnterpriseSiteDevice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dev-id" -------------

	var devId string
	devId = ctx.Param("dev-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteDevice(ctx, target, entId, siteId, devId)
}

// GetEnterprisesEnterpriseSiteDevice converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dev-id" -------------

	var devId string
	devId = ctx.Param("dev-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteDevice(ctx, target, entId, siteId, devId)
}

// PostEnterprisesEnterpriseSiteDevice converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "dev-id" -------------

	var devId string
	devId = ctx.Param("dev-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteDevice(ctx, target, entId, siteId, devId)
}

// DeleteEnterprisesEnterpriseSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteImsiDefinition(ctx, target, entId, siteId)
}

// GetEnterprisesEnterpriseSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteImsiDefinition(ctx, target, entId, siteId)
}

// PostEnterprisesEnterpriseSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteImsiDefinition(ctx, target, entId, siteId)
}

// DeleteEnterprisesEnterpriseSiteIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-id" -------------

	var ipId string
	ipId = ctx.Param("ip-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteIpDomain(ctx, target, entId, siteId, ipId)
}

// GetEnterprisesEnterpriseSiteIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-id" -------------

	var ipId string
	ipId = ctx.Param("ip-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteIpDomain(ctx, target, entId, siteId, ipId)
}

// PostEnterprisesEnterpriseSiteIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-id" -------------

	var ipId string
	ipId = ctx.Param("ip-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteIpDomain(ctx, target, entId, siteId, ipId)
}

// DeleteEnterprisesEnterpriseSiteMonitoring converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteMonitoring(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteMonitoring(ctx, target, entId, siteId)
}

// GetEnterprisesEnterpriseSiteMonitoring converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteMonitoring(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteMonitoring(ctx, target, entId, siteId)
}

// PostEnterprisesEnterpriseSiteMonitoring converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteMonitoring(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteMonitoring(ctx, target, entId, siteId)
}

// DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------

	var edgeDeviceId string
	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx, target, entId, siteId, edgeDeviceId)
}

// GetEnterprisesEnterpriseSiteMonitoringEdgeDevice converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------

	var edgeDeviceId string
	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx, target, entId, siteId, edgeDeviceId)
}

// PostEnterprisesEnterpriseSiteMonitoringEdgeDevice converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------

	var edgeDeviceId string
	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx, target, entId, siteId, edgeDeviceId)
}

// DeleteEnterprisesEnterpriseSitePriorityTrafficRule converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSitePriorityTrafficRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSitePriorityTrafficRule(ctx, target, entId, siteId, ptrId)
}

// GetEnterprisesEnterpriseSitePriorityTrafficRule converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSitePriorityTrafficRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSitePriorityTrafficRule(ctx, target, entId, siteId, ptrId)
}

// PostEnterprisesEnterpriseSitePriorityTrafficRule converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSitePriorityTrafficRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSitePriorityTrafficRule(ctx, target, entId, siteId, ptrId)
}

// DeleteEnterprisesEnterpriseSitePriorityTrafficRuleGbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx, target, entId, siteId, ptrId)
}

// GetEnterprisesEnterpriseSitePriorityTrafficRuleGbr converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx, target, entId, siteId, ptrId)
}

// PostEnterprisesEnterpriseSitePriorityTrafficRuleGbr converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSitePriorityTrafficRuleGbr(ctx, target, entId, siteId, ptrId)
}

// DeleteEnterprisesEnterpriseSitePriorityTrafficRuleMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx, target, entId, siteId, ptrId)
}

// GetEnterprisesEnterpriseSitePriorityTrafficRuleMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx, target, entId, siteId, ptrId)
}

// PostEnterprisesEnterpriseSitePriorityTrafficRuleMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ptr-id" -------------

	var ptrId string
	ptrId = ctx.Param("ptr-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSitePriorityTrafficRuleMbr(ctx, target, entId, siteId, ptrId)
}

// DeleteEnterprisesEnterpriseSiteSimCard converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSimCard(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------

	var simId string
	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteSimCard(ctx, target, entId, siteId, simId)
}

// GetEnterprisesEnterpriseSiteSimCard converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteSimCard(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------

	var simId string
	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteSimCard(ctx, target, entId, siteId, simId)
}

// PostEnterprisesEnterpriseSiteSimCard converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteSimCard(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------

	var simId string
	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteSimCard(ctx, target, entId, siteId, simId)
}

// DeleteEnterprisesEnterpriseSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------

	var smallCellId string
	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteSmallCell(ctx, target, entId, siteId, smallCellId)
}

// GetEnterprisesEnterpriseSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------

	var smallCellId string
	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteSmallCell(ctx, target, entId, siteId, smallCellId)
}

// PostEnterprisesEnterpriseSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------

	var smallCellId string
	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteSmallCell(ctx, target, entId, siteId, smallCellId)
}

// DeleteEnterprisesEnterpriseSiteUpf converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------

	var upfId string
	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteUpf(ctx, target, entId, siteId, upfId)
}

// GetEnterprisesEnterpriseSiteUpf converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------

	var upfId string
	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteUpf(ctx, target, entId, siteId, upfId)
}

// PostEnterprisesEnterpriseSiteUpf converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------

	var upfId string
	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteUpf(ctx, target, entId, siteId, upfId)
}

// DeleteEnterprisesEnterpriseSiteVcs converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteVcs(ctx, target, entId, siteId, vcsId)
}

// GetEnterprisesEnterpriseSiteVcs converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteVcs(ctx, target, entId, siteId, vcsId)
}

// PostEnterprisesEnterpriseSiteVcs converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteVcs(ctx, target, entId, siteId, vcsId)
}

// DeleteEnterprisesEnterpriseSiteVcsDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteVcsDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteVcsDeviceGroup(ctx, target, entId, siteId, vcsId, deviceGroup)
}

// GetEnterprisesEnterpriseSiteVcsDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteVcsDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteVcsDeviceGroup(ctx, target, entId, siteId, vcsId, deviceGroup)
}

// PostEnterprisesEnterpriseSiteVcsDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteVcsDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteVcsDeviceGroup(ctx, target, entId, siteId, vcsId, deviceGroup)
}

// DeleteEnterprisesEnterpriseSiteVcsFilter converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteVcsFilter(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteVcsFilter(ctx, target, entId, siteId, vcsId, application)
}

// GetEnterprisesEnterpriseSiteVcsFilter converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteVcsFilter(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteVcsFilter(ctx, target, entId, siteId, vcsId, application)
}

// PostEnterprisesEnterpriseSiteVcsFilter converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteVcsFilter(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteVcsFilter(ctx, target, entId, siteId, vcsId, application)
}

// DeleteEnterprisesEnterpriseSiteVcsSlice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteVcsSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteVcsSlice(ctx, target, entId, siteId, vcsId)
}

// GetEnterprisesEnterpriseSiteVcsSlice converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteVcsSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteVcsSlice(ctx, target, entId, siteId, vcsId)
}

// PostEnterprisesEnterpriseSiteVcsSlice converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteVcsSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteVcsSlice(ctx, target, entId, siteId, vcsId)
}

// DeleteEnterprisesEnterpriseSiteVcsSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseSiteVcsSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseSiteVcsSliceMbr(ctx, target, entId, siteId, vcsId)
}

// GetEnterprisesEnterpriseSiteVcsSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseSiteVcsSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseSiteVcsSliceMbr(ctx, target, entId, siteId, vcsId)
}

// PostEnterprisesEnterpriseSiteVcsSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseSiteVcsSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "vcs-id" -------------

	var vcsId string
	vcsId = ctx.Param("vcs-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseSiteVcsSliceMbr(ctx, target, entId, siteId, vcsId)
}

// DeleteEnterprisesEnterpriseTemplate converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseTemplate(ctx, target, entId, tpId)
}

// GetEnterprisesEnterpriseTemplate converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseTemplate(ctx, target, entId, tpId)
}

// PostEnterprisesEnterpriseTemplate converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseTemplate(ctx, target, entId, tpId)
}

// DeleteEnterprisesEnterpriseTemplateSlice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseTemplateSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseTemplateSlice(ctx, target, entId, tpId)
}

// GetEnterprisesEnterpriseTemplateSlice converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseTemplateSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseTemplateSlice(ctx, target, entId, tpId)
}

// PostEnterprisesEnterpriseTemplateSlice converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseTemplateSlice(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseTemplateSlice(ctx, target, entId, tpId)
}

// DeleteEnterprisesEnterpriseTemplateSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseTemplateSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseTemplateSliceMbr(ctx, target, entId, tpId)
}

// GetEnterprisesEnterpriseTemplateSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseTemplateSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseTemplateSliceMbr(ctx, target, entId, tpId)
}

// PostEnterprisesEnterpriseTemplateSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseTemplateSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tp-id" -------------

	var tpId string
	tpId = ctx.Param("tp-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseTemplateSliceMbr(ctx, target, entId, tpId)
}

// DeleteEnterprisesEnterpriseTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprisesEnterpriseTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tc-id" -------------

	var tcId string
	tcId = ctx.Param("tc-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprisesEnterpriseTrafficClass(ctx, target, entId, tcId)
}

// GetEnterprisesEnterpriseTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprisesEnterpriseTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tc-id" -------------

	var tcId string
	tcId = ctx.Param("tc-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprisesEnterpriseTrafficClass(ctx, target, entId, tcId)
}

// PostEnterprisesEnterpriseTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprisesEnterpriseTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "ent-id" -------------

	var entId string
	entId = ctx.Param("ent-id")

	// ------------- Path parameter "tc-id" -------------

	var tcId string
	tcId = ctx.Param("tc-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprisesEnterpriseTrafficClass(ctx, target, entId, tcId)
}

// This is a simple interface which specifies echo.Route addition functions which
// are present on both echo.Echo and echo.Group, since we want to allow using
// either of them for path registration
type EchoRouter interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router EchoRouter, si ServerInterface, validateResponse bool) error {

	openApiDefinition, err := GetSwagger()
	if err != nil {
		return err
	}
	wrapper := serverInterfaceWrapper{
		handler: si,
	}

	router.DELETE("/aether/v2.0.0/:target/connectivity-services", wrapper.DeleteConnectivityServices, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/connectivity-services", wrapper.GetConnectivityServices, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/connectivity-services", wrapper.PostConnectivityServices, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/connectivity-services/connectivity-service/:id", wrapper.DeleteConnectivityServicesConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/connectivity-services/connectivity-service/:id", wrapper.GetConnectivityServicesConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/connectivity-services/connectivity-service/:id", wrapper.PostConnectivityServicesConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises", wrapper.DeleteEnterprises, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises", wrapper.GetEnterprises, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises", wrapper.PostEnterprises, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id", wrapper.DeleteEnterprisesEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id", wrapper.GetEnterprisesEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id", wrapper.PostEnterprisesEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id", wrapper.DeleteEnterprisesEnterpriseApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id", wrapper.GetEnterprisesEnterpriseApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id", wrapper.PostEnterprisesEnterpriseApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id/endpoint/:endpoint-id", wrapper.DeleteEnterprisesEnterpriseApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id/endpoint/:endpoint-id", wrapper.GetEnterprisesEnterpriseApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id/endpoint/:endpoint-id", wrapper.PostEnterprisesEnterpriseApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id/endpoint/:endpoint-id/mbr", wrapper.DeleteEnterprisesEnterpriseApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id/endpoint/:endpoint-id/mbr", wrapper.GetEnterprisesEnterpriseApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/application/:app-id/endpoint/:endpoint-id/mbr", wrapper.PostEnterprisesEnterpriseApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/connectivity-service/:connectivity-service", wrapper.DeleteEnterprisesEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/connectivity-service/:connectivity-service", wrapper.GetEnterprisesEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/connectivity-service/:connectivity-service", wrapper.PostEnterprisesEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id", wrapper.DeleteEnterprisesEnterpriseSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id", wrapper.GetEnterprisesEnterpriseSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id", wrapper.PostEnterprisesEnterpriseSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id", wrapper.GetEnterprisesEnterpriseSiteDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id", wrapper.PostEnterprisesEnterpriseSiteDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id/device/:device-id", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroupDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id/device/:device-id", wrapper.GetEnterprisesEnterpriseSiteDeviceGroupDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id/device/:device-id", wrapper.PostEnterprisesEnterpriseSiteDeviceGroupDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id/mbr", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroupMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id/mbr", wrapper.GetEnterprisesEnterpriseSiteDeviceGroupMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device-group/:dg-id/mbr", wrapper.PostEnterprisesEnterpriseSiteDeviceGroupMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device/:dev-id", wrapper.DeleteEnterprisesEnterpriseSiteDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device/:dev-id", wrapper.GetEnterprisesEnterpriseSiteDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/device/:dev-id", wrapper.PostEnterprisesEnterpriseSiteDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/imsi-definition", wrapper.DeleteEnterprisesEnterpriseSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/imsi-definition", wrapper.GetEnterprisesEnterpriseSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/imsi-definition", wrapper.PostEnterprisesEnterpriseSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/ip-domain/:ip-id", wrapper.DeleteEnterprisesEnterpriseSiteIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/ip-domain/:ip-id", wrapper.GetEnterprisesEnterpriseSiteIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/ip-domain/:ip-id", wrapper.PostEnterprisesEnterpriseSiteIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/monitoring", wrapper.DeleteEnterprisesEnterpriseSiteMonitoring, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/monitoring", wrapper.GetEnterprisesEnterpriseSiteMonitoring, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/monitoring", wrapper.PostEnterprisesEnterpriseSiteMonitoring, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.GetEnterprisesEnterpriseSiteMonitoringEdgeDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.PostEnterprisesEnterpriseSiteMonitoringEdgeDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id", wrapper.DeleteEnterprisesEnterpriseSitePriorityTrafficRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id", wrapper.GetEnterprisesEnterpriseSitePriorityTrafficRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id", wrapper.PostEnterprisesEnterpriseSitePriorityTrafficRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id/gbr", wrapper.DeleteEnterprisesEnterpriseSitePriorityTrafficRuleGbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id/gbr", wrapper.GetEnterprisesEnterpriseSitePriorityTrafficRuleGbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id/gbr", wrapper.PostEnterprisesEnterpriseSitePriorityTrafficRuleGbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id/mbr", wrapper.DeleteEnterprisesEnterpriseSitePriorityTrafficRuleMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id/mbr", wrapper.GetEnterprisesEnterpriseSitePriorityTrafficRuleMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/priority-traffic-rule/:ptr-id/mbr", wrapper.PostEnterprisesEnterpriseSitePriorityTrafficRuleMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/sim-card/:sim-id", wrapper.DeleteEnterprisesEnterpriseSiteSimCard, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/sim-card/:sim-id", wrapper.GetEnterprisesEnterpriseSiteSimCard, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/sim-card/:sim-id", wrapper.PostEnterprisesEnterpriseSiteSimCard, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/small-cell/:small-cell-id", wrapper.DeleteEnterprisesEnterpriseSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/small-cell/:small-cell-id", wrapper.GetEnterprisesEnterpriseSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/small-cell/:small-cell-id", wrapper.PostEnterprisesEnterpriseSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/upf/:upf-id", wrapper.DeleteEnterprisesEnterpriseSiteUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/upf/:upf-id", wrapper.GetEnterprisesEnterpriseSiteUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/upf/:upf-id", wrapper.PostEnterprisesEnterpriseSiteUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id", wrapper.DeleteEnterprisesEnterpriseSiteVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id", wrapper.GetEnterprisesEnterpriseSiteVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id", wrapper.PostEnterprisesEnterpriseSiteVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/device-group/:device-group", wrapper.DeleteEnterprisesEnterpriseSiteVcsDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/device-group/:device-group", wrapper.GetEnterprisesEnterpriseSiteVcsDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/device-group/:device-group", wrapper.PostEnterprisesEnterpriseSiteVcsDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/filter/:application", wrapper.DeleteEnterprisesEnterpriseSiteVcsFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/filter/:application", wrapper.GetEnterprisesEnterpriseSiteVcsFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/filter/:application", wrapper.PostEnterprisesEnterpriseSiteVcsFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/slice", wrapper.DeleteEnterprisesEnterpriseSiteVcsSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/slice", wrapper.GetEnterprisesEnterpriseSiteVcsSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/slice", wrapper.PostEnterprisesEnterpriseSiteVcsSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/slice/mbr", wrapper.DeleteEnterprisesEnterpriseSiteVcsSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/slice/mbr", wrapper.GetEnterprisesEnterpriseSiteVcsSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/site/:site-id/vcs/:vcs-id/slice/mbr", wrapper.PostEnterprisesEnterpriseSiteVcsSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id", wrapper.DeleteEnterprisesEnterpriseTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id", wrapper.GetEnterprisesEnterpriseTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id", wrapper.PostEnterprisesEnterpriseTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id/slice", wrapper.DeleteEnterprisesEnterpriseTemplateSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id/slice", wrapper.GetEnterprisesEnterpriseTemplateSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id/slice", wrapper.PostEnterprisesEnterpriseTemplateSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id/slice/mbr", wrapper.DeleteEnterprisesEnterpriseTemplateSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id/slice/mbr", wrapper.GetEnterprisesEnterpriseTemplateSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/template/:tp-id/slice/mbr", wrapper.PostEnterprisesEnterpriseTemplateSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/traffic-class/:tc-id", wrapper.DeleteEnterprisesEnterpriseTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/traffic-class/:tc-id", wrapper.GetEnterprisesEnterpriseTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.0.0/:target/enterprises/enterprise/:ent-id/traffic-class/:tc-id", wrapper.PostEnterprisesEnterpriseTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))

	return nil
}
