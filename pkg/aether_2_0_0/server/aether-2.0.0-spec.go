// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"H2D5Zfn/AAAA///LPYQR+oEAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
