// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xdW2/bOhL+KwZ3H3YBq3KcSxMvFtjsnrYottukTfOwKAqBkWiHpxLJUnTSIPB/P9Al",
	"liiRNGVLlpqTPNkyOTOamW9meM0j8GnEKEFExGD2CBjkMEIC8fSbgHyBRPLJp0Qgkn4U6KdwWQgx+cfI",
	"v4U8RuKfSzF3TpMfY/8WRTBt9sAQmIFYcEwWYLVajUGAYp9jJjAlYJYTH/0tQHfYRyNMRpTQ2PEpmePF",
	"38EY4KQVg+IWjAGBEVr3AWPA0Y8l5igAM8GXKCGePEGx+DcNMEqF/7x+8OCd+z6KY4dxOschqrwQZCzE",
	"PkzEcn+PE9nK7/FXjuZgBv7iFopys19jt0J2lb6lnu9+xPA2S8VI+zKUaBo5ds3dM0vyH0oI8gW+w+LB",
	"iRFPfK81MZTE7WTYv2CepbRviECccRy3J06JpIlft6y95lJ0a6QGLOvyfqLtx5UyTSPHrrl7W0mSRgIY",
	"3fCuRSoYNZCNs+7F4kwh0RXylzxxprYNViO8mff+hPFspFveJAXKDWrPY0okTfy8a9QBy4TqBq7eZaaN",
	"uBv2BXlbObqqkey4bZLyKom/ZOGwMCIdiSaxqMtzzVpXTYmkiV+3rL2KFKtxTiL1zLpTwCDACUMYXnLK",
	"EBd51W+sEqt9Hr5k44nVGDCJSp0fFiiKdyzEx0BgkZAD7wWKzI3HTwMoyDl8AKtSZ11LevM78tOX2Tjs",
	"6FZ70jjvEUTw5wdEFuIWzA4mkzGIMFl/L96q3GlcHT2OQYBjFsIHJxsISkRP9TTLnRRE5zgUWbAvkTuc",
	"FgTyBoquOFB0U0uBAxWB7IElibRxjchKZXqdlap2AdcxCkZzykdLFkCBYlA1YzH6t+Erj+o6hqfMzA6b",
	"uiFiBZWaZiY8qpopNePtVUuQERVc9F627qDC36+C6YAkkQ5HkD+krvvUrfRY0ytGPiWBol/xg6Ln4qeD",
	"CLwJUVDuVnq67nNDaYggaSV6RGKZUJhTHkGRtCLicArGCUkcLSMwOzk+PjxOaebfTwuSSec1TUwEWqTl",
	"qcJ3dePdbh1Xx9UK5w2mOmTk23c0xAJze7NivX60/csg+zaOHUQCRnE+EZ33k553kapjtrj3lawrv1hl",
	"aHlSq1vbyrys8KOZIJOxom5kwIWqlUol3j61s1OcaTJbZxsfcr39Qtl2R2ytbJ2hp9joa7g+vZNvNGeh",
	"JkWFoC8PVEqpTLB2+9YVZlZw0M7WyoFD18wQOpTNlJrx9qql8uzybpPGY5DPBm89yfvniRhj8MPH5tL3",
	"tFz3TgpySUe7stdmQaHjoozekxCT7+Y3PZqeHZ2dvJ6ead54TaX+2mOwZLszyGmotVrHr1qZTQyQ4aRb",
	"3TOOUJSCwvEhgzc4xEIaE6obqMZ5pZZ3y5AgbqYmt1ETxJTnBPRmO9CYa917O4NxprKVagmnWwOpOFol",
	"KYtFITldbe5gSFz6tnrlefvX5p8nc3xHD9YUkrYKEpT51iSStqrR5A+yW9BNCNjlMXlBs1s3um4AQ3mF",
	"sgI56UcTvIqXM756vrba7duXl1G3WR1NIoG8tLjtimFH4Gs0gkmal4fxRY/6LEAV3wwKgTgBM/B14pxB",
	"Z37uvP32eLpyyl+Pmnw9mK7AptCAoxg7HJIFcuacRvXVkreUj/xbmu5UjGI8S9uCsQTjkyMpCZ8eHZ28",
	"PjqavD58PTk7Pp5O8nBaA3SVuapaK7URtDfxBNULd4/DwIc82CzcuuVYyjbH2mgukVdYz7Iq0r6hoS5a",
	"byxFgQNZNUMelqSU21lNdei3YgxyedtyD4Uhnms71afAoLxUVl6jqnUqDQ7lGYD10E81h1BKyYqia51t",
	"tVVc0X/JVD1LT5XeUMtjkhNYu8vel/dhjd/aOBqjFpqCYUjv5TTy9MhuIsy8H6fbF4983xxhzs7O1AEm",
	"6amKLRHZmiJRUxRwM8X0T0026W4cHBr0r7CWvGWo4wKUNQ5omu1HcgBTNzIUpqpWKpV4+9RODk2fEsFp",
	"aL8lQO72K28M2Hn4uIwRd1gISVWm6bG2dCn1sagIkkeYzOnT/jrop6uNKII4TPE4p/+iDBGCxD3l3zFZ",
	"vKJ8URyPuWCIjD6ufxy9pUsSwFzLS57QuBWCxTPXVZBZjUGIfUSymj0n+SF78hnNnYuPb53/oegGcefg",
	"1cSConvPnHyboLtkIYVB7E4n04k7OXFLxC5I+OBc0bm4hxw5OUPn7uDV5BUL5ikcEY/ii/nV0wJMY54H",
	"Z+5kmvLMyCcxC5LAeX/52Xl7/slJpHImJym/0sYeJG4RH01fTdLXvUM8zgra7Ek6HYAIZBjMwGHeiEFx",
	"mwLOhWlv9y5t7D5mu6lWbj17BihEIv2UADY11/sAzMBv6fMsu1+uAwpHMaMkfpq7mcNlqNjclXpXvIyy",
	"bTDgtzcf3nx5M3qHSMIABaNknDH6//nHd6OIBihMN7Jke71kGd4hYRRgOpl0eJqqemTs3Zsvo4v/jhKm",
	"8vslP1Q0a3jZJEsuYjD7CsC3JFCWzrx9VYtYNHHzXXGrb2PAaKxQ2SWNFTpb76jVaUE6v+YaDq+taiY4",
	"qNvf5yh59YqaLi+uvpicYDW2dNvq10ccrBq68rD8uicn99r1+W0gYBZoe3yMOzk0+h09jFJnUx4PTfN2",
	"5WioPU47BO1AMCwPqTeAlZE+wanl3ioY5aOiDaFXdO4318iq2sVn5W3R/Xqo9Nkyv6w1MRTn3bsbe225",
	"dGP31gnx3DOIztbt4HAAmNTtgTNjsbxf72q9MW7vULQQo00k6g5rN4OhSuO9phidFnfwcd1G2YE4uPqh",
	"XRpSaGu4aBgAQLzuULM9lOwFfeYJroHPtBwOhhQj5P0MZvxLZx32jnE99zZxLN+d0gyohS57TWoVRe3g",
	"vPI5mV69s/zRLlsVwg/Fb/ftwV47ztzUr9UCPPNsorVyK/AbMhI1FaXq6ZaoHUiRuaVonWO7pTKzoYW3",
	"DwXPtdrsUA41mJSSaU7u7RrLOiiNmx007SHmVfbcmQPXJ9rnmp+ee5vhp3JbXbP4UtJmr+VxRVU7OHDl",
	"OGi/Hip9tquQC00MxXn37sZeWy7d2L11QjzzOllr63ZwOHBMpotPTwdtm4PznJHz7GDpIDCqEWcPUJUu",
	"Jm0Fs7J5XhDcDMFlT2gfyNKNAoNDdHZyewswp6eOhwHkuih7AXF2jW+b+OXsBboNoZvbvgvYZjd49IBY",
	"1bknM0Kfjqf3WAZvEKFNRKrujG4Gw6qGex3SqTS3gz+rLk8YgBPXH9gN8yraGZ6n9+j4XvtI2A4amwV7",
	"5rnJwidahPRgMC5dZLEBx+V7IfaPWS33VvEp/VuBhkBc9+03GcmK2sVpS8ro2TvdpXW2Wfe5Rv366TXa",
	"j6fm/41iW2d1l5YZQmL43LNB1YqtwCi/lWcQSHJZ6VYMe0iVrlHoFVo6OTqDmPQfV3bAmqz8F+SZkCcZ",
	"uS0ESpdDDQuKtdOf8vfVdlDt/UBoY6G6B/HO50Ptrdgc4lopX/aoGOSoYkUpU+0inV1DU6tnW63vgRpG",
	"2IorlwTZh6b8epvL7HabXgOSQZTuwlD1f5HtHHvKpnipKUzArdq7NbhWb4vsAaPydWlmOF6zHisCLfM2",
	"ISf/47tmECs02etcjqynHVxVvoWrV9csf7Sb0llrYRg+u2fn9drx46YurRbgmScKjY1bAd6+MJheu8nv",
	"nsxT3CU2c3NwOpz6DmQYVLX5gfowHGU18ij7z0urb6s/AgAA//9vgG5Uy4AAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
