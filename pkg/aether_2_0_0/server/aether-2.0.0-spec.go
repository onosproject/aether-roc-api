// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"vwAAAP//LqKRvGhzAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
