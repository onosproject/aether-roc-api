// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"qA/DURYjj7L/PLL6tvojAAD//+3AKY8yegAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
