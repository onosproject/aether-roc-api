// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"github.com/labstack/echo/v4"
	externalRef0 "github.com/onosproject/aether-roc-api/pkg/aether_2_1_0/types"
	"github.com/onosproject/aether-roc-api/pkg/middleware/openapi3mw"
)

// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// GET /application List
	// (GET /aether/v2.1.x/{enterprise-id}/application)
	GetApplicationList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId) error
	// DELETE /application
	// (DELETE /aether/v2.1.x/{enterprise-id}/application/{application-id})
	DeleteApplication(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string) error
	// GET /application Container
	// (GET /aether/v2.1.x/{enterprise-id}/application/{application-id})
	GetApplication(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string) error
	// POST /application
	// (POST /aether/v2.1.x/{enterprise-id}/application/{application-id})
	PostApplication(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string) error
	// GET /application/{application-id}/endpoint List
	// (GET /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint)
	GetApplicationEndpointList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string) error
	// DELETE /application/{application-id}/endpoint
	// (DELETE /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	DeleteApplicationEndpoint(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string, endpointId string) error
	// GET /application/{application-id}/endpoint Container
	// (GET /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	GetApplicationEndpoint(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string, endpointId string) error
	// POST /application/{application-id}/endpoint
	// (POST /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	PostApplicationEndpoint(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string, endpointId string) error
	// DELETE /application/{application-id}/endpoint/{endpoint-id}/mbr
	// (DELETE /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	DeleteApplicationEndpointMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string, endpointId string) error
	// GET /application/{application-id}/endpoint/{endpoint-id}/mbr Container
	// (GET /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	GetApplicationEndpointMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string, endpointId string) error
	// POST /application/{application-id}/endpoint/{endpoint-id}/mbr
	// (POST /aether/v2.1.x/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	PostApplicationEndpointMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, applicationId string, endpointId string) error
	// GET /site List
	// (GET /aether/v2.1.x/{enterprise-id}/site)
	GetSiteList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId) error
	// DELETE /site
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id})
	DeleteSite(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id})
	GetSite(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// POST /site
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id})
	PostSite(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/connectivity-service
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service)
	DeleteSiteConnectivityService(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/connectivity-service Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service)
	GetSiteConnectivityService(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// POST /site/{site-id}/connectivity-service
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service)
	PostSiteConnectivityService(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/connectivity-service/core-4g
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service/core-4g)
	DeleteSiteConnectivityServiceCore4g(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/connectivity-service/core-4g Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service/core-4g)
	GetSiteConnectivityServiceCore4g(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// POST /site/{site-id}/connectivity-service/core-4g
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service/core-4g)
	PostSiteConnectivityServiceCore4g(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/connectivity-service/core-5g
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service/core-5g)
	DeleteSiteConnectivityServiceCore5g(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/connectivity-service/core-5g Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service/core-5g)
	GetSiteConnectivityServiceCore5g(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// POST /site/{site-id}/connectivity-service/core-5g
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/connectivity-service/core-5g)
	PostSiteConnectivityServiceCore5g(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/device List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/device)
	GetSiteDeviceList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/device-group List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group)
	GetSiteDeviceGroupList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/device-group
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	DeleteSiteDeviceGroup(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string) error
	// GET /site/{site-id}/device-group Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	GetSiteDeviceGroup(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string) error
	// POST /site/{site-id}/device-group
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	PostSiteDeviceGroup(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string) error
	// GET /site/{site-id}/device-group/{device-group-id}/device List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device)
	GetSiteDeviceGroupDeviceList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string) error
	// DELETE /site/{site-id}/device-group/{device-group-id}/device
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	DeleteSiteDeviceGroupDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string, deviceId string) error
	// GET /site/{site-id}/device-group/{device-group-id}/device Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	GetSiteDeviceGroupDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string, deviceId string) error
	// POST /site/{site-id}/device-group/{device-group-id}/device
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	PostSiteDeviceGroupDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string, deviceId string) error
	// DELETE /site/{site-id}/device-group/{device-group-id}/mbr
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	DeleteSiteDeviceGroupMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string) error
	// GET /site/{site-id}/device-group/{device-group-id}/mbr Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	GetSiteDeviceGroupMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string) error
	// POST /site/{site-id}/device-group/{device-group-id}/mbr
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	PostSiteDeviceGroupMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceGroupId string) error
	// DELETE /site/{site-id}/device
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/device/{device-id})
	DeleteSiteDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceId string) error
	// GET /site/{site-id}/device Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/device/{device-id})
	GetSiteDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceId string) error
	// POST /site/{site-id}/device
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/device/{device-id})
	PostSiteDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceId string) error
	// GET /site/{site-id}/device/{device-id}/state Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/device/{device-id}/state)
	GetSiteDeviceState(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, deviceId string) error
	// DELETE /site/{site-id}/imsi-definition
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/imsi-definition)
	DeleteSiteImsiDefinition(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/imsi-definition Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/imsi-definition)
	GetSiteImsiDefinition(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// POST /site/{site-id}/imsi-definition
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/imsi-definition)
	PostSiteImsiDefinition(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/ip-domain List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/ip-domain)
	GetSiteIpDomainList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/ip-domain
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	DeleteSiteIpDomain(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, ipDomainId string) error
	// GET /site/{site-id}/ip-domain Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	GetSiteIpDomain(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, ipDomainId string) error
	// POST /site/{site-id}/ip-domain
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	PostSiteIpDomain(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, ipDomainId string) error
	// DELETE /site/{site-id}/monitoring
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring)
	DeleteSiteMonitoring(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/monitoring Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring)
	GetSiteMonitoring(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// POST /site/{site-id}/monitoring
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring)
	PostSiteMonitoring(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// GET /site/{site-id}/monitoring/edge-device List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring/edge-device)
	GetSiteMonitoringEdgeDeviceList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/monitoring/edge-device
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	DeleteSiteMonitoringEdgeDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, edgeDeviceId string) error
	// GET /site/{site-id}/monitoring/edge-device Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	GetSiteMonitoringEdgeDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, edgeDeviceId string) error
	// POST /site/{site-id}/monitoring/edge-device
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	PostSiteMonitoringEdgeDevice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, edgeDeviceId string) error
	// GET /site/{site-id}/sim-card List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/sim-card)
	GetSiteSimCardList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/sim-card
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	DeleteSiteSimCard(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, simId string) error
	// GET /site/{site-id}/sim-card Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	GetSiteSimCard(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, simId string) error
	// POST /site/{site-id}/sim-card
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	PostSiteSimCard(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, simId string) error
	// GET /site/{site-id}/slice List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice)
	GetSiteSliceList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/slice
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id})
	DeleteSiteSlice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// GET /site/{site-id}/slice Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id})
	GetSiteSlice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// POST /site/{site-id}/slice
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id})
	PostSiteSlice(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// GET /site/{site-id}/slice/{slice-id}/device-group List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group)
	GetSiteSliceDeviceGroupList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// DELETE /site/{site-id}/slice/{slice-id}/device-group
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	DeleteSiteSliceDeviceGroup(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, deviceGroup string) error
	// GET /site/{site-id}/slice/{slice-id}/device-group Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	GetSiteSliceDeviceGroup(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, deviceGroup string) error
	// POST /site/{site-id}/slice/{slice-id}/device-group
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	PostSiteSliceDeviceGroup(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, deviceGroup string) error
	// GET /site/{site-id}/slice/{slice-id}/filter List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter)
	GetSiteSliceFilterList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// DELETE /site/{site-id}/slice/{slice-id}/filter
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	DeleteSiteSliceFilter(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, application string) error
	// GET /site/{site-id}/slice/{slice-id}/filter Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	GetSiteSliceFilter(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, application string) error
	// POST /site/{site-id}/slice/{slice-id}/filter
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	PostSiteSliceFilter(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, application string) error
	// DELETE /site/{site-id}/slice/{slice-id}/mbr
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	DeleteSiteSliceMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// GET /site/{site-id}/slice/{slice-id}/mbr Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	GetSiteSliceMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// POST /site/{site-id}/slice/{slice-id}/mbr
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	PostSiteSliceMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// GET /site/{site-id}/slice/{slice-id}/priority-traffic-rule List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule)
	GetSiteSlicePriorityTrafficRuleList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string) error
	// DELETE /site/{site-id}/slice/{slice-id}/priority-traffic-rule
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	DeleteSiteSlicePriorityTrafficRule(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, priorityTrafficRuleId string) error
	// GET /site/{site-id}/slice/{slice-id}/priority-traffic-rule Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	GetSiteSlicePriorityTrafficRule(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, priorityTrafficRuleId string) error
	// POST /site/{site-id}/slice/{slice-id}/priority-traffic-rule
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	PostSiteSlicePriorityTrafficRule(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, sliceId string, priorityTrafficRuleId string) error
	// GET /site/{site-id}/small-cell List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/small-cell)
	GetSiteSmallCellList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/small-cell
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	DeleteSiteSmallCell(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, smallCellId string) error
	// GET /site/{site-id}/small-cell Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	GetSiteSmallCell(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, smallCellId string) error
	// POST /site/{site-id}/small-cell
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	PostSiteSmallCell(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, smallCellId string) error
	// GET /site/{site-id}/upf List
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/upf)
	GetSiteUpfList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string) error
	// DELETE /site/{site-id}/upf
	// (DELETE /aether/v2.1.x/{enterprise-id}/site/{site-id}/upf/{upf-id})
	DeleteSiteUpf(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, upfId string) error
	// GET /site/{site-id}/upf Container
	// (GET /aether/v2.1.x/{enterprise-id}/site/{site-id}/upf/{upf-id})
	GetSiteUpf(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, upfId string) error
	// POST /site/{site-id}/upf
	// (POST /aether/v2.1.x/{enterprise-id}/site/{site-id}/upf/{upf-id})
	PostSiteUpf(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, siteId string, upfId string) error
	// GET /template List
	// (GET /aether/v2.1.x/{enterprise-id}/template)
	GetTemplateList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId) error
	// DELETE /template
	// (DELETE /aether/v2.1.x/{enterprise-id}/template/{template-id})
	DeleteTemplate(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, templateId string) error
	// GET /template Container
	// (GET /aether/v2.1.x/{enterprise-id}/template/{template-id})
	GetTemplate(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, templateId string) error
	// POST /template
	// (POST /aether/v2.1.x/{enterprise-id}/template/{template-id})
	PostTemplate(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, templateId string) error
	// DELETE /template/{template-id}/mbr
	// (DELETE /aether/v2.1.x/{enterprise-id}/template/{template-id}/mbr)
	DeleteTemplateMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, templateId string) error
	// GET /template/{template-id}/mbr Container
	// (GET /aether/v2.1.x/{enterprise-id}/template/{template-id}/mbr)
	GetTemplateMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, templateId string) error
	// POST /template/{template-id}/mbr
	// (POST /aether/v2.1.x/{enterprise-id}/template/{template-id}/mbr)
	PostTemplateMbr(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, templateId string) error
	// GET /traffic-class List
	// (GET /aether/v2.1.x/{enterprise-id}/traffic-class)
	GetTrafficClassList(ctx echo.Context, enterpriseId externalRef0.EnterpriseId) error
	// DELETE /traffic-class
	// (DELETE /aether/v2.1.x/{enterprise-id}/traffic-class/{traffic-class-id})
	DeleteTrafficClass(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, trafficClassId string) error
	// GET /traffic-class Container
	// (GET /aether/v2.1.x/{enterprise-id}/traffic-class/{traffic-class-id})
	GetTrafficClass(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, trafficClassId string) error
	// POST /traffic-class
	// (POST /aether/v2.1.x/{enterprise-id}/traffic-class/{traffic-class-id})
	PostTrafficClass(ctx echo.Context, enterpriseId externalRef0.EnterpriseId, trafficClassId string) error
}

// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

// serverInterfaceWrapper converts echo contexts to parameters.
type serverInterfaceWrapper struct {
	handler ServerInterface
}

// GetApplicationList converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationList(ctx, enterpriseId)
}

// DeleteApplication converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplication(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplication(ctx, enterpriseId, applicationId)
}

// GetApplication converts echo context to params.
func (w *serverInterfaceWrapper) GetApplication(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplication(ctx, enterpriseId, applicationId)
}

// PostApplication converts echo context to params.
func (w *serverInterfaceWrapper) PostApplication(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplication(ctx, enterpriseId, applicationId)
}

// GetApplicationEndpointList converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationEndpointList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationEndpointList(ctx, enterpriseId, applicationId)
}

// DeleteApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplicationEndpoint(ctx, enterpriseId, applicationId, endpointId)
}

// GetApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationEndpoint(ctx, enterpriseId, applicationId, endpointId)
}

// PostApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) PostApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplicationEndpoint(ctx, enterpriseId, applicationId, endpointId)
}

// DeleteApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplicationEndpointMbr(ctx, enterpriseId, applicationId, endpointId)
}

// GetApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationEndpointMbr(ctx, enterpriseId, applicationId, endpointId)
}

// PostApplicationEndpointMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostApplicationEndpointMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "application-id" -------------

	var applicationId string
	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------

	var endpointId string
	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplicationEndpointMbr(ctx, enterpriseId, applicationId, endpointId)
}

// GetSiteList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteList(ctx, enterpriseId)
}

// DeleteSite converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSite(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSite(ctx, enterpriseId, siteId)
}

// GetSite converts echo context to params.
func (w *serverInterfaceWrapper) GetSite(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSite(ctx, enterpriseId, siteId)
}

// PostSite converts echo context to params.
func (w *serverInterfaceWrapper) PostSite(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSite(ctx, enterpriseId, siteId)
}

// DeleteSiteConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteConnectivityService(ctx, enterpriseId, siteId)
}

// GetSiteConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteConnectivityService(ctx, enterpriseId, siteId)
}

// PostSiteConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteConnectivityService(ctx, enterpriseId, siteId)
}

// DeleteSiteConnectivityServiceCore4g converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteConnectivityServiceCore4g(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteConnectivityServiceCore4g(ctx, enterpriseId, siteId)
}

// GetSiteConnectivityServiceCore4g converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteConnectivityServiceCore4g(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteConnectivityServiceCore4g(ctx, enterpriseId, siteId)
}

// PostSiteConnectivityServiceCore4g converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteConnectivityServiceCore4g(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteConnectivityServiceCore4g(ctx, enterpriseId, siteId)
}

// DeleteSiteConnectivityServiceCore5g converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteConnectivityServiceCore5g(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteConnectivityServiceCore5g(ctx, enterpriseId, siteId)
}

// GetSiteConnectivityServiceCore5g converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteConnectivityServiceCore5g(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteConnectivityServiceCore5g(ctx, enterpriseId, siteId)
}

// PostSiteConnectivityServiceCore5g converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteConnectivityServiceCore5g(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteConnectivityServiceCore5g(ctx, enterpriseId, siteId)
}

// GetSiteDeviceList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteDeviceList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteDeviceList(ctx, enterpriseId, siteId)
}

// GetSiteDeviceGroupList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteDeviceGroupList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteDeviceGroupList(ctx, enterpriseId, siteId)
}

// DeleteSiteDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteDeviceGroup(ctx, enterpriseId, siteId, deviceGroupId)
}

// GetSiteDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteDeviceGroup(ctx, enterpriseId, siteId, deviceGroupId)
}

// PostSiteDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteDeviceGroup(ctx, enterpriseId, siteId, deviceGroupId)
}

// GetSiteDeviceGroupDeviceList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteDeviceGroupDeviceList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteDeviceGroupDeviceList(ctx, enterpriseId, siteId, deviceGroupId)
}

// DeleteSiteDeviceGroupDevice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteDeviceGroupDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteDeviceGroupDevice(ctx, enterpriseId, siteId, deviceGroupId, deviceId)
}

// GetSiteDeviceGroupDevice converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteDeviceGroupDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteDeviceGroupDevice(ctx, enterpriseId, siteId, deviceGroupId, deviceId)
}

// PostSiteDeviceGroupDevice converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteDeviceGroupDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteDeviceGroupDevice(ctx, enterpriseId, siteId, deviceGroupId, deviceId)
}

// DeleteSiteDeviceGroupMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteDeviceGroupMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteDeviceGroupMbr(ctx, enterpriseId, siteId, deviceGroupId)
}

// GetSiteDeviceGroupMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteDeviceGroupMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteDeviceGroupMbr(ctx, enterpriseId, siteId, deviceGroupId)
}

// PostSiteDeviceGroupMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteDeviceGroupMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------

	var deviceGroupId string
	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteDeviceGroupMbr(ctx, enterpriseId, siteId, deviceGroupId)
}

// DeleteSiteDevice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteDevice(ctx, enterpriseId, siteId, deviceId)
}

// GetSiteDevice converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteDevice(ctx, enterpriseId, siteId, deviceId)
}

// PostSiteDevice converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteDevice(ctx, enterpriseId, siteId, deviceId)
}

// GetSiteDeviceState converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteDeviceState(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-id" -------------

	var deviceId string
	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteDeviceState(ctx, enterpriseId, siteId, deviceId)
}

// DeleteSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteImsiDefinition(ctx, enterpriseId, siteId)
}

// GetSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteImsiDefinition(ctx, enterpriseId, siteId)
}

// PostSiteImsiDefinition converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteImsiDefinition(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteImsiDefinition(ctx, enterpriseId, siteId)
}

// GetSiteIpDomainList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteIpDomainList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteIpDomainList(ctx, enterpriseId, siteId)
}

// DeleteSiteIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-domain-id" -------------

	var ipDomainId string
	ipDomainId = ctx.Param("ip-domain-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteIpDomain(ctx, enterpriseId, siteId, ipDomainId)
}

// GetSiteIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-domain-id" -------------

	var ipDomainId string
	ipDomainId = ctx.Param("ip-domain-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteIpDomain(ctx, enterpriseId, siteId, ipDomainId)
}

// PostSiteIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-domain-id" -------------

	var ipDomainId string
	ipDomainId = ctx.Param("ip-domain-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteIpDomain(ctx, enterpriseId, siteId, ipDomainId)
}

// DeleteSiteMonitoring converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteMonitoring(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteMonitoring(ctx, enterpriseId, siteId)
}

// GetSiteMonitoring converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteMonitoring(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteMonitoring(ctx, enterpriseId, siteId)
}

// PostSiteMonitoring converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteMonitoring(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteMonitoring(ctx, enterpriseId, siteId)
}

// GetSiteMonitoringEdgeDeviceList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteMonitoringEdgeDeviceList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteMonitoringEdgeDeviceList(ctx, enterpriseId, siteId)
}

// DeleteSiteMonitoringEdgeDevice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteMonitoringEdgeDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------

	var edgeDeviceId string
	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteMonitoringEdgeDevice(ctx, enterpriseId, siteId, edgeDeviceId)
}

// GetSiteMonitoringEdgeDevice converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteMonitoringEdgeDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------

	var edgeDeviceId string
	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteMonitoringEdgeDevice(ctx, enterpriseId, siteId, edgeDeviceId)
}

// PostSiteMonitoringEdgeDevice converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteMonitoringEdgeDevice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------

	var edgeDeviceId string
	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteMonitoringEdgeDevice(ctx, enterpriseId, siteId, edgeDeviceId)
}

// GetSiteSimCardList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSimCardList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSimCardList(ctx, enterpriseId, siteId)
}

// DeleteSiteSimCard converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSimCard(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------

	var simId string
	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSimCard(ctx, enterpriseId, siteId, simId)
}

// GetSiteSimCard converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSimCard(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------

	var simId string
	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSimCard(ctx, enterpriseId, siteId, simId)
}

// PostSiteSimCard converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSimCard(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------

	var simId string
	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSimCard(ctx, enterpriseId, siteId, simId)
}

// GetSiteSliceList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSliceList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSliceList(ctx, enterpriseId, siteId)
}

// DeleteSiteSlice converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSlice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSlice(ctx, enterpriseId, siteId, sliceId)
}

// GetSiteSlice converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSlice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSlice(ctx, enterpriseId, siteId, sliceId)
}

// PostSiteSlice converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSlice(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSlice(ctx, enterpriseId, siteId, sliceId)
}

// GetSiteSliceDeviceGroupList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSliceDeviceGroupList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSliceDeviceGroupList(ctx, enterpriseId, siteId, sliceId)
}

// DeleteSiteSliceDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSliceDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSliceDeviceGroup(ctx, enterpriseId, siteId, sliceId, deviceGroup)
}

// GetSiteSliceDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSliceDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSliceDeviceGroup(ctx, enterpriseId, siteId, sliceId, deviceGroup)
}

// PostSiteSliceDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSliceDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "device-group" -------------

	var deviceGroup string
	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSliceDeviceGroup(ctx, enterpriseId, siteId, sliceId, deviceGroup)
}

// GetSiteSliceFilterList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSliceFilterList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSliceFilterList(ctx, enterpriseId, siteId, sliceId)
}

// DeleteSiteSliceFilter converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSliceFilter(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSliceFilter(ctx, enterpriseId, siteId, sliceId, application)
}

// GetSiteSliceFilter converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSliceFilter(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSliceFilter(ctx, enterpriseId, siteId, sliceId, application)
}

// PostSiteSliceFilter converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSliceFilter(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSliceFilter(ctx, enterpriseId, siteId, sliceId, application)
}

// DeleteSiteSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSliceMbr(ctx, enterpriseId, siteId, sliceId)
}

// GetSiteSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSliceMbr(ctx, enterpriseId, siteId, sliceId)
}

// PostSiteSliceMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSliceMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSliceMbr(ctx, enterpriseId, siteId, sliceId)
}

// GetSiteSlicePriorityTrafficRuleList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSlicePriorityTrafficRuleList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSlicePriorityTrafficRuleList(ctx, enterpriseId, siteId, sliceId)
}

// DeleteSiteSlicePriorityTrafficRule converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSlicePriorityTrafficRule(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------

	var priorityTrafficRuleId string
	priorityTrafficRuleId = ctx.Param("priority-traffic-rule-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSlicePriorityTrafficRule(ctx, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
}

// GetSiteSlicePriorityTrafficRule converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSlicePriorityTrafficRule(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------

	var priorityTrafficRuleId string
	priorityTrafficRuleId = ctx.Param("priority-traffic-rule-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSlicePriorityTrafficRule(ctx, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
}

// PostSiteSlicePriorityTrafficRule converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSlicePriorityTrafficRule(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------

	var sliceId string
	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------

	var priorityTrafficRuleId string
	priorityTrafficRuleId = ctx.Param("priority-traffic-rule-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSlicePriorityTrafficRule(ctx, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
}

// GetSiteSmallCellList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSmallCellList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSmallCellList(ctx, enterpriseId, siteId)
}

// DeleteSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------

	var smallCellId string
	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSmallCell(ctx, enterpriseId, siteId, smallCellId)
}

// GetSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------

	var smallCellId string
	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSmallCell(ctx, enterpriseId, siteId, smallCellId)
}

// PostSiteSmallCell converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSmallCell(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------

	var smallCellId string
	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSmallCell(ctx, enterpriseId, siteId, smallCellId)
}

// GetSiteUpfList converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteUpfList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteUpfList(ctx, enterpriseId, siteId)
}

// DeleteSiteUpf converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteUpf(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------

	var upfId string
	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteUpf(ctx, enterpriseId, siteId, upfId)
}

// GetSiteUpf converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteUpf(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------

	var upfId string
	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteUpf(ctx, enterpriseId, siteId, upfId)
}

// PostSiteUpf converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteUpf(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "site-id" -------------

	var siteId string
	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------

	var upfId string
	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteUpf(ctx, enterpriseId, siteId, upfId)
}

// GetTemplateList converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplateList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplateList(ctx, enterpriseId)
}

// DeleteTemplate converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplate(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "template-id" -------------

	var templateId string
	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplate(ctx, enterpriseId, templateId)
}

// GetTemplate converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplate(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "template-id" -------------

	var templateId string
	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplate(ctx, enterpriseId, templateId)
}

// PostTemplate converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplate(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "template-id" -------------

	var templateId string
	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplate(ctx, enterpriseId, templateId)
}

// DeleteTemplateMbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplateMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "template-id" -------------

	var templateId string
	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplateMbr(ctx, enterpriseId, templateId)
}

// GetTemplateMbr converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplateMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "template-id" -------------

	var templateId string
	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplateMbr(ctx, enterpriseId, templateId)
}

// PostTemplateMbr converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplateMbr(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "template-id" -------------

	var templateId string
	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplateMbr(ctx, enterpriseId, templateId)
}

// GetTrafficClassList converts echo context to params.
func (w *serverInterfaceWrapper) GetTrafficClassList(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTrafficClassList(ctx, enterpriseId)
}

// DeleteTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "traffic-class-id" -------------

	var trafficClassId string
	trafficClassId = ctx.Param("traffic-class-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTrafficClass(ctx, enterpriseId, trafficClassId)
}

// GetTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) GetTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "traffic-class-id" -------------

	var trafficClassId string
	trafficClassId = ctx.Param("traffic-class-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTrafficClass(ctx, enterpriseId, trafficClassId)
}

// PostTrafficClass converts echo context to params.
func (w *serverInterfaceWrapper) PostTrafficClass(ctx echo.Context) error {

	// ------------- Path parameter "enterprise-id" -------------

	var enterpriseId externalRef0.EnterpriseId
	enterpriseId = externalRef0.EnterpriseId(ctx.Param("enterprise-id"))

	// ------------- Path parameter "traffic-class-id" -------------

	var trafficClassId string
	trafficClassId = ctx.Param("traffic-class-id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTrafficClass(ctx, enterpriseId, trafficClassId)
}

// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

// This is a simple interface which specifies echo.Route addition functions which
// are present on both echo.Echo and echo.Group, since we want to allow using
// either of them for path registration
type EchoRouter interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router EchoRouter, si ServerInterface, validateResponse bool) error {

	openApiDefinition, err := GetSwagger()
	if err != nil {
		return err
	}
	wrapper := serverInterfaceWrapper{
		handler: si,
	}

	router.GET("/aether/v2.1.x/:enterprise-id/application", wrapper.GetApplicationList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/application/:application-id", wrapper.DeleteApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/application/:application-id", wrapper.GetApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/application/:application-id", wrapper.PostApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/application/:application-id/endpoint", wrapper.GetApplicationEndpointList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/application/:application-id/endpoint/:endpoint-id", wrapper.DeleteApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/application/:application-id/endpoint/:endpoint-id", wrapper.GetApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/application/:application-id/endpoint/:endpoint-id", wrapper.PostApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/application/:application-id/endpoint/:endpoint-id/mbr", wrapper.DeleteApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/application/:application-id/endpoint/:endpoint-id/mbr", wrapper.GetApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/application/:application-id/endpoint/:endpoint-id/mbr", wrapper.PostApplicationEndpointMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site", wrapper.GetSiteList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id", wrapper.DeleteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id", wrapper.GetSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id", wrapper.PostSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service", wrapper.DeleteSiteConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service", wrapper.GetSiteConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service", wrapper.PostSiteConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service/core-4g", wrapper.DeleteSiteConnectivityServiceCore4g, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service/core-4g", wrapper.GetSiteConnectivityServiceCore4g, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service/core-4g", wrapper.PostSiteConnectivityServiceCore4g, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service/core-5g", wrapper.DeleteSiteConnectivityServiceCore5g, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service/core-5g", wrapper.GetSiteConnectivityServiceCore5g, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/connectivity-service/core-5g", wrapper.PostSiteConnectivityServiceCore5g, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/device", wrapper.GetSiteDeviceList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group", wrapper.GetSiteDeviceGroupList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id", wrapper.DeleteSiteDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id", wrapper.GetSiteDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id", wrapper.PostSiteDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id/device", wrapper.GetSiteDeviceGroupDeviceList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id/device/:device-id", wrapper.DeleteSiteDeviceGroupDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id/device/:device-id", wrapper.GetSiteDeviceGroupDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id/device/:device-id", wrapper.PostSiteDeviceGroupDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id/mbr", wrapper.DeleteSiteDeviceGroupMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id/mbr", wrapper.GetSiteDeviceGroupMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/device-group/:device-group-id/mbr", wrapper.PostSiteDeviceGroupMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/device/:device-id", wrapper.DeleteSiteDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/device/:device-id", wrapper.GetSiteDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/device/:device-id", wrapper.PostSiteDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/device/:device-id/state", wrapper.GetSiteDeviceState, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/imsi-definition", wrapper.DeleteSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/imsi-definition", wrapper.GetSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/imsi-definition", wrapper.PostSiteImsiDefinition, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/ip-domain", wrapper.GetSiteIpDomainList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/ip-domain/:ip-domain-id", wrapper.DeleteSiteIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/ip-domain/:ip-domain-id", wrapper.GetSiteIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/ip-domain/:ip-domain-id", wrapper.PostSiteIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/monitoring", wrapper.DeleteSiteMonitoring, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/monitoring", wrapper.GetSiteMonitoring, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/monitoring", wrapper.PostSiteMonitoring, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/monitoring/edge-device", wrapper.GetSiteMonitoringEdgeDeviceList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.DeleteSiteMonitoringEdgeDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.GetSiteMonitoringEdgeDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.PostSiteMonitoringEdgeDevice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/sim-card", wrapper.GetSiteSimCardList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/sim-card/:sim-id", wrapper.DeleteSiteSimCard, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/sim-card/:sim-id", wrapper.GetSiteSimCard, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/sim-card/:sim-id", wrapper.PostSiteSimCard, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice", wrapper.GetSiteSliceList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id", wrapper.DeleteSiteSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id", wrapper.GetSiteSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id", wrapper.PostSiteSlice, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/device-group", wrapper.GetSiteSliceDeviceGroupList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/device-group/:device-group", wrapper.DeleteSiteSliceDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/device-group/:device-group", wrapper.GetSiteSliceDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/device-group/:device-group", wrapper.PostSiteSliceDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/filter", wrapper.GetSiteSliceFilterList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/filter/:application", wrapper.DeleteSiteSliceFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/filter/:application", wrapper.GetSiteSliceFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/filter/:application", wrapper.PostSiteSliceFilter, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/mbr", wrapper.DeleteSiteSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/mbr", wrapper.GetSiteSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/mbr", wrapper.PostSiteSliceMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/priority-traffic-rule", wrapper.GetSiteSlicePriorityTrafficRuleList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/priority-traffic-rule/:priority-traffic-rule-id", wrapper.DeleteSiteSlicePriorityTrafficRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/priority-traffic-rule/:priority-traffic-rule-id", wrapper.GetSiteSlicePriorityTrafficRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/slice/:slice-id/priority-traffic-rule/:priority-traffic-rule-id", wrapper.PostSiteSlicePriorityTrafficRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/small-cell", wrapper.GetSiteSmallCellList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/small-cell/:small-cell-id", wrapper.DeleteSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/small-cell/:small-cell-id", wrapper.GetSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/small-cell/:small-cell-id", wrapper.PostSiteSmallCell, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/upf", wrapper.GetSiteUpfList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/site/:site-id/upf/:upf-id", wrapper.DeleteSiteUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/site/:site-id/upf/:upf-id", wrapper.GetSiteUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/site/:site-id/upf/:upf-id", wrapper.PostSiteUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/template", wrapper.GetTemplateList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/template/:template-id", wrapper.DeleteTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/template/:template-id", wrapper.GetTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/template/:template-id", wrapper.PostTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/template/:template-id/mbr", wrapper.DeleteTemplateMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/template/:template-id/mbr", wrapper.GetTemplateMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/template/:template-id/mbr", wrapper.PostTemplateMbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/traffic-class", wrapper.GetTrafficClassList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.x/:enterprise-id/traffic-class/:traffic-class-id", wrapper.DeleteTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.x/:enterprise-id/traffic-class/:traffic-class-id", wrapper.GetTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.x/:enterprise-id/traffic-class/:traffic-class-id", wrapper.PostTrafficClass, openapi3mw.ValidateOpenapi3(openApiDefinition))

	return nil
}
