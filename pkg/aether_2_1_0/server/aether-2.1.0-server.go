// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"github.com/labstack/echo/v4"
	externalRef0 "github.com/onosproject/aether-roc-api/pkg/aether_2_1_0/types"
	"github.com/onosproject/aether-roc-api/pkg/middleware/openapi3mw"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/access-profile)
	DeleteAccessProfile(ctx echo.Context, target externalRef0.Target) error
	// GET /access-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/access-profile)
	GetAccessProfile(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/access-profile)
	PostAccessProfile(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/access-profile/access-profile/{id})
	DeleteAccessProfileAccessProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /access-profile/access-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/access-profile/access-profile/{id})
	GetAccessProfileAccessProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/access-profile/access-profile/{id})
	PostAccessProfileAccessProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/apn-profile)
	DeleteApnProfile(ctx echo.Context, target externalRef0.Target) error
	// GET /apn-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/apn-profile)
	GetApnProfile(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/apn-profile)
	PostApnProfile(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/apn-profile/apn-profile/{id})
	DeleteApnProfileApnProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /apn-profile/apn-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/apn-profile/apn-profile/{id})
	GetApnProfileApnProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/apn-profile/apn-profile/{id})
	PostApnProfileApnProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/connectivity-service)
	DeleteConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// GET /connectivity-service Generated from YANG model
	// (GET /aether/v2.1.0/{target}/connectivity-service)
	GetConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/connectivity-service)
	PostConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/connectivity-service/connectivity-service/{id})
	DeleteConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /connectivity-service/connectivity-service Generated from YANG model
	// (GET /aether/v2.1.0/{target}/connectivity-service/connectivity-service/{id})
	GetConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/connectivity-service/connectivity-service/{id})
	PostConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/enterprise)
	DeleteEnterprise(ctx echo.Context, target externalRef0.Target) error
	// GET /enterprise Generated from YANG model
	// (GET /aether/v2.1.0/{target}/enterprise)
	GetEnterprise(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/enterprise)
	PostEnterprise(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/enterprise/enterprise/{id})
	DeleteEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /enterprise/enterprise Generated from YANG model
	// (GET /aether/v2.1.0/{target}/enterprise/enterprise/{id})
	GetEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/enterprise/enterprise/{id})
	PostEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	DeleteEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// GET /enterprise/enterprise/{id}/connectivity-service Generated from YANG model
	// (GET /aether/v2.1.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	GetEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	PostEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/qos-profile)
	DeleteQosProfile(ctx echo.Context, target externalRef0.Target) error
	// GET /qos-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/qos-profile)
	GetQosProfile(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/qos-profile)
	PostQosProfile(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/qos-profile/qos-profile/{id})
	DeleteQosProfileQosProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /qos-profile/qos-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/qos-profile/qos-profile/{id})
	GetQosProfileQosProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/qos-profile/qos-profile/{id})
	PostQosProfileQosProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/qos-profile/qos-profile/{id}/apn-ambr)
	DeleteQosProfileQosProfileApnAmbr(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /qos-profile/qos-profile/{id}/apn-ambr Generated from YANG model
	// (GET /aether/v2.1.0/{target}/qos-profile/qos-profile/{id}/apn-ambr)
	GetQosProfileQosProfileApnAmbr(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/qos-profile/qos-profile/{id}/apn-ambr)
	PostQosProfileQosProfileApnAmbr(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/qos-profile/qos-profile/{id}/arp)
	DeleteQosProfileQosProfileArp(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /qos-profile/qos-profile/{id}/arp Generated from YANG model
	// (GET /aether/v2.1.0/{target}/qos-profile/qos-profile/{id}/arp)
	GetQosProfileQosProfileArp(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/qos-profile/qos-profile/{id}/arp)
	PostQosProfileQosProfileArp(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/security-profile)
	DeleteSecurityProfile(ctx echo.Context, target externalRef0.Target) error
	// GET /security-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/security-profile)
	GetSecurityProfile(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/security-profile)
	PostSecurityProfile(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/security-profile/security-profile/{id})
	DeleteSecurityProfileSecurityProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /security-profile/security-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/security-profile/security-profile/{id})
	GetSecurityProfileSecurityProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/security-profile/security-profile/{id})
	PostSecurityProfileSecurityProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-group)
	DeleteServiceGroup(ctx echo.Context, target externalRef0.Target) error
	// GET /service-group Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-group)
	GetServiceGroup(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-group)
	PostServiceGroup(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-group/service-group/{id})
	DeleteServiceGroupServiceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-group/service-group Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-group/service-group/{id})
	GetServiceGroupServiceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-group/service-group/{id})
	PostServiceGroupServiceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-group/service-group/{id}/service-policies/{service-policy})
	DeleteServiceGroupServiceGroupServicePolicies(ctx echo.Context, target externalRef0.Target, id string, servicePolicy string) error
	// GET /service-group/service-group/{id}/service-policies Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-group/service-group/{id}/service-policies/{service-policy})
	GetServiceGroupServiceGroupServicePolicies(ctx echo.Context, target externalRef0.Target, id string, servicePolicy string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-group/service-group/{id}/service-policies/{service-policy})
	PostServiceGroupServiceGroupServicePolicies(ctx echo.Context, target externalRef0.Target, id string, servicePolicy string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-policy)
	DeleteServicePolicy(ctx echo.Context, target externalRef0.Target) error
	// GET /service-policy Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-policy)
	GetServicePolicy(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-policy)
	PostServicePolicy(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-policy/service-policy/{id})
	DeleteServicePolicyServicePolicy(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-policy/service-policy Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-policy/service-policy/{id})
	GetServicePolicyServicePolicy(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-policy/service-policy/{id})
	PostServicePolicyServicePolicy(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-policy/service-policy/{id}/ambr)
	DeleteServicePolicyServicePolicyAmbr(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-policy/service-policy/{id}/ambr Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-policy/service-policy/{id}/ambr)
	GetServicePolicyServicePolicyAmbr(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-policy/service-policy/{id}/ambr)
	PostServicePolicyServicePolicyAmbr(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-policy/service-policy/{id}/rules/{rule})
	DeleteServicePolicyServicePolicyRules(ctx echo.Context, target externalRef0.Target, id string, rule string) error
	// GET /service-policy/service-policy/{id}/rules Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-policy/service-policy/{id}/rules/{rule})
	GetServicePolicyServicePolicyRules(ctx echo.Context, target externalRef0.Target, id string, rule string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-policy/service-policy/{id}/rules/{rule})
	PostServicePolicyServicePolicyRules(ctx echo.Context, target externalRef0.Target, id string, rule string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-rule)
	DeleteServiceRule(ctx echo.Context, target externalRef0.Target) error
	// GET /service-rule Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-rule)
	GetServiceRule(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-rule)
	PostServiceRule(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-rule/service-rule/{id})
	DeleteServiceRuleServiceRule(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-rule/service-rule Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-rule/service-rule/{id})
	GetServiceRuleServiceRule(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-rule/service-rule/{id})
	PostServiceRuleServiceRule(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-rule/service-rule/{id}/flow)
	DeleteServiceRuleServiceRuleFlow(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-rule/service-rule/{id}/flow Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-rule/service-rule/{id}/flow)
	GetServiceRuleServiceRuleFlow(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-rule/service-rule/{id}/flow)
	PostServiceRuleServiceRuleFlow(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos)
	DeleteServiceRuleServiceRuleQos(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-rule/service-rule/{id}/qos Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos)
	GetServiceRuleServiceRuleQos(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos)
	PostServiceRuleServiceRuleQos(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/aggregate-maximum-bitrate)
	DeleteServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-rule/service-rule/{id}/qos/aggregate-maximum-bitrate Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/aggregate-maximum-bitrate)
	GetServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/aggregate-maximum-bitrate)
	PostServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/arp)
	DeleteServiceRuleServiceRuleQosArp(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-rule/service-rule/{id}/qos/arp Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/arp)
	GetServiceRuleServiceRuleQosArp(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/arp)
	PostServiceRuleServiceRuleQosArp(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/guaranteed-bitrate)
	DeleteServiceRuleServiceRuleQosGuaranteedBitrate(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-rule/service-rule/{id}/qos/guaranteed-bitrate Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/guaranteed-bitrate)
	GetServiceRuleServiceRuleQosGuaranteedBitrate(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/guaranteed-bitrate)
	PostServiceRuleServiceRuleQosGuaranteedBitrate(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/maximum-requested-bandwidth)
	DeleteServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /service-rule/service-rule/{id}/qos/maximum-requested-bandwidth Generated from YANG model
	// (GET /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/maximum-requested-bandwidth)
	GetServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/service-rule/service-rule/{id}/qos/maximum-requested-bandwidth)
	PostServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/subscriber)
	DeleteSubscriber(ctx echo.Context, target externalRef0.Target) error
	// GET /subscriber Generated from YANG model
	// (GET /aether/v2.1.0/{target}/subscriber)
	GetSubscriber(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/subscriber)
	PostSubscriber(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/subscriber/ue/{id})
	DeleteSubscriberUe(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /subscriber/ue Generated from YANG model
	// (GET /aether/v2.1.0/{target}/subscriber/ue/{id})
	GetSubscriberUe(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/subscriber/ue/{id})
	PostSubscriberUe(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/subscriber/ue/{id}/profiles)
	DeleteSubscriberUeProfiles(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /subscriber/ue/{id}/profiles Generated from YANG model
	// (GET /aether/v2.1.0/{target}/subscriber/ue/{id}/profiles)
	GetSubscriberUeProfiles(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/subscriber/ue/{id}/profiles)
	PostSubscriberUeProfiles(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/subscriber/ue/{id}/profiles/access-profile/{access-profile})
	DeleteSubscriberUeProfilesAccessProfile(ctx echo.Context, target externalRef0.Target, id string, accessProfile string) error
	// GET /subscriber/ue/{id}/profiles/access-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/subscriber/ue/{id}/profiles/access-profile/{access-profile})
	GetSubscriberUeProfilesAccessProfile(ctx echo.Context, target externalRef0.Target, id string, accessProfile string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/subscriber/ue/{id}/profiles/access-profile/{access-profile})
	PostSubscriberUeProfilesAccessProfile(ctx echo.Context, target externalRef0.Target, id string, accessProfile string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/subscriber/ue/{id}/serving-plmn)
	DeleteSubscriberUeServingPlmn(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /subscriber/ue/{id}/serving-plmn Generated from YANG model
	// (GET /aether/v2.1.0/{target}/subscriber/ue/{id}/serving-plmn)
	GetSubscriberUeServingPlmn(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/subscriber/ue/{id}/serving-plmn)
	PostSubscriberUeServingPlmn(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/up-profile)
	DeleteUpProfile(ctx echo.Context, target externalRef0.Target) error
	// GET /up-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/up-profile)
	GetUpProfile(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/up-profile)
	PostUpProfile(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v2.1.0/{target}/up-profile/up-profile/{id})
	DeleteUpProfileUpProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /up-profile/up-profile Generated from YANG model
	// (GET /aether/v2.1.0/{target}/up-profile/up-profile/{id})
	GetUpProfileUpProfile(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v2.1.0/{target}/up-profile/up-profile/{id})
	PostUpProfileUpProfile(ctx echo.Context, target externalRef0.Target, id string) error
}

// serverInterfaceWrapper converts echo contexts to parameters.
type serverInterfaceWrapper struct {
	handler ServerInterface
}

// DeleteAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteAccessProfile(ctx, target)
}

// GetAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetAccessProfile(ctx, target)
}

// PostAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostAccessProfile(ctx, target)
}

// DeleteAccessProfileAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteAccessProfileAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteAccessProfileAccessProfile(ctx, target, id)
}

// GetAccessProfileAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetAccessProfileAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetAccessProfileAccessProfile(ctx, target, id)
}

// PostAccessProfileAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostAccessProfileAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostAccessProfileAccessProfile(ctx, target, id)
}

// DeleteApnProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApnProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApnProfile(ctx, target)
}

// GetApnProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetApnProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApnProfile(ctx, target)
}

// PostApnProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostApnProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApnProfile(ctx, target)
}

// DeleteApnProfileApnProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApnProfileApnProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApnProfileApnProfile(ctx, target, id)
}

// GetApnProfileApnProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetApnProfileApnProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApnProfileApnProfile(ctx, target, id)
}

// PostApnProfileApnProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostApnProfileApnProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApnProfileApnProfile(ctx, target, id)
}

// DeleteConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteConnectivityService(ctx, target)
}

// GetConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetConnectivityService(ctx, target)
}

// PostConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostConnectivityService(ctx, target)
}

// DeleteConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteConnectivityServiceConnectivityService(ctx, target, id)
}

// GetConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetConnectivityServiceConnectivityService(ctx, target, id)
}

// PostConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostConnectivityServiceConnectivityService(ctx, target, id)
}

// DeleteEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprise(ctx, target)
}

// GetEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprise(ctx, target)
}

// PostEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprise(ctx, target)
}

// DeleteEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterpriseEnterprise(ctx, target, id)
}

// GetEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterpriseEnterprise(ctx, target, id)
}

// PostEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterpriseEnterprise(ctx, target, id)
}

// DeleteEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// GetEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// PostEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// DeleteQosProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteQosProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteQosProfile(ctx, target)
}

// GetQosProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetQosProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetQosProfile(ctx, target)
}

// PostQosProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostQosProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostQosProfile(ctx, target)
}

// DeleteQosProfileQosProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteQosProfileQosProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteQosProfileQosProfile(ctx, target, id)
}

// GetQosProfileQosProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetQosProfileQosProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetQosProfileQosProfile(ctx, target, id)
}

// PostQosProfileQosProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostQosProfileQosProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostQosProfileQosProfile(ctx, target, id)
}

// DeleteQosProfileQosProfileApnAmbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteQosProfileQosProfileApnAmbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteQosProfileQosProfileApnAmbr(ctx, target, id)
}

// GetQosProfileQosProfileApnAmbr converts echo context to params.
func (w *serverInterfaceWrapper) GetQosProfileQosProfileApnAmbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetQosProfileQosProfileApnAmbr(ctx, target, id)
}

// PostQosProfileQosProfileApnAmbr converts echo context to params.
func (w *serverInterfaceWrapper) PostQosProfileQosProfileApnAmbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostQosProfileQosProfileApnAmbr(ctx, target, id)
}

// DeleteQosProfileQosProfileArp converts echo context to params.
func (w *serverInterfaceWrapper) DeleteQosProfileQosProfileArp(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteQosProfileQosProfileArp(ctx, target, id)
}

// GetQosProfileQosProfileArp converts echo context to params.
func (w *serverInterfaceWrapper) GetQosProfileQosProfileArp(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetQosProfileQosProfileArp(ctx, target, id)
}

// PostQosProfileQosProfileArp converts echo context to params.
func (w *serverInterfaceWrapper) PostQosProfileQosProfileArp(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostQosProfileQosProfileArp(ctx, target, id)
}

// DeleteSecurityProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSecurityProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSecurityProfile(ctx, target)
}

// GetSecurityProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetSecurityProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSecurityProfile(ctx, target)
}

// PostSecurityProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostSecurityProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSecurityProfile(ctx, target)
}

// DeleteSecurityProfileSecurityProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSecurityProfileSecurityProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSecurityProfileSecurityProfile(ctx, target, id)
}

// GetSecurityProfileSecurityProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetSecurityProfileSecurityProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSecurityProfileSecurityProfile(ctx, target, id)
}

// PostSecurityProfileSecurityProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostSecurityProfileSecurityProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSecurityProfileSecurityProfile(ctx, target, id)
}

// DeleteServiceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceGroup(ctx, target)
}

// GetServiceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceGroup(ctx, target)
}

// PostServiceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceGroup(ctx, target)
}

// DeleteServiceGroupServiceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceGroupServiceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceGroupServiceGroup(ctx, target, id)
}

// GetServiceGroupServiceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceGroupServiceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceGroupServiceGroup(ctx, target, id)
}

// PostServiceGroupServiceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceGroupServiceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceGroupServiceGroup(ctx, target, id)
}

// DeleteServiceGroupServiceGroupServicePolicies converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceGroupServiceGroupServicePolicies(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "service-policy" -------------

	var servicePolicy string
	servicePolicy = ctx.Param("service-policy")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceGroupServiceGroupServicePolicies(ctx, target, id, servicePolicy)
}

// GetServiceGroupServiceGroupServicePolicies converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceGroupServiceGroupServicePolicies(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "service-policy" -------------

	var servicePolicy string
	servicePolicy = ctx.Param("service-policy")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceGroupServiceGroupServicePolicies(ctx, target, id, servicePolicy)
}

// PostServiceGroupServiceGroupServicePolicies converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceGroupServiceGroupServicePolicies(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "service-policy" -------------

	var servicePolicy string
	servicePolicy = ctx.Param("service-policy")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceGroupServiceGroupServicePolicies(ctx, target, id, servicePolicy)
}

// DeleteServicePolicy converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServicePolicy(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServicePolicy(ctx, target)
}

// GetServicePolicy converts echo context to params.
func (w *serverInterfaceWrapper) GetServicePolicy(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServicePolicy(ctx, target)
}

// PostServicePolicy converts echo context to params.
func (w *serverInterfaceWrapper) PostServicePolicy(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServicePolicy(ctx, target)
}

// DeleteServicePolicyServicePolicy converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServicePolicyServicePolicy(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServicePolicyServicePolicy(ctx, target, id)
}

// GetServicePolicyServicePolicy converts echo context to params.
func (w *serverInterfaceWrapper) GetServicePolicyServicePolicy(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServicePolicyServicePolicy(ctx, target, id)
}

// PostServicePolicyServicePolicy converts echo context to params.
func (w *serverInterfaceWrapper) PostServicePolicyServicePolicy(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServicePolicyServicePolicy(ctx, target, id)
}

// DeleteServicePolicyServicePolicyAmbr converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServicePolicyServicePolicyAmbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServicePolicyServicePolicyAmbr(ctx, target, id)
}

// GetServicePolicyServicePolicyAmbr converts echo context to params.
func (w *serverInterfaceWrapper) GetServicePolicyServicePolicyAmbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServicePolicyServicePolicyAmbr(ctx, target, id)
}

// PostServicePolicyServicePolicyAmbr converts echo context to params.
func (w *serverInterfaceWrapper) PostServicePolicyServicePolicyAmbr(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServicePolicyServicePolicyAmbr(ctx, target, id)
}

// DeleteServicePolicyServicePolicyRules converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServicePolicyServicePolicyRules(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "rule" -------------

	var rule string
	rule = ctx.Param("rule")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServicePolicyServicePolicyRules(ctx, target, id, rule)
}

// GetServicePolicyServicePolicyRules converts echo context to params.
func (w *serverInterfaceWrapper) GetServicePolicyServicePolicyRules(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "rule" -------------

	var rule string
	rule = ctx.Param("rule")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServicePolicyServicePolicyRules(ctx, target, id, rule)
}

// PostServicePolicyServicePolicyRules converts echo context to params.
func (w *serverInterfaceWrapper) PostServicePolicyServicePolicyRules(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "rule" -------------

	var rule string
	rule = ctx.Param("rule")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServicePolicyServicePolicyRules(ctx, target, id, rule)
}

// DeleteServiceRule converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceRule(ctx, target)
}

// GetServiceRule converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceRule(ctx, target)
}

// PostServiceRule converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceRule(ctx, target)
}

// DeleteServiceRuleServiceRule converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceRuleServiceRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceRuleServiceRule(ctx, target, id)
}

// GetServiceRuleServiceRule converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceRuleServiceRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceRuleServiceRule(ctx, target, id)
}

// PostServiceRuleServiceRule converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceRuleServiceRule(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceRuleServiceRule(ctx, target, id)
}

// DeleteServiceRuleServiceRuleFlow converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceRuleServiceRuleFlow(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceRuleServiceRuleFlow(ctx, target, id)
}

// GetServiceRuleServiceRuleFlow converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceRuleServiceRuleFlow(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceRuleServiceRuleFlow(ctx, target, id)
}

// PostServiceRuleServiceRuleFlow converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceRuleServiceRuleFlow(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceRuleServiceRuleFlow(ctx, target, id)
}

// DeleteServiceRuleServiceRuleQos converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceRuleServiceRuleQos(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceRuleServiceRuleQos(ctx, target, id)
}

// GetServiceRuleServiceRuleQos converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceRuleServiceRuleQos(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceRuleServiceRuleQos(ctx, target, id)
}

// PostServiceRuleServiceRuleQos converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceRuleServiceRuleQos(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceRuleServiceRuleQos(ctx, target, id)
}

// DeleteServiceRuleServiceRuleQosAggregateMaximumBitrate converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx, target, id)
}

// GetServiceRuleServiceRuleQosAggregateMaximumBitrate converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx, target, id)
}

// PostServiceRuleServiceRuleQosAggregateMaximumBitrate converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceRuleServiceRuleQosAggregateMaximumBitrate(ctx, target, id)
}

// DeleteServiceRuleServiceRuleQosArp converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceRuleServiceRuleQosArp(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceRuleServiceRuleQosArp(ctx, target, id)
}

// GetServiceRuleServiceRuleQosArp converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceRuleServiceRuleQosArp(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceRuleServiceRuleQosArp(ctx, target, id)
}

// PostServiceRuleServiceRuleQosArp converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceRuleServiceRuleQosArp(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceRuleServiceRuleQosArp(ctx, target, id)
}

// DeleteServiceRuleServiceRuleQosGuaranteedBitrate converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceRuleServiceRuleQosGuaranteedBitrate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceRuleServiceRuleQosGuaranteedBitrate(ctx, target, id)
}

// GetServiceRuleServiceRuleQosGuaranteedBitrate converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceRuleServiceRuleQosGuaranteedBitrate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceRuleServiceRuleQosGuaranteedBitrate(ctx, target, id)
}

// PostServiceRuleServiceRuleQosGuaranteedBitrate converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceRuleServiceRuleQosGuaranteedBitrate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceRuleServiceRuleQosGuaranteedBitrate(ctx, target, id)
}

// DeleteServiceRuleServiceRuleQosMaximumRequestedBandwidth converts echo context to params.
func (w *serverInterfaceWrapper) DeleteServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx, target, id)
}

// GetServiceRuleServiceRuleQosMaximumRequestedBandwidth converts echo context to params.
func (w *serverInterfaceWrapper) GetServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx, target, id)
}

// PostServiceRuleServiceRuleQosMaximumRequestedBandwidth converts echo context to params.
func (w *serverInterfaceWrapper) PostServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostServiceRuleServiceRuleQosMaximumRequestedBandwidth(ctx, target, id)
}

// DeleteSubscriber converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSubscriber(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSubscriber(ctx, target)
}

// GetSubscriber converts echo context to params.
func (w *serverInterfaceWrapper) GetSubscriber(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSubscriber(ctx, target)
}

// PostSubscriber converts echo context to params.
func (w *serverInterfaceWrapper) PostSubscriber(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSubscriber(ctx, target)
}

// DeleteSubscriberUe converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSubscriberUe(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSubscriberUe(ctx, target, id)
}

// GetSubscriberUe converts echo context to params.
func (w *serverInterfaceWrapper) GetSubscriberUe(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSubscriberUe(ctx, target, id)
}

// PostSubscriberUe converts echo context to params.
func (w *serverInterfaceWrapper) PostSubscriberUe(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSubscriberUe(ctx, target, id)
}

// DeleteSubscriberUeProfiles converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSubscriberUeProfiles(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSubscriberUeProfiles(ctx, target, id)
}

// GetSubscriberUeProfiles converts echo context to params.
func (w *serverInterfaceWrapper) GetSubscriberUeProfiles(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSubscriberUeProfiles(ctx, target, id)
}

// PostSubscriberUeProfiles converts echo context to params.
func (w *serverInterfaceWrapper) PostSubscriberUeProfiles(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSubscriberUeProfiles(ctx, target, id)
}

// DeleteSubscriberUeProfilesAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSubscriberUeProfilesAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "access-profile" -------------

	var accessProfile string
	accessProfile = ctx.Param("access-profile")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSubscriberUeProfilesAccessProfile(ctx, target, id, accessProfile)
}

// GetSubscriberUeProfilesAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetSubscriberUeProfilesAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "access-profile" -------------

	var accessProfile string
	accessProfile = ctx.Param("access-profile")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSubscriberUeProfilesAccessProfile(ctx, target, id, accessProfile)
}

// PostSubscriberUeProfilesAccessProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostSubscriberUeProfilesAccessProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "access-profile" -------------

	var accessProfile string
	accessProfile = ctx.Param("access-profile")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSubscriberUeProfilesAccessProfile(ctx, target, id, accessProfile)
}

// DeleteSubscriberUeServingPlmn converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSubscriberUeServingPlmn(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSubscriberUeServingPlmn(ctx, target, id)
}

// GetSubscriberUeServingPlmn converts echo context to params.
func (w *serverInterfaceWrapper) GetSubscriberUeServingPlmn(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSubscriberUeServingPlmn(ctx, target, id)
}

// PostSubscriberUeServingPlmn converts echo context to params.
func (w *serverInterfaceWrapper) PostSubscriberUeServingPlmn(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSubscriberUeServingPlmn(ctx, target, id)
}

// DeleteUpProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteUpProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteUpProfile(ctx, target)
}

// GetUpProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetUpProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetUpProfile(ctx, target)
}

// PostUpProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostUpProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostUpProfile(ctx, target)
}

// DeleteUpProfileUpProfile converts echo context to params.
func (w *serverInterfaceWrapper) DeleteUpProfileUpProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteUpProfileUpProfile(ctx, target, id)
}

// GetUpProfileUpProfile converts echo context to params.
func (w *serverInterfaceWrapper) GetUpProfileUpProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetUpProfileUpProfile(ctx, target, id)
}

// PostUpProfileUpProfile converts echo context to params.
func (w *serverInterfaceWrapper) PostUpProfileUpProfile(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostUpProfileUpProfile(ctx, target, id)
}

// This is a simple interface which specifies echo.Route addition functions which
// are present on both echo.Echo and echo.Group, since we want to allow using
// either of them for path registration
type EchoRouter interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router EchoRouter, si ServerInterface, validateResponse bool) error {

	openApiDefinition, err := GetSwagger()
	if err != nil {
		return err
	}
	wrapper := serverInterfaceWrapper{
		handler: si,
	}

	router.DELETE("/aether/v2.1.0/:target/access-profile", wrapper.DeleteAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/access-profile", wrapper.GetAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/access-profile", wrapper.PostAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/access-profile/access-profile/:id", wrapper.DeleteAccessProfileAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/access-profile/access-profile/:id", wrapper.GetAccessProfileAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/access-profile/access-profile/:id", wrapper.PostAccessProfileAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/apn-profile", wrapper.DeleteApnProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/apn-profile", wrapper.GetApnProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/apn-profile", wrapper.PostApnProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/apn-profile/apn-profile/:id", wrapper.DeleteApnProfileApnProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/apn-profile/apn-profile/:id", wrapper.GetApnProfileApnProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/apn-profile/apn-profile/:id", wrapper.PostApnProfileApnProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/connectivity-service", wrapper.DeleteConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/connectivity-service", wrapper.GetConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/connectivity-service", wrapper.PostConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/connectivity-service/connectivity-service/:id", wrapper.DeleteConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/connectivity-service/connectivity-service/:id", wrapper.GetConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/connectivity-service/connectivity-service/:id", wrapper.PostConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/enterprise", wrapper.DeleteEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/enterprise", wrapper.GetEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/enterprise", wrapper.PostEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/enterprise/enterprise/:id", wrapper.DeleteEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/enterprise/enterprise/:id", wrapper.GetEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/enterprise/enterprise/:id", wrapper.PostEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.DeleteEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.GetEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.PostEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/qos-profile", wrapper.DeleteQosProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/qos-profile", wrapper.GetQosProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/qos-profile", wrapper.PostQosProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/qos-profile/qos-profile/:id", wrapper.DeleteQosProfileQosProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/qos-profile/qos-profile/:id", wrapper.GetQosProfileQosProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/qos-profile/qos-profile/:id", wrapper.PostQosProfileQosProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/qos-profile/qos-profile/:id/apn-ambr", wrapper.DeleteQosProfileQosProfileApnAmbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/qos-profile/qos-profile/:id/apn-ambr", wrapper.GetQosProfileQosProfileApnAmbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/qos-profile/qos-profile/:id/apn-ambr", wrapper.PostQosProfileQosProfileApnAmbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/qos-profile/qos-profile/:id/arp", wrapper.DeleteQosProfileQosProfileArp, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/qos-profile/qos-profile/:id/arp", wrapper.GetQosProfileQosProfileArp, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/qos-profile/qos-profile/:id/arp", wrapper.PostQosProfileQosProfileArp, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/security-profile", wrapper.DeleteSecurityProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/security-profile", wrapper.GetSecurityProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/security-profile", wrapper.PostSecurityProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/security-profile/security-profile/:id", wrapper.DeleteSecurityProfileSecurityProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/security-profile/security-profile/:id", wrapper.GetSecurityProfileSecurityProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/security-profile/security-profile/:id", wrapper.PostSecurityProfileSecurityProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-group", wrapper.DeleteServiceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-group", wrapper.GetServiceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-group", wrapper.PostServiceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-group/service-group/:id", wrapper.DeleteServiceGroupServiceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-group/service-group/:id", wrapper.GetServiceGroupServiceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-group/service-group/:id", wrapper.PostServiceGroupServiceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-group/service-group/:id/service-policies/:service-policy", wrapper.DeleteServiceGroupServiceGroupServicePolicies, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-group/service-group/:id/service-policies/:service-policy", wrapper.GetServiceGroupServiceGroupServicePolicies, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-group/service-group/:id/service-policies/:service-policy", wrapper.PostServiceGroupServiceGroupServicePolicies, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-policy", wrapper.DeleteServicePolicy, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-policy", wrapper.GetServicePolicy, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-policy", wrapper.PostServicePolicy, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-policy/service-policy/:id", wrapper.DeleteServicePolicyServicePolicy, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-policy/service-policy/:id", wrapper.GetServicePolicyServicePolicy, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-policy/service-policy/:id", wrapper.PostServicePolicyServicePolicy, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-policy/service-policy/:id/ambr", wrapper.DeleteServicePolicyServicePolicyAmbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-policy/service-policy/:id/ambr", wrapper.GetServicePolicyServicePolicyAmbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-policy/service-policy/:id/ambr", wrapper.PostServicePolicyServicePolicyAmbr, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-policy/service-policy/:id/rules/:rule", wrapper.DeleteServicePolicyServicePolicyRules, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-policy/service-policy/:id/rules/:rule", wrapper.GetServicePolicyServicePolicyRules, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-policy/service-policy/:id/rules/:rule", wrapper.PostServicePolicyServicePolicyRules, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-rule", wrapper.DeleteServiceRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-rule", wrapper.GetServiceRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-rule", wrapper.PostServiceRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-rule/service-rule/:id", wrapper.DeleteServiceRuleServiceRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-rule/service-rule/:id", wrapper.GetServiceRuleServiceRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-rule/service-rule/:id", wrapper.PostServiceRuleServiceRule, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-rule/service-rule/:id/flow", wrapper.DeleteServiceRuleServiceRuleFlow, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-rule/service-rule/:id/flow", wrapper.GetServiceRuleServiceRuleFlow, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-rule/service-rule/:id/flow", wrapper.PostServiceRuleServiceRuleFlow, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos", wrapper.DeleteServiceRuleServiceRuleQos, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos", wrapper.GetServiceRuleServiceRuleQos, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos", wrapper.PostServiceRuleServiceRuleQos, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/aggregate-maximum-bitrate", wrapper.DeleteServiceRuleServiceRuleQosAggregateMaximumBitrate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/aggregate-maximum-bitrate", wrapper.GetServiceRuleServiceRuleQosAggregateMaximumBitrate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/aggregate-maximum-bitrate", wrapper.PostServiceRuleServiceRuleQosAggregateMaximumBitrate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/arp", wrapper.DeleteServiceRuleServiceRuleQosArp, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/arp", wrapper.GetServiceRuleServiceRuleQosArp, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/arp", wrapper.PostServiceRuleServiceRuleQosArp, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/guaranteed-bitrate", wrapper.DeleteServiceRuleServiceRuleQosGuaranteedBitrate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/guaranteed-bitrate", wrapper.GetServiceRuleServiceRuleQosGuaranteedBitrate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/guaranteed-bitrate", wrapper.PostServiceRuleServiceRuleQosGuaranteedBitrate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/maximum-requested-bandwidth", wrapper.DeleteServiceRuleServiceRuleQosMaximumRequestedBandwidth, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/maximum-requested-bandwidth", wrapper.GetServiceRuleServiceRuleQosMaximumRequestedBandwidth, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/service-rule/service-rule/:id/qos/maximum-requested-bandwidth", wrapper.PostServiceRuleServiceRuleQosMaximumRequestedBandwidth, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/subscriber", wrapper.DeleteSubscriber, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/subscriber", wrapper.GetSubscriber, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/subscriber", wrapper.PostSubscriber, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/subscriber/ue/:id", wrapper.DeleteSubscriberUe, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/subscriber/ue/:id", wrapper.GetSubscriberUe, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/subscriber/ue/:id", wrapper.PostSubscriberUe, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/subscriber/ue/:id/profiles", wrapper.DeleteSubscriberUeProfiles, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/subscriber/ue/:id/profiles", wrapper.GetSubscriberUeProfiles, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/subscriber/ue/:id/profiles", wrapper.PostSubscriberUeProfiles, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/subscriber/ue/:id/profiles/access-profile/:access-profile", wrapper.DeleteSubscriberUeProfilesAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/subscriber/ue/:id/profiles/access-profile/:access-profile", wrapper.GetSubscriberUeProfilesAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/subscriber/ue/:id/profiles/access-profile/:access-profile", wrapper.PostSubscriberUeProfilesAccessProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/subscriber/ue/:id/serving-plmn", wrapper.DeleteSubscriberUeServingPlmn, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/subscriber/ue/:id/serving-plmn", wrapper.GetSubscriberUeServingPlmn, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/subscriber/ue/:id/serving-plmn", wrapper.PostSubscriberUeServingPlmn, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/up-profile", wrapper.DeleteUpProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/up-profile", wrapper.GetUpProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/up-profile", wrapper.PostUpProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v2.1.0/:target/up-profile/up-profile/:id", wrapper.DeleteUpProfileUpProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v2.1.0/:target/up-profile/up-profile/:id", wrapper.GetUpProfileUpProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v2.1.0/:target/up-profile/up-profile/:id", wrapper.PostUpProfileUpProfile, openapi3mw.ValidateOpenapi3(openApiDefinition))

	return nil
}
