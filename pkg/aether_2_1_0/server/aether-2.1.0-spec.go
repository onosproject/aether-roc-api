// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xd7W/bONL/Vww9z4fnAazKddOX5HDAZW/bYnG72zRpPhwWC4GRaEdbi2IpOWmQ8/9+",
	"0IslUSJpUiIlJXW/NJLJmdHM/IbvnEfLi0IcIYiS2Dp7tDAgIIQJJNlTAsgaJulfXoQSiLI/E/g9cfAG",
	"BOhvM+8WkBgmf98mK/td+mPs3cIQZMUeMLTOrDghAVpbu91ubvkw9kiAkyBC1llBfPZ/PrwLPDgL0CxC",
	"UWx7EVoF6/+35hb8DkK8SYl4EULQS4K7IHmwY0jSCvbd0ppbQUoJg+TWmlsIhLCka80tAr9tAwJ96ywh",
	"W5gKkL6BcfJT5Acw+8DL8sWDe+55MI5tTKJVkHKlPhpgvAk8kIru/BWn8te/9X8JXFln1v84lTKd/NfY",
	"aZDdZZrg8x1GDPewVBjpl6FGU8jRNHdXLMk/Ge6mTQwmcTkZhhfMlZT2PUogwSSI9YlTIyniZ5a1qy6F",
	"WSMpsGzL+znSH1fqNIUcTXN3O0mSRQIQ3hDTIlWMFGQj2LxYBDMkuoLelqTOpNtgLcKHeQ8njCslXd77",
	"WJNoizVKUqd6gOsQMrg9JCqfcLQJvKKnZVrENlO+zFmRB+1SFWQP8R1GDLefVO65zpgowUpVvsvtxoBj",
	"iXjxJSRbrUGpRlTM07wAbldp3A+b6N68SDkbFbk+R/EAYqVcFKVyz9drAtcggXYIvgfhNrRvgoSABA4j",
	"r4C/8pcQPJTMBCtL93ELCEAJhP7ACmYwVpX9t8IyxURGSgkg/z7wk9uBPkIkAeNrtjexR4IbqLEtqUiK",
	"+LnX0ADLlOoBru5F3neMzbCvyMvKYWpGSY7bISkzB0NrG29CZEg0ikVbnmusXTU1kiJ+Zlm7DSl284JE",
	"5pltpwC+H6QMweaCRBiSpOi5C+fUmnUevuSzr7u5hSkqoMUvSGAY95y2nFtJkGRTxL8kMBQXnu+npAEh",
	"IO0QV5V5JaObv6CXfczBSVqz2qNmzh+tEHz/FaJ1GvRfLhZzKwxQ+Vx9Vb3SvDkfP7f8IMYb8GDn0+YU",
	"0Xd8mvVKDKKrYJPkwb5G7tWyIlAUYFQNfEY1thSBzyKQv5AkkRVuEdmxTM+zUtMu1nUM/dkqIrMt9kEC",
	"Y6tpxmo9pRRjv1jBEGTvnDz+LFnpeXPDkKaZyeGZNwnfQDKnmAjDrGJMzbiDa4kBMb5nlhVYmH0qccBH",
	"aXQMQkAe6u5ef82pFUMvQj6jXvUDo+b6uw0RuNlAv16t9rascxNFGwiQlogTJtuUwioiIUjSUih5tbTm",
	"VjGAss7evH796nVGs3h+V5FMK5c0A5TAddqlnVtxc3ZvX4H+QSp28dYizLq8x+EqFSEUlqHomCFfURBF",
	"xOXFinXH0faTiQm3cWxD5OMoQFQbSL030TGI8freY7Ju/CKFKXrB0axtIcVLCj+cxUsaK+xCAlywSrFU",
	"4g6pnV5xRmUlVTY+FHp7Qu10T2ztZJ3BnVZLtP8mT2jOSk2MvgW/Y8FSSmPx2+xXf4vUB9rclXQ6cPCK",
	"CUIHsxhTM+6gWgK1lf9+C/pzC+Qz3p0X4H+ciDG3vnmBuNP8rt5jXlTk0ortDvNO3qeozR6GO2XRPdoE",
	"6Kv4S0+Wpyenb94uTzlfXFJhjRO2uD+DggZbq238spWpYoAcJ2Z1jwmEYQYK2wMY3ASbIKFGk+wCrBFi",
	"reTddoMgEVOjy7AJBhEpCPDN9pJjrrJ2N4MRzLIVa3uNWQPFDI5SjZTEhh26uTpcQdBw8cvylecOr80f",
	"p+X4Ch+kKaRlGSQi7EmTSMuyRpPfUL+gmxKQa8daG71M47LBThKUgn1jTTjyiwqByCzI0ZM7sNZ+HPzF",
	"jH19fV2EsW+vbfjyN5aTKDgDc2eiWe/4GqDDascgSSBBmV+swHaT/CdCtg9DgDI77ENagA6b5YE1Y1z8",
	"IjV8b+9OHCboVPyUXIqz25Edd9iFJSJPsyRPXe7Q2pMZwMrsviyHsOqdUlDvVtbGJ8cRbccR7dwi+82t",
	"/aGw37xaMc1fqERS8Q7h40BaciAtoU5lI5TboE2vQyjMf+b+Wy+bPSu1PnsKw7Q9e25KcGPsj2a3Ou2C",
	"Ei0OXY6tIHdYbXm3gKwDtM7YqYVgRtWnvLthVWxu77NnXUe7E8V9t6ireFi5p98wKDH0glWx+7HlB8sT",
	"no7oeqIdVQe+UEknxXkCw7080dEAIzv+pZY0JPbmz601c7u93l30ZUPN2xhvaL+7kcWMg06aupyqj4pP",
	"lxy7cIpdOFUdq5vruFBifqHksAmU7cY+XHTElxZ8MZSrbKADJ6iOltJiKZGWWSajjomZtcFWYaRHn/tq",
	"jO6oH0UjuurjhJ9enFgz7IEmhkOKswP0psaqRnuHYXOOrpon/2NhnwJ7dW5/+PPx3c6uP56oPL5c7qxD",
	"w6wgjAObALSG9opEYfvcx4eIzLzbKLvFKoyDs6ysNacQ+OaEarfenZy8eXtysnj76u3i9PXr5aIY4Law",
	"2GTOwnytTBKNJl4S8YW7Dza+B4h/WLiy5Jwa973mjowp8gzrSXYkuF8o6Epk4CrPenY5wlleSQZ9G+Dm",
	"aPdV7TvpcrxVoNpBys7nIw8FKeqA6yQPDUqeTBXEc26l9lbfximo+imeViVq6oZV6xtrr2Tdxu3NJdVa",
	"H2+3SlV/i1k1a2+FsyZsJ5B2F3f8I6elcThGrTQFNpvonm7S9q/kNvyKTzmb/fDQ88TR7vT0lB3s0pqs",
	"OBeizhQRm2ICDlPM/rHJptXF/VO+/hnWog9iG+6AYuWAxjnUTQcwdiFBx5RViqUSd0jtFND0IpSQaCN/",
	"aJKu9pQXF3ovC2xjSGy8Aagp0/I1txtVqyOxTpe+CtAq2t9aALzsVBUMQbDJ8LiK/hFhiBBM7iPyNUDr",
	"FxFZV1e0fsIQzX4vf5x9iLbI38/bb0lK4zZJcHzmOAwyu7m1CTyI8vFDQfLX/M0lXNmffv9g/wbDG0js",
	"ly8WEhSde2wXly84W7yJgB87y8Vy4SzeODVin9Dmwb6KVsk9INAuGNp3L18sXmB/lcERkjD+tLraHzRR",
	"5vny1FksM545+TRmAeTbv1xc2h/OP9upVPbiTcavdvQZJreQzJYv8s+9gyTOO9f5m2zbI0QAB9aZ9erF",
	"IiuEQXKbAc4BWW3nLivsPOYn0ndOu/X04Qbm81kpYDNz/eJbZ9bP2fu8db8oAwqBMY5QvN8jl21ranf/",
	"M++Kt2F+UNj6+f2v77+8n32EKGUA/Vk65pn9+/z3j7Mw8uEmW1DIT9DTMnyEiVCA5WJh8Ebf5tXGH99/",
	"mX361yxlSn9f+kNDs4KPTVvJdWyd/WFZf6aBsnY38x9sEasiTnGzwO7PuYWjmKGyiyhm6Ky8p4SnBeoO",
	"ZUdwgfKuZYKXbft7BKaf3lDTxaerLyIn2M0l3bb5+Bj4O0VXnpZfj+Tkrl6f7wIBsUDd8TE3crn5V/gw",
	"y5yNeUV51m43rieXx6lB0E4Ew/SQ+gBYMRoTnFzuWsFIX1euCL2q8rhtDa2qPj5LXxwzrodSf0u2L6Um",
	"puK8g7uxq8ulld2bJ8Rzb0F4ttaDwwlgknfWX4zF+r0EV+UFAINDUUIMnUjkJQxQgyFL46M2MTwt9vBx",
	"3oUgE3Fw9ku5ZoihremiYQIAcc2hpjuU5AV95g2cgs9oDgdTihH03gox/qk7nQbHOJ+7ThzT+XvUgFrp",
	"ctRGraGoHs5L3wc2qnfW/5RrrSrhp+K3Q3uwq8eZVf2aLcAzb024VtYCvykjkdOjZL3tiNqJdDI7imYc",
	"25q6mYoW7h4Knmtv06AcbDAxJePcUNg3lhnoGqtdqDlCzGvsuRMHrs/RmGt+fO46w08jY6JafKlpc9Tu",
	"cUNVPRy4ce3luB5K/S3XQ640MRXnHdyNXV0urezePCGeeT+Za2s9OJw4Jp36HbLq4DzHqLj1YxIY5Ygz",
	"AFSp5LhaMEub54hgNQTXPUE/kKmbkyeH6PzgdQcwZ8eFpwHktiiDgDhPxqgTvwQfoasI3cL2JmCbX+gx",
	"AmJZ557ECN1fwztiN/iACDoRycpbrgbDpoZHHdKxNNfDn1mXRE/Aidsv5IZ5De1Mz9NHdHxXPxK6QeOw",
	"YM+8bZLwCY2Qng7GG1dPH4JyVvxjca/1CMDl89cLU+pScHVI1qqP3DI1FNbLhxs3pY/tr40n2dao0siU",
	"3HkU13Z1OnoHtxcJ8+zbG4HtdaH0SWDWaV7T7zzSd6z3QHXx90V1H/9kQH5AtIEwz0hnoDEIsO3bNzS0",
	"ZT4u3gvkaIKJKVMr84KOWMZycTOhjZmVY8RYV6VTkIpbF5XWx4lObAFMxKB9wouuUSavP4VO9UUdKr2d",
	"ukoEMrrbNh+VOta5Vqbl1yM5uavX57tAQCzQj9HF5vmANtA+FQw7civ/fLWNtfivJtFggC5SEWlFdWWo",
	"I76741vHZgC5LFTTBHqWj8l5TP/r1XLvUy9NCPFMkYaDfJGdygDmM5v1B30h4XFELJAjxwVTkiKNkZ4w",
	"VPmqsThUZksbMRDtszlJRZnL7Vhrvlz2JqJHnl+ra5hIa09hiHu51bH0SWccG9lR6QeloW2qjel48QgO",
	"7erzbnVX5wvyY3RzWTbXBMvpY9TZZ7DrAtQiSdpEwMqSZhDAFnn8tKG2MswRv+r4Ld3ABIbLlI3TA3KR",
	"A7ILjvM8chOBMUOYYVCc58HUC+JvUXzEsDqG9z5gBMKZnSeKYEeY4LMjtstshEUyrp/KlGnTgbykjINF",
	"AlFKVP0xgm/2ftEj8/UfNYKIXMpUYBFn0p1oyCG4T3AheFqBhOARgwbBZsIDwcdA0D0QEGwY9ARPF97s",
	"tNsd0V4lXp1iJ+KgdMNFAlZycgOBoW3cY5zoHCfY7mMsarDz108ziBzIqt8xmhQds8s90Z9qqYGnE1Wk",
	"pRwuuoiyKpsIMwLzH+NN53gjdixjcUfoPOMEICrr94FgUk+iPXyQ4HLXCv6Kizqay7rjrnPTiurjzDVl",
	"jOydzlZ6Ybuscw3H9dNrOIynZonxuzurs5XsuVIMn3vL0bSiFhhllpoIkpx63nR5SNVyTo8KLZ4cxiBW",
	"yxjfC2u08o/IEyGPMrIuBDZS/08Jiq1UmfTzrhtUR8+eqSyUeRD3TqYpb0V1iHOlPO6AFsjRxApTpkZG",
	"5f6hSWsiUElfnUrYiusZ/ZVC01Ve8yKtOHJAEohiLgxd1TWnI/bUTXHsU4iA27S3NrjSNh0Fo1ssfzvj",
	"NR6xR8BlrhNy17h7815pctS5HFpPPVy1rouRXbP+p9yUTqmFafjswM7r6vFjVZdmC/DMGwqOjbUAbygM",
	"7nb/DQAA//9Ep0gEUdwAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
