// Code generated by oapi-codegen. DO NOT EDIT.
// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package server

import (
	"github.com/labstack/echo/v4"
	externalRef0 "github.com/onosproject/aether-roc-api/pkg/aether_3_0_0/types"
	"github.com/onosproject/aether-roc-api/pkg/middleware/openapi3mw"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/ap-list)
	DeleteApList(ctx echo.Context, target externalRef0.Target) error
	// GET /ap-list Generated from YANG model
	// (GET /aether/v3.0.0/{target}/ap-list)
	GetApList(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/ap-list)
	PostApList(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/ap-list/ap-list/{id})
	DeleteApListApList(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /ap-list/ap-list Generated from YANG model
	// (GET /aether/v3.0.0/{target}/ap-list/ap-list/{id})
	GetApListApList(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/ap-list/ap-list/{id})
	PostApListApList(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/ap-list/ap-list/{id}/access-points/{address})
	DeleteApListApListAccessPoints(ctx echo.Context, target externalRef0.Target, id string, address string) error
	// GET /ap-list/ap-list/{id}/access-points Generated from YANG model
	// (GET /aether/v3.0.0/{target}/ap-list/ap-list/{id}/access-points/{address})
	GetApListApListAccessPoints(ctx echo.Context, target externalRef0.Target, id string, address string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/ap-list/ap-list/{id}/access-points/{address})
	PostApListApListAccessPoints(ctx echo.Context, target externalRef0.Target, id string, address string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/application)
	DeleteApplication(ctx echo.Context, target externalRef0.Target) error
	// GET /application Generated from YANG model
	// (GET /aether/v3.0.0/{target}/application)
	GetApplication(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/application)
	PostApplication(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/application/application/{id})
	DeleteApplicationApplication(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /application/application Generated from YANG model
	// (GET /aether/v3.0.0/{target}/application/application/{id})
	GetApplicationApplication(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/application/application/{id})
	PostApplicationApplication(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/application/application/{id}/endpoint/{name})
	DeleteApplicationApplicationEndpoint(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// GET /application/application/{id}/endpoint Generated from YANG model
	// (GET /aether/v3.0.0/{target}/application/application/{id}/endpoint/{name})
	GetApplicationApplicationEndpoint(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/application/application/{id}/endpoint/{name})
	PostApplicationApplicationEndpoint(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/connectivity-service)
	DeleteConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// GET /connectivity-service Generated from YANG model
	// (GET /aether/v3.0.0/{target}/connectivity-service)
	GetConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/connectivity-service)
	PostConnectivityService(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/connectivity-service/connectivity-service/{id})
	DeleteConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /connectivity-service/connectivity-service Generated from YANG model
	// (GET /aether/v3.0.0/{target}/connectivity-service/connectivity-service/{id})
	GetConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/connectivity-service/connectivity-service/{id})
	PostConnectivityServiceConnectivityService(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/device-group)
	DeleteDeviceGroup(ctx echo.Context, target externalRef0.Target) error
	// GET /device-group Generated from YANG model
	// (GET /aether/v3.0.0/{target}/device-group)
	GetDeviceGroup(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/device-group)
	PostDeviceGroup(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/device-group/device-group/{id})
	DeleteDeviceGroupDeviceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /device-group/device-group Generated from YANG model
	// (GET /aether/v3.0.0/{target}/device-group/device-group/{id})
	GetDeviceGroupDeviceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/device-group/device-group/{id})
	PostDeviceGroupDeviceGroup(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/device-group/device-group/{id}/imsis/{name})
	DeleteDeviceGroupDeviceGroupImsis(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// GET /device-group/device-group/{id}/imsis Generated from YANG model
	// (GET /aether/v3.0.0/{target}/device-group/device-group/{id}/imsis/{name})
	GetDeviceGroupDeviceGroupImsis(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/device-group/device-group/{id}/imsis/{name})
	PostDeviceGroupDeviceGroupImsis(ctx echo.Context, target externalRef0.Target, id string, name string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/device-model-list)
	DeleteDeviceModelList(ctx echo.Context, target externalRef0.Target) error
	// GET /device-model-list Generated from YANG model
	// (GET /aether/v3.0.0/{target}/device-model-list)
	GetDeviceModelList(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/device-model-list)
	PostDeviceModelList(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/device-model-list/device-model-list/{id})
	DeleteDeviceModelListDeviceModelList(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /device-model-list/device-model-list Generated from YANG model
	// (GET /aether/v3.0.0/{target}/device-model-list/device-model-list/{id})
	GetDeviceModelListDeviceModelList(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/device-model-list/device-model-list/{id})
	PostDeviceModelListDeviceModelList(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/device-model-list/device-model-list/{id}/tac/{tac})
	DeleteDeviceModelListDeviceModelListTac(ctx echo.Context, target externalRef0.Target, id string, tac string) error
	// GET /device-model-list/device-model-list/{id}/tac Generated from YANG model
	// (GET /aether/v3.0.0/{target}/device-model-list/device-model-list/{id}/tac/{tac})
	GetDeviceModelListDeviceModelListTac(ctx echo.Context, target externalRef0.Target, id string, tac string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/device-model-list/device-model-list/{id}/tac/{tac})
	PostDeviceModelListDeviceModelListTac(ctx echo.Context, target externalRef0.Target, id string, tac string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/enterprise)
	DeleteEnterprise(ctx echo.Context, target externalRef0.Target) error
	// GET /enterprise Generated from YANG model
	// (GET /aether/v3.0.0/{target}/enterprise)
	GetEnterprise(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/enterprise)
	PostEnterprise(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/enterprise/enterprise/{id})
	DeleteEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /enterprise/enterprise Generated from YANG model
	// (GET /aether/v3.0.0/{target}/enterprise/enterprise/{id})
	GetEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/enterprise/enterprise/{id})
	PostEnterpriseEnterprise(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	DeleteEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// GET /enterprise/enterprise/{id}/connectivity-service Generated from YANG model
	// (GET /aether/v3.0.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	GetEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service})
	PostEnterpriseEnterpriseConnectivityService(ctx echo.Context, target externalRef0.Target, id string, connectivityService string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/ip-domain)
	DeleteIpDomain(ctx echo.Context, target externalRef0.Target) error
	// GET /ip-domain Generated from YANG model
	// (GET /aether/v3.0.0/{target}/ip-domain)
	GetIpDomain(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/ip-domain)
	PostIpDomain(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/ip-domain/ip-domain/{id})
	DeleteIpDomainIpDomain(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /ip-domain/ip-domain Generated from YANG model
	// (GET /aether/v3.0.0/{target}/ip-domain/ip-domain/{id})
	GetIpDomainIpDomain(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/ip-domain/ip-domain/{id})
	PostIpDomainIpDomain(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/network)
	DeleteNetwork(ctx echo.Context, target externalRef0.Target) error
	// GET /network Generated from YANG model
	// (GET /aether/v3.0.0/{target}/network)
	GetNetwork(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/network)
	PostNetwork(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/network/network/{id})
	DeleteNetworkNetwork(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /network/network Generated from YANG model
	// (GET /aether/v3.0.0/{target}/network/network/{id})
	GetNetworkNetwork(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/network/network/{id})
	PostNetworkNetwork(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/site)
	DeleteSite(ctx echo.Context, target externalRef0.Target) error
	// GET /site Generated from YANG model
	// (GET /aether/v3.0.0/{target}/site)
	GetSite(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/site)
	PostSite(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/site/site/{id})
	DeleteSiteSite(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /site/site Generated from YANG model
	// (GET /aether/v3.0.0/{target}/site/site/{id})
	GetSiteSite(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/site/site/{id})
	PostSiteSite(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/template)
	DeleteTemplate(ctx echo.Context, target externalRef0.Target) error
	// GET /template Generated from YANG model
	// (GET /aether/v3.0.0/{target}/template)
	GetTemplate(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/template)
	PostTemplate(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/template/template/{id})
	DeleteTemplateTemplate(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /template/template Generated from YANG model
	// (GET /aether/v3.0.0/{target}/template/template/{id})
	GetTemplateTemplate(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/template/template/{id})
	PostTemplateTemplate(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/upf)
	DeleteUpf(ctx echo.Context, target externalRef0.Target) error
	// GET /upf Generated from YANG model
	// (GET /aether/v3.0.0/{target}/upf)
	GetUpf(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/upf)
	PostUpf(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/upf/upf/{id})
	DeleteUpfUpf(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /upf/upf Generated from YANG model
	// (GET /aether/v3.0.0/{target}/upf/upf/{id})
	GetUpfUpf(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/upf/upf/{id})
	PostUpfUpf(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/vcs)
	DeleteVcs(ctx echo.Context, target externalRef0.Target) error
	// GET /vcs Generated from YANG model
	// (GET /aether/v3.0.0/{target}/vcs)
	GetVcs(ctx echo.Context, target externalRef0.Target) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/vcs)
	PostVcs(ctx echo.Context, target externalRef0.Target) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/vcs/vcs/{id})
	DeleteVcsVcs(ctx echo.Context, target externalRef0.Target, id string) error
	// GET /vcs/vcs Generated from YANG model
	// (GET /aether/v3.0.0/{target}/vcs/vcs/{id})
	GetVcsVcs(ctx echo.Context, target externalRef0.Target, id string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/vcs/vcs/{id})
	PostVcsVcs(ctx echo.Context, target externalRef0.Target, id string) error
	// DELETE Generated from YANG model
	// (DELETE /aether/v3.0.0/{target}/vcs/vcs/{id}/application/{application})
	DeleteVcsVcsApplication(ctx echo.Context, target externalRef0.Target, id string, application string) error
	// GET /vcs/vcs/{id}/application Generated from YANG model
	// (GET /aether/v3.0.0/{target}/vcs/vcs/{id}/application/{application})
	GetVcsVcsApplication(ctx echo.Context, target externalRef0.Target, id string, application string) error
	// POST Generated from YANG model
	// (POST /aether/v3.0.0/{target}/vcs/vcs/{id}/application/{application})
	PostVcsVcsApplication(ctx echo.Context, target externalRef0.Target, id string, application string) error
}

// serverInterfaceWrapper converts echo contexts to parameters.
type serverInterfaceWrapper struct {
	handler ServerInterface
}

// DeleteApList converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApList(ctx, target)
}

// GetApList converts echo context to params.
func (w *serverInterfaceWrapper) GetApList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApList(ctx, target)
}

// PostApList converts echo context to params.
func (w *serverInterfaceWrapper) PostApList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApList(ctx, target)
}

// DeleteApListApList converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApListApList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApListApList(ctx, target, id)
}

// GetApListApList converts echo context to params.
func (w *serverInterfaceWrapper) GetApListApList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApListApList(ctx, target, id)
}

// PostApListApList converts echo context to params.
func (w *serverInterfaceWrapper) PostApListApList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApListApList(ctx, target, id)
}

// DeleteApListApListAccessPoints converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApListApListAccessPoints(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "address" -------------

	var address string
	address = ctx.Param("address")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApListApListAccessPoints(ctx, target, id, address)
}

// GetApListApListAccessPoints converts echo context to params.
func (w *serverInterfaceWrapper) GetApListApListAccessPoints(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "address" -------------

	var address string
	address = ctx.Param("address")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApListApListAccessPoints(ctx, target, id, address)
}

// PostApListApListAccessPoints converts echo context to params.
func (w *serverInterfaceWrapper) PostApListApListAccessPoints(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "address" -------------

	var address string
	address = ctx.Param("address")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApListApListAccessPoints(ctx, target, id, address)
}

// DeleteApplication converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplication(ctx, target)
}

// GetApplication converts echo context to params.
func (w *serverInterfaceWrapper) GetApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplication(ctx, target)
}

// PostApplication converts echo context to params.
func (w *serverInterfaceWrapper) PostApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplication(ctx, target)
}

// DeleteApplicationApplication converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplicationApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplicationApplication(ctx, target, id)
}

// GetApplicationApplication converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationApplication(ctx, target, id)
}

// PostApplicationApplication converts echo context to params.
func (w *serverInterfaceWrapper) PostApplicationApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplicationApplication(ctx, target, id)
}

// DeleteApplicationApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) DeleteApplicationApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteApplicationApplicationEndpoint(ctx, target, id, name)
}

// GetApplicationApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) GetApplicationApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetApplicationApplicationEndpoint(ctx, target, id, name)
}

// PostApplicationApplicationEndpoint converts echo context to params.
func (w *serverInterfaceWrapper) PostApplicationApplicationEndpoint(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostApplicationApplicationEndpoint(ctx, target, id, name)
}

// DeleteConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteConnectivityService(ctx, target)
}

// GetConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetConnectivityService(ctx, target)
}

// PostConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostConnectivityService(ctx, target)
}

// DeleteConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteConnectivityServiceConnectivityService(ctx, target, id)
}

// GetConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetConnectivityServiceConnectivityService(ctx, target, id)
}

// PostConnectivityServiceConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostConnectivityServiceConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostConnectivityServiceConnectivityService(ctx, target, id)
}

// DeleteDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceGroup(ctx, target)
}

// GetDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceGroup(ctx, target)
}

// PostDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceGroup(ctx, target)
}

// DeleteDeviceGroupDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceGroupDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceGroupDeviceGroup(ctx, target, id)
}

// GetDeviceGroupDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceGroupDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceGroupDeviceGroup(ctx, target, id)
}

// PostDeviceGroupDeviceGroup converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceGroupDeviceGroup(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceGroupDeviceGroup(ctx, target, id)
}

// DeleteDeviceGroupDeviceGroupImsis converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceGroupDeviceGroupImsis(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceGroupDeviceGroupImsis(ctx, target, id, name)
}

// GetDeviceGroupDeviceGroupImsis converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceGroupDeviceGroupImsis(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceGroupDeviceGroupImsis(ctx, target, id, name)
}

// PostDeviceGroupDeviceGroupImsis converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceGroupDeviceGroupImsis(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "name" -------------

	var name string
	name = ctx.Param("name")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceGroupDeviceGroupImsis(ctx, target, id, name)
}

// DeleteDeviceModelList converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceModelList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceModelList(ctx, target)
}

// GetDeviceModelList converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceModelList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceModelList(ctx, target)
}

// PostDeviceModelList converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceModelList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceModelList(ctx, target)
}

// DeleteDeviceModelListDeviceModelList converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceModelListDeviceModelList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceModelListDeviceModelList(ctx, target, id)
}

// GetDeviceModelListDeviceModelList converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceModelListDeviceModelList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceModelListDeviceModelList(ctx, target, id)
}

// PostDeviceModelListDeviceModelList converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceModelListDeviceModelList(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceModelListDeviceModelList(ctx, target, id)
}

// DeleteDeviceModelListDeviceModelListTac converts echo context to params.
func (w *serverInterfaceWrapper) DeleteDeviceModelListDeviceModelListTac(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "tac" -------------

	var tac string
	tac = ctx.Param("tac")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteDeviceModelListDeviceModelListTac(ctx, target, id, tac)
}

// GetDeviceModelListDeviceModelListTac converts echo context to params.
func (w *serverInterfaceWrapper) GetDeviceModelListDeviceModelListTac(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "tac" -------------

	var tac string
	tac = ctx.Param("tac")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetDeviceModelListDeviceModelListTac(ctx, target, id, tac)
}

// PostDeviceModelListDeviceModelListTac converts echo context to params.
func (w *serverInterfaceWrapper) PostDeviceModelListDeviceModelListTac(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "tac" -------------

	var tac string
	tac = ctx.Param("tac")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostDeviceModelListDeviceModelListTac(ctx, target, id, tac)
}

// DeleteEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterprise(ctx, target)
}

// GetEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterprise(ctx, target)
}

// PostEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterprise(ctx, target)
}

// DeleteEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterpriseEnterprise(ctx, target, id)
}

// GetEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterpriseEnterprise(ctx, target, id)
}

// PostEnterpriseEnterprise converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterpriseEnterprise(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterpriseEnterprise(ctx, target, id)
}

// DeleteEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) DeleteEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// GetEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) GetEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// PostEnterpriseEnterpriseConnectivityService converts echo context to params.
func (w *serverInterfaceWrapper) PostEnterpriseEnterpriseConnectivityService(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "connectivity-service" -------------

	var connectivityService string
	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostEnterpriseEnterpriseConnectivityService(ctx, target, id, connectivityService)
}

// DeleteIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) DeleteIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteIpDomain(ctx, target)
}

// GetIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) GetIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetIpDomain(ctx, target)
}

// PostIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) PostIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostIpDomain(ctx, target)
}

// DeleteIpDomainIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) DeleteIpDomainIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteIpDomainIpDomain(ctx, target, id)
}

// GetIpDomainIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) GetIpDomainIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetIpDomainIpDomain(ctx, target, id)
}

// PostIpDomainIpDomain converts echo context to params.
func (w *serverInterfaceWrapper) PostIpDomainIpDomain(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostIpDomainIpDomain(ctx, target, id)
}

// DeleteNetwork converts echo context to params.
func (w *serverInterfaceWrapper) DeleteNetwork(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteNetwork(ctx, target)
}

// GetNetwork converts echo context to params.
func (w *serverInterfaceWrapper) GetNetwork(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetNetwork(ctx, target)
}

// PostNetwork converts echo context to params.
func (w *serverInterfaceWrapper) PostNetwork(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostNetwork(ctx, target)
}

// DeleteNetworkNetwork converts echo context to params.
func (w *serverInterfaceWrapper) DeleteNetworkNetwork(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteNetworkNetwork(ctx, target, id)
}

// GetNetworkNetwork converts echo context to params.
func (w *serverInterfaceWrapper) GetNetworkNetwork(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetNetworkNetwork(ctx, target, id)
}

// PostNetworkNetwork converts echo context to params.
func (w *serverInterfaceWrapper) PostNetworkNetwork(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostNetworkNetwork(ctx, target, id)
}

// DeleteSite converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSite(ctx, target)
}

// GetSite converts echo context to params.
func (w *serverInterfaceWrapper) GetSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSite(ctx, target)
}

// PostSite converts echo context to params.
func (w *serverInterfaceWrapper) PostSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSite(ctx, target)
}

// DeleteSiteSite converts echo context to params.
func (w *serverInterfaceWrapper) DeleteSiteSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteSiteSite(ctx, target, id)
}

// GetSiteSite converts echo context to params.
func (w *serverInterfaceWrapper) GetSiteSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetSiteSite(ctx, target, id)
}

// PostSiteSite converts echo context to params.
func (w *serverInterfaceWrapper) PostSiteSite(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostSiteSite(ctx, target, id)
}

// DeleteTemplate converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplate(ctx, target)
}

// GetTemplate converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplate(ctx, target)
}

// PostTemplate converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplate(ctx, target)
}

// DeleteTemplateTemplate converts echo context to params.
func (w *serverInterfaceWrapper) DeleteTemplateTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteTemplateTemplate(ctx, target, id)
}

// GetTemplateTemplate converts echo context to params.
func (w *serverInterfaceWrapper) GetTemplateTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetTemplateTemplate(ctx, target, id)
}

// PostTemplateTemplate converts echo context to params.
func (w *serverInterfaceWrapper) PostTemplateTemplate(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostTemplateTemplate(ctx, target, id)
}

// DeleteUpf converts echo context to params.
func (w *serverInterfaceWrapper) DeleteUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteUpf(ctx, target)
}

// GetUpf converts echo context to params.
func (w *serverInterfaceWrapper) GetUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetUpf(ctx, target)
}

// PostUpf converts echo context to params.
func (w *serverInterfaceWrapper) PostUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostUpf(ctx, target)
}

// DeleteUpfUpf converts echo context to params.
func (w *serverInterfaceWrapper) DeleteUpfUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteUpfUpf(ctx, target, id)
}

// GetUpfUpf converts echo context to params.
func (w *serverInterfaceWrapper) GetUpfUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetUpfUpf(ctx, target, id)
}

// PostUpfUpf converts echo context to params.
func (w *serverInterfaceWrapper) PostUpfUpf(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostUpfUpf(ctx, target, id)
}

// DeleteVcs converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcs(ctx, target)
}

// GetVcs converts echo context to params.
func (w *serverInterfaceWrapper) GetVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcs(ctx, target)
}

// PostVcs converts echo context to params.
func (w *serverInterfaceWrapper) PostVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcs(ctx, target)
}

// DeleteVcsVcs converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcs(ctx, target, id)
}

// GetVcsVcs converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcs(ctx, target, id)
}

// PostVcsVcs converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcs(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcs(ctx, target, id)
}

// DeleteVcsVcsApplication converts echo context to params.
func (w *serverInterfaceWrapper) DeleteVcsVcsApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.DeleteVcsVcsApplication(ctx, target, id, application)
}

// GetVcsVcsApplication converts echo context to params.
func (w *serverInterfaceWrapper) GetVcsVcsApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.GetVcsVcsApplication(ctx, target, id, application)
}

// PostVcsVcsApplication converts echo context to params.
func (w *serverInterfaceWrapper) PostVcsVcsApplication(ctx echo.Context) error {

	// ------------- Path parameter "target" -------------

	var target externalRef0.Target
	target = externalRef0.Target(ctx.Param("target"))

	// ------------- Path parameter "id" -------------

	var id string
	id = ctx.Param("id")

	// ------------- Path parameter "application" -------------

	var application string
	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	return w.handler.PostVcsVcsApplication(ctx, target, id, application)
}

// This is a simple interface which specifies echo.Route addition functions which
// are present on both echo.Echo and echo.Group, since we want to allow using
// either of them for path registration
type EchoRouter interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router EchoRouter, si ServerInterface, validateResponse bool) error {

	openApiDefinition, err := GetSwagger()
	if err != nil {
		return err
	}
	wrapper := serverInterfaceWrapper{
		handler: si,
	}

	router.DELETE("/aether/v3.0.0/:target/ap-list", wrapper.DeleteApList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/ap-list", wrapper.GetApList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/ap-list", wrapper.PostApList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/ap-list/ap-list/:id", wrapper.DeleteApListApList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/ap-list/ap-list/:id", wrapper.GetApListApList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/ap-list/ap-list/:id", wrapper.PostApListApList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/ap-list/ap-list/:id/access-points/:address", wrapper.DeleteApListApListAccessPoints, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/ap-list/ap-list/:id/access-points/:address", wrapper.GetApListApListAccessPoints, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/ap-list/ap-list/:id/access-points/:address", wrapper.PostApListApListAccessPoints, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/application", wrapper.DeleteApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/application", wrapper.GetApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/application", wrapper.PostApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/application/application/:id", wrapper.DeleteApplicationApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/application/application/:id", wrapper.GetApplicationApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/application/application/:id", wrapper.PostApplicationApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/application/application/:id/endpoint/:name", wrapper.DeleteApplicationApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/application/application/:id/endpoint/:name", wrapper.GetApplicationApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/application/application/:id/endpoint/:name", wrapper.PostApplicationApplicationEndpoint, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/connectivity-service", wrapper.DeleteConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/connectivity-service", wrapper.GetConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/connectivity-service", wrapper.PostConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/connectivity-service/connectivity-service/:id", wrapper.DeleteConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/connectivity-service/connectivity-service/:id", wrapper.GetConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/connectivity-service/connectivity-service/:id", wrapper.PostConnectivityServiceConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/device-group", wrapper.DeleteDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/device-group", wrapper.GetDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/device-group", wrapper.PostDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/device-group/device-group/:id", wrapper.DeleteDeviceGroupDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/device-group/device-group/:id", wrapper.GetDeviceGroupDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/device-group/device-group/:id", wrapper.PostDeviceGroupDeviceGroup, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/device-group/device-group/:id/imsis/:name", wrapper.DeleteDeviceGroupDeviceGroupImsis, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/device-group/device-group/:id/imsis/:name", wrapper.GetDeviceGroupDeviceGroupImsis, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/device-group/device-group/:id/imsis/:name", wrapper.PostDeviceGroupDeviceGroupImsis, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/device-model-list", wrapper.DeleteDeviceModelList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/device-model-list", wrapper.GetDeviceModelList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/device-model-list", wrapper.PostDeviceModelList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/device-model-list/device-model-list/:id", wrapper.DeleteDeviceModelListDeviceModelList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/device-model-list/device-model-list/:id", wrapper.GetDeviceModelListDeviceModelList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/device-model-list/device-model-list/:id", wrapper.PostDeviceModelListDeviceModelList, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/device-model-list/device-model-list/:id/tac/:tac", wrapper.DeleteDeviceModelListDeviceModelListTac, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/device-model-list/device-model-list/:id/tac/:tac", wrapper.GetDeviceModelListDeviceModelListTac, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/device-model-list/device-model-list/:id/tac/:tac", wrapper.PostDeviceModelListDeviceModelListTac, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/enterprise", wrapper.DeleteEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/enterprise", wrapper.GetEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/enterprise", wrapper.PostEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/enterprise/enterprise/:id", wrapper.DeleteEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/enterprise/enterprise/:id", wrapper.GetEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/enterprise/enterprise/:id", wrapper.PostEnterpriseEnterprise, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.DeleteEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.GetEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/enterprise/enterprise/:id/connectivity-service/:connectivity-service", wrapper.PostEnterpriseEnterpriseConnectivityService, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/ip-domain", wrapper.DeleteIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/ip-domain", wrapper.GetIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/ip-domain", wrapper.PostIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/ip-domain/ip-domain/:id", wrapper.DeleteIpDomainIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/ip-domain/ip-domain/:id", wrapper.GetIpDomainIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/ip-domain/ip-domain/:id", wrapper.PostIpDomainIpDomain, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/network", wrapper.DeleteNetwork, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/network", wrapper.GetNetwork, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/network", wrapper.PostNetwork, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/network/network/:id", wrapper.DeleteNetworkNetwork, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/network/network/:id", wrapper.GetNetworkNetwork, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/network/network/:id", wrapper.PostNetworkNetwork, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/site", wrapper.DeleteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/site", wrapper.GetSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/site", wrapper.PostSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/site/site/:id", wrapper.DeleteSiteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/site/site/:id", wrapper.GetSiteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/site/site/:id", wrapper.PostSiteSite, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/template", wrapper.DeleteTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/template", wrapper.GetTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/template", wrapper.PostTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/template/template/:id", wrapper.DeleteTemplateTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/template/template/:id", wrapper.GetTemplateTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/template/template/:id", wrapper.PostTemplateTemplate, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/upf", wrapper.DeleteUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/upf", wrapper.GetUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/upf", wrapper.PostUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/upf/upf/:id", wrapper.DeleteUpfUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/upf/upf/:id", wrapper.GetUpfUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/upf/upf/:id", wrapper.PostUpfUpf, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/vcs", wrapper.DeleteVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/vcs", wrapper.GetVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/vcs", wrapper.PostVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/vcs/vcs/:id", wrapper.DeleteVcsVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/vcs/vcs/:id", wrapper.GetVcsVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/vcs/vcs/:id", wrapper.PostVcsVcs, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.DELETE("/aether/v3.0.0/:target/vcs/vcs/:id/application/:application", wrapper.DeleteVcsVcsApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.GET("/aether/v3.0.0/:target/vcs/vcs/:id/application/:application", wrapper.GetVcsVcsApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))
	router.POST("/aether/v3.0.0/:target/vcs/vcs/:id/application/:application", wrapper.PostVcsVcsApplication, openapi3mw.ValidateOpenapi3(openApiDefinition))

	return nil
}
